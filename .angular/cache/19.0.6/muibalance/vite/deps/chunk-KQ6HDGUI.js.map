{
  "version": 3,
  "sources": ["../../../../../../node_modules/rxdb/dist/esm/hooks.js", "../../../../../../node_modules/rxdb/dist/esm/query-planner.js", "../../../../../../node_modules/mingo/dist/esm/util.js", "../../../../../../node_modules/mingo/dist/esm/core.js", "../../../../../../node_modules/mingo/dist/esm/lazy.js", "../../../../../../node_modules/mingo/dist/esm/operators/pipeline/limit.js", "../../../../../../node_modules/mingo/dist/esm/operators/pipeline/project.js", "../../../../../../node_modules/mingo/dist/esm/operators/pipeline/skip.js", "../../../../../../node_modules/mingo/dist/esm/operators/pipeline/sort.js", "../../../../../../node_modules/mingo/dist/esm/cursor.js", "../../../../../../node_modules/mingo/dist/esm/query.js", "../../../../../../node_modules/mingo/dist/esm/operators/pipeline/bucketAuto.js", "../../../../../../node_modules/mingo/dist/esm/operators/expression/date/_internal.js", "../../../../../../node_modules/mingo/dist/esm/operators/pipeline/densify.js", "../../../../../../node_modules/mingo/dist/esm/operators/window/_internal.js", "../../../../../../node_modules/mingo/dist/esm/operators/_predicates.js", "../../../../../../node_modules/mingo/dist/esm/operators/expression/array/nin.js", "../../../../../../node_modules/mingo/dist/esm/operators/expression/bitwise/_internal.js", "../../../../../../node_modules/mingo/dist/esm/operators/expression/bitwise/bitAnd.js", "../../../../../../node_modules/mingo/dist/esm/operators/expression/bitwise/bitOr.js", "../../../../../../node_modules/mingo/dist/esm/operators/expression/bitwise/bitXor.js", "../../../../../../node_modules/mingo/dist/esm/operators/expression/comparison/eq.js", "../../../../../../node_modules/mingo/dist/esm/operators/expression/comparison/gt.js", "../../../../../../node_modules/mingo/dist/esm/operators/expression/comparison/gte.js", "../../../../../../node_modules/mingo/dist/esm/operators/expression/comparison/lt.js", "../../../../../../node_modules/mingo/dist/esm/operators/expression/comparison/lte.js", "../../../../../../node_modules/mingo/dist/esm/operators/expression/comparison/ne.js", "../../../../../../node_modules/mingo/dist/esm/operators/expression/date/dateFromString.js", "../../../../../../node_modules/mingo/dist/esm/operators/expression/trignometry/_internal.js", "../../../../../../node_modules/mingo/dist/esm/operators/expression/trignometry/acos.js", "../../../../../../node_modules/mingo/dist/esm/operators/expression/trignometry/acosh.js", "../../../../../../node_modules/mingo/dist/esm/operators/expression/trignometry/asin.js", "../../../../../../node_modules/mingo/dist/esm/operators/expression/trignometry/asinh.js", "../../../../../../node_modules/mingo/dist/esm/operators/expression/trignometry/atan.js", "../../../../../../node_modules/mingo/dist/esm/operators/expression/trignometry/atanh.js", "../../../../../../node_modules/mingo/dist/esm/operators/expression/trignometry/cos.js", "../../../../../../node_modules/mingo/dist/esm/operators/expression/trignometry/cosh.js", "../../../../../../node_modules/mingo/dist/esm/operators/expression/trignometry/degreesToRadians.js", "../../../../../../node_modules/mingo/dist/esm/operators/expression/trignometry/radiansToDegrees.js", "../../../../../../node_modules/mingo/dist/esm/operators/expression/trignometry/sin.js", "../../../../../../node_modules/mingo/dist/esm/operators/expression/trignometry/sinh.js", "../../../../../../node_modules/mingo/dist/esm/operators/expression/trignometry/tan.js", "../../../../../../node_modules/mingo/dist/esm/operators/expression/type/_internal.js", "../../../../../../node_modules/mingo/dist/esm/operators/query/logical/and.js", "../../../../../../node_modules/mingo/dist/esm/operators/query/logical/or.js", "../../../../../../node_modules/mingo/dist/esm/operators/query/logical/nor.js", "../../../../../../node_modules/mingo/dist/esm/operators/query/logical/not.js", "../../../../../../node_modules/mingo/dist/esm/operators/query/comparison/eq.js", "../../../../../../node_modules/mingo/dist/esm/operators/query/comparison/gt.js", "../../../../../../node_modules/mingo/dist/esm/operators/query/comparison/gte.js", "../../../../../../node_modules/mingo/dist/esm/operators/query/comparison/in.js", "../../../../../../node_modules/mingo/dist/esm/operators/query/comparison/lt.js", "../../../../../../node_modules/mingo/dist/esm/operators/query/comparison/lte.js", "../../../../../../node_modules/mingo/dist/esm/operators/query/comparison/ne.js", "../../../../../../node_modules/mingo/dist/esm/operators/query/comparison/nin.js", "../../../../../../node_modules/mingo/dist/esm/operators/query/evaluation/mod.js", "../../../../../../node_modules/mingo/dist/esm/operators/query/evaluation/regex.js", "../../../../../../node_modules/mingo/dist/esm/operators/query/array/all.js", "../../../../../../node_modules/mingo/dist/esm/operators/query/array/elemMatch.js", "../../../../../../node_modules/mingo/dist/esm/operators/query/array/size.js", "../../../../../../node_modules/mingo/dist/esm/operators/query/element/exists.js", "../../../../../../node_modules/mingo/dist/esm/operators/query/element/type.js", "../../../../../../node_modules/rxdb/dist/esm/rx-query-mingo.js", "../../../../../../node_modules/rxdb/dist/esm/rx-query-helper.js", "../../../../../../node_modules/rxdb/dist/esm/rx-storage-helper.js", "../../../../../../node_modules/broadcast-channel/dist/esbrowser/util.js", "../../../../../../node_modules/broadcast-channel/dist/esbrowser/methods/native.js", "../../../../../../node_modules/oblivious-set/dist/esm/src/index.js", "../../../../../../node_modules/broadcast-channel/dist/esbrowser/options.js", "../../../../../../node_modules/broadcast-channel/dist/esbrowser/methods/indexed-db.js", "../../../../../../node_modules/broadcast-channel/dist/esbrowser/methods/localstorage.js", "../../../../../../node_modules/broadcast-channel/dist/esbrowser/methods/simulate.js", "../../../../../../node_modules/broadcast-channel/dist/esbrowser/method-chooser.js", "../../../../../../node_modules/broadcast-channel/dist/esbrowser/broadcast-channel.js", "../../../../../../node_modules/unload/dist/es/browser.js", "../../../../../../node_modules/unload/dist/es/node.js", "../../../../../../node_modules/unload/dist/es/index.js", "../../../../../../node_modules/broadcast-channel/dist/esbrowser/leader-election-util.js", "../../../../../../node_modules/broadcast-channel/dist/esbrowser/leader-election-web-lock.js", "../../../../../../node_modules/broadcast-channel/dist/esbrowser/leader-election.js", "../../../../../../node_modules/rxdb/dist/esm/rx-storage-multiinstance.js"],
  "sourcesContent": ["/**\n * hook-functions that can be extended by the plugin\n */\nexport var HOOKS = {\n  /**\n   * Runs before a plugin is added.\n   * Use this to block the usage of non-compatible plugins.\n   */\n  preAddRxPlugin: [],\n  /**\n   * functions that run before the database is created\n   */\n  preCreateRxDatabase: [],\n  /**\n   * runs after the database is created and prepared\n   * but before the instance is returned to the user\n   * @async\n   */\n  createRxDatabase: [],\n  preCreateRxCollection: [],\n  createRxCollection: [],\n  createRxState: [],\n  /**\n  * runs at the end of the close-process of a collection\n  * @async\n  */\n  postCloseRxCollection: [],\n  /**\n   * Runs after a collection is removed.\n   * @async\n   */\n  postRemoveRxCollection: [],\n  /**\n    * functions that get the json-schema as input\n    * to do additionally checks/manipulation\n    */\n  preCreateRxSchema: [],\n  /**\n   * functions that run after the RxSchema is created\n   * gets RxSchema as attribute\n   */\n  createRxSchema: [],\n  prePrepareRxQuery: [],\n  preCreateRxQuery: [],\n  /**\n   * Runs before a query is send to the\n   * prepareQuery function of the storage engine.\n   */\n  prePrepareQuery: [],\n  createRxDocument: [],\n  /**\n   * runs after a RxDocument is created,\n   * cannot be async\n   */\n  postCreateRxDocument: [],\n  /**\n   * Runs before a RxStorageInstance is created\n   * gets the params of createStorageInstance()\n   * as attribute so you can manipulate them.\n   * Notice that you have to clone stuff before mutating the inputs.\n   */\n  preCreateRxStorageInstance: [],\n  preStorageWrite: [],\n  /**\n   * runs on the document-data before the document is migrated\n   * {\n   *   doc: Object, // original doc-data\n   *   migrated: // migrated doc-data after run through migration-strategies\n   * }\n   */\n  preMigrateDocument: [],\n  /**\n   * runs after the migration of a document has been done\n   */\n  postMigrateDocument: [],\n  /**\n   * runs at the beginning of the close-process of a database\n   */\n  preCloseRxDatabase: [],\n  /**\n   * runs after a database has been removed\n   * @async\n   */\n  postRemoveRxDatabase: [],\n  postCleanup: [],\n  /**\n   * runs before the replication writes the rows to master\n   * but before the rows have been modified\n   * @async\n   */\n  preReplicationMasterWrite: [],\n  /**\n   * runs after the replication has been sent to the server\n   * but before the new documents have been handled\n   * @async\n   */\n  preReplicationMasterWriteDocumentsHandle: []\n};\nexport function runPluginHooks(hookKey, obj) {\n  if (HOOKS[hookKey].length > 0) {\n    HOOKS[hookKey].forEach(fun => fun(obj));\n  }\n}\n\n/**\n * We do intentionally not run the hooks in parallel\n * because that makes stuff unpredictable and we use runAsyncPluginHooks()\n * only in places that are not that relevant for performance.\n */\nexport async function runAsyncPluginHooks(hookKey, obj) {\n  for (var fn of HOOKS[hookKey]) {\n    await fn(obj);\n  }\n}\n\n/**\n * used in tests to remove hooks\n */\nexport function _clearHook(type, fun) {\n  HOOKS[type] = HOOKS[type].filter(h => h !== fun);\n}\n", "import { countUntilNotMatching } from \"./plugins/utils/index.js\";\nimport { newRxError } from \"./rx-error.js\";\nimport { getSchemaByObjectPath } from \"./rx-schema-helper.js\";\nexport var INDEX_MAX = String.fromCharCode(65535);\n\n/**\n * Do not use -Infinity here because it would be\n * transformed to null on JSON.stringify() which can break things\n * when the query plan is send to the storage as json.\n * @link https://stackoverflow.com/a/16644751\n * Notice that for IndexedDB IDBKeyRange we have\n * to transform the value back to -Infinity\n * before we can use it in IDBKeyRange.bound.\n */\nexport var INDEX_MIN = Number.MIN_SAFE_INTEGER;\n\n/**\n * Returns the query plan which contains\n * information about how to run the query\n * and which indexes to use.\n *\n * This is used in some storage like Memory, dexie.js and IndexedDB.\n */\nexport function getQueryPlan(schema, query) {\n  var selector = query.selector;\n  var indexes = schema.indexes ? schema.indexes.slice(0) : [];\n  if (query.index) {\n    indexes = [query.index];\n  }\n\n  /**\n   * Most storages do not support descending indexes\n   * so having a 'desc' in the sorting, means we always have to re-sort the results.\n   */\n  var hasDescSorting = !!query.sort.find(sortField => Object.values(sortField)[0] === 'desc');\n\n  /**\n   * Some fields can be part of the selector while not being relevant for sorting\n   * because their selector operators specify that in all cases all matching docs\n   * would have the same value.\n   * For example the boolean field _deleted.\n   * TODO similar thing could be done for enums.\n   */\n  var sortIrrelevevantFields = new Set();\n  Object.keys(selector).forEach(fieldName => {\n    var schemaPart = getSchemaByObjectPath(schema, fieldName);\n    if (schemaPart && schemaPart.type === 'boolean' && Object.prototype.hasOwnProperty.call(selector[fieldName], '$eq')) {\n      sortIrrelevevantFields.add(fieldName);\n    }\n  });\n  var optimalSortIndex = query.sort.map(sortField => Object.keys(sortField)[0]);\n  var optimalSortIndexCompareString = optimalSortIndex.filter(f => !sortIrrelevevantFields.has(f)).join(',');\n  var currentBestQuality = -1;\n  var currentBestQueryPlan;\n\n  /**\n   * Calculate one query plan for each index\n   * and then test which of the plans is best.\n   */\n  indexes.forEach(index => {\n    var inclusiveEnd = true;\n    var inclusiveStart = true;\n    var opts = index.map(indexField => {\n      var matcher = selector[indexField];\n      var operators = matcher ? Object.keys(matcher) : [];\n      var matcherOpts = {};\n      if (!matcher || !operators.length) {\n        var startKey = inclusiveStart ? INDEX_MIN : INDEX_MAX;\n        matcherOpts = {\n          startKey,\n          endKey: inclusiveEnd ? INDEX_MAX : INDEX_MIN,\n          inclusiveStart: true,\n          inclusiveEnd: true\n        };\n      } else {\n        operators.forEach(operator => {\n          if (LOGICAL_OPERATORS.has(operator)) {\n            var operatorValue = matcher[operator];\n            var partialOpts = getMatcherQueryOpts(operator, operatorValue);\n            matcherOpts = Object.assign(matcherOpts, partialOpts);\n          }\n        });\n      }\n\n      // fill missing attributes\n      if (typeof matcherOpts.startKey === 'undefined') {\n        matcherOpts.startKey = INDEX_MIN;\n      }\n      if (typeof matcherOpts.endKey === 'undefined') {\n        matcherOpts.endKey = INDEX_MAX;\n      }\n      if (typeof matcherOpts.inclusiveStart === 'undefined') {\n        matcherOpts.inclusiveStart = true;\n      }\n      if (typeof matcherOpts.inclusiveEnd === 'undefined') {\n        matcherOpts.inclusiveEnd = true;\n      }\n      if (inclusiveStart && !matcherOpts.inclusiveStart) {\n        inclusiveStart = false;\n      }\n      if (inclusiveEnd && !matcherOpts.inclusiveEnd) {\n        inclusiveEnd = false;\n      }\n      return matcherOpts;\n    });\n    var startKeys = opts.map(opt => opt.startKey);\n    var endKeys = opts.map(opt => opt.endKey);\n    var queryPlan = {\n      index,\n      startKeys,\n      endKeys,\n      inclusiveEnd,\n      inclusiveStart,\n      sortSatisfiedByIndex: !hasDescSorting && optimalSortIndexCompareString === index.filter(f => !sortIrrelevevantFields.has(f)).join(','),\n      selectorSatisfiedByIndex: isSelectorSatisfiedByIndex(index, query.selector, startKeys, endKeys)\n    };\n    var quality = rateQueryPlan(schema, query, queryPlan);\n    if (quality >= currentBestQuality || query.index) {\n      currentBestQuality = quality;\n      currentBestQueryPlan = queryPlan;\n    }\n  });\n\n  /**\n   * In all cases and index must be found\n   */\n  if (!currentBestQueryPlan) {\n    throw newRxError('SNH', {\n      query\n    });\n  }\n  return currentBestQueryPlan;\n}\nexport var LOGICAL_OPERATORS = new Set(['$eq', '$gt', '$gte', '$lt', '$lte']);\nexport var LOWER_BOUND_LOGICAL_OPERATORS = new Set(['$eq', '$gt', '$gte']);\nexport var UPPER_BOUND_LOGICAL_OPERATORS = new Set(['$eq', '$lt', '$lte']);\nexport function isSelectorSatisfiedByIndex(index, selector, startKeys, endKeys) {\n  /**\n   * Not satisfied if one or more operators are non-logical\n   * operators that can never be satisfied by an index.\n   */\n  var selectorEntries = Object.entries(selector);\n  var hasNonMatchingOperator = selectorEntries.find(([fieldName, operation]) => {\n    if (!index.includes(fieldName)) {\n      return true;\n    }\n    var hasNonLogicOperator = Object.entries(operation).find(([op, _value]) => !LOGICAL_OPERATORS.has(op));\n    return hasNonLogicOperator;\n  });\n  if (hasNonMatchingOperator) {\n    return false;\n  }\n\n  /**\n   * Not satisfied if contains $and or $or operations.\n   */\n  if (selector.$and || selector.$or) {\n    return false;\n  }\n\n  // ensure all lower bound in index\n  var satisfieldLowerBound = [];\n  var lowerOperatorFieldNames = new Set();\n  for (var [fieldName, operation] of Object.entries(selector)) {\n    if (!index.includes(fieldName)) {\n      return false;\n    }\n\n    // If more then one logic op on the same field, we have to selector-match.\n    var lowerLogicOps = Object.keys(operation).filter(key => LOWER_BOUND_LOGICAL_OPERATORS.has(key));\n    if (lowerLogicOps.length > 1) {\n      return false;\n    }\n    var hasLowerLogicOp = lowerLogicOps[0];\n    if (hasLowerLogicOp) {\n      lowerOperatorFieldNames.add(fieldName);\n    }\n    if (hasLowerLogicOp !== '$eq') {\n      if (satisfieldLowerBound.length > 0) {\n        return false;\n      } else {\n        satisfieldLowerBound.push(hasLowerLogicOp);\n      }\n    }\n  }\n\n  // ensure all upper bound in index\n  var satisfieldUpperBound = [];\n  var upperOperatorFieldNames = new Set();\n  for (var [_fieldName, _operation] of Object.entries(selector)) {\n    if (!index.includes(_fieldName)) {\n      return false;\n    }\n\n    // If more then one logic op on the same field, we have to selector-match.\n    var upperLogicOps = Object.keys(_operation).filter(key => UPPER_BOUND_LOGICAL_OPERATORS.has(key));\n    if (upperLogicOps.length > 1) {\n      return false;\n    }\n    var hasUperLogicOp = upperLogicOps[0];\n    if (hasUperLogicOp) {\n      upperOperatorFieldNames.add(_fieldName);\n    }\n    if (hasUperLogicOp !== '$eq') {\n      if (satisfieldUpperBound.length > 0) {\n        return false;\n      } else {\n        satisfieldUpperBound.push(hasUperLogicOp);\n      }\n    }\n  }\n\n  /**\n   * If the index contains a non-relevant field between\n   * the relevant fields, then the index is not satisfying.\n   */\n  var i = 0;\n  for (var _fieldName2 of index) {\n    for (var set of [lowerOperatorFieldNames, upperOperatorFieldNames]) {\n      if (!set.has(_fieldName2) && set.size > 0) {\n        return false;\n      }\n      set.delete(_fieldName2);\n    }\n    var startKey = startKeys[i];\n    var endKey = endKeys[i];\n    if (startKey !== endKey && lowerOperatorFieldNames.size > 0 && upperOperatorFieldNames.size > 0) {\n      return false;\n    }\n    i++;\n  }\n  return true;\n}\nexport function getMatcherQueryOpts(operator, operatorValue) {\n  switch (operator) {\n    case '$eq':\n      return {\n        startKey: operatorValue,\n        endKey: operatorValue,\n        inclusiveEnd: true,\n        inclusiveStart: true\n      };\n    case '$lte':\n      return {\n        endKey: operatorValue,\n        inclusiveEnd: true\n      };\n    case '$gte':\n      return {\n        startKey: operatorValue,\n        inclusiveStart: true\n      };\n    case '$lt':\n      return {\n        endKey: operatorValue,\n        inclusiveEnd: false\n      };\n    case '$gt':\n      return {\n        startKey: operatorValue,\n        inclusiveStart: false\n      };\n    default:\n      throw new Error('SNH');\n  }\n}\n\n/**\n * Returns a number that determines the quality of the query plan.\n * Higher number means better query plan.\n */\nexport function rateQueryPlan(schema, query, queryPlan) {\n  var quality = 0;\n  var addQuality = value => {\n    if (value > 0) {\n      quality = quality + value;\n    }\n  };\n  var pointsPerMatchingKey = 10;\n  var nonMinKeyCount = countUntilNotMatching(queryPlan.startKeys, keyValue => keyValue !== INDEX_MIN && keyValue !== INDEX_MAX);\n  addQuality(nonMinKeyCount * pointsPerMatchingKey);\n  var nonMaxKeyCount = countUntilNotMatching(queryPlan.startKeys, keyValue => keyValue !== INDEX_MAX && keyValue !== INDEX_MIN);\n  addQuality(nonMaxKeyCount * pointsPerMatchingKey);\n  var equalKeyCount = countUntilNotMatching(queryPlan.startKeys, (keyValue, idx) => {\n    if (keyValue === queryPlan.endKeys[idx]) {\n      return true;\n    } else {\n      return false;\n    }\n  });\n  addQuality(equalKeyCount * pointsPerMatchingKey * 1.5);\n  var pointsIfNoReSortMustBeDone = queryPlan.sortSatisfiedByIndex ? 5 : 0;\n  addQuality(pointsIfNoReSortMustBeDone);\n  return quality;\n}\n", "class MingoError extends Error {}\nconst MISSING = Symbol(\"missing\");\nconst CYCLE_FOUND_ERROR = Object.freeze(new Error(\"mingo: cycle detected while processing object/array\"));\nconst DEFAULT_HASH_FUNCTION = value => {\n  const s = stringify(value);\n  let hash = 0;\n  let i = s.length;\n  while (i) hash = (hash << 5) - hash ^ s.charCodeAt(--i);\n  return hash >>> 0;\n};\nconst isPrimitive = v => typeof v !== \"object\" && typeof v !== \"function\" || v === null;\nconst isScalar = v => isPrimitive(v) || isDate(v) || isRegExp(v);\nconst SORT_ORDER = {\n  undefined: 1,\n  null: 2,\n  number: 3,\n  string: 4,\n  symbol: 5,\n  object: 6,\n  array: 7,\n  arraybuffer: 8,\n  boolean: 9,\n  date: 10,\n  regexp: 11,\n  function: 12\n};\nconst compare = (a, b) => {\n  if (a === MISSING) a = void 0;\n  if (b === MISSING) b = void 0;\n  const [u, v] = [a, b].map(n => SORT_ORDER[typeOf(n)]);\n  if (u !== v) return u - v;\n  if (isEqual(a, b)) return 0;\n  if (a < b) return -1;\n  if (a > b) return 1;\n  return 0;\n};\nclass ValueMap extends Map {\n  // The hash function\n  #hashFn = DEFAULT_HASH_FUNCTION;\n  // maps the hashcode to key set\n  #keyMap = /* @__PURE__ */new Map();\n  // returns a tuple of [<masterKey>, <hash>]. Expects an object key.\n  #unpack = key => {\n    const hash = this.#hashFn(key);\n    return [(this.#keyMap.get(hash) || []).find(k => isEqual(k, key)), hash];\n  };\n  constructor() {\n    super();\n  }\n  /**\n   * Returns a new {@link ValueMap} object.\n   * @param fn An optional custom hash function\n   */\n  static init(fn) {\n    const m = new ValueMap();\n    if (fn) m.#hashFn = fn;\n    return m;\n  }\n  clear() {\n    super.clear();\n    this.#keyMap.clear();\n  }\n  /**\n   * @returns true if an element in the Map existed and has been removed, or false if the element does not exist.\n   */\n  delete(key) {\n    if (isPrimitive(key)) return super.delete(key);\n    const [masterKey, hash] = this.#unpack(key);\n    if (!super.delete(masterKey)) return false;\n    this.#keyMap.set(hash, this.#keyMap.get(hash).filter(k => !isEqual(k, masterKey)));\n    return true;\n  }\n  /**\n   * Returns a specified element from the Map object. If the value that is associated to the provided key is an object, then you will get a reference to that object and any change made to that object will effectively modify it inside the Map.\n   * @returns Returns the element associated with the specified key. If no element is associated with the specified key, undefined is returned.\n   */\n  get(key) {\n    if (isPrimitive(key)) return super.get(key);\n    const [masterKey, _] = this.#unpack(key);\n    return super.get(masterKey);\n  }\n  /**\n   * @returns boolean indicating whether an element with the specified key exists or not.\n   */\n  has(key) {\n    if (isPrimitive(key)) return super.has(key);\n    const [masterKey, _] = this.#unpack(key);\n    return super.has(masterKey);\n  }\n  /**\n   * Adds a new element with a specified key and value to the Map. If an element with the same key already exists, the element will be updated.\n   */\n  set(key, value) {\n    if (isPrimitive(key)) return super.set(key, value);\n    const [masterKey, hash] = this.#unpack(key);\n    if (super.has(masterKey)) {\n      super.set(masterKey, value);\n    } else {\n      super.set(key, value);\n      const keys = this.#keyMap.get(hash) || [];\n      keys.push(key);\n      this.#keyMap.set(hash, keys);\n    }\n    return this;\n  }\n  /**\n   * @returns the number of elements in the Map.\n   */\n  get size() {\n    return super.size;\n  }\n}\nfunction assert(condition, message) {\n  if (!condition) throw new MingoError(message);\n}\nconst typeOf = v => {\n  const s = Object.prototype.toString.call(v);\n  const t = s.substring(8, s.length - 1).toLowerCase();\n  if (t !== \"object\") return t;\n  const ctor = v.constructor;\n  return ctor == null || ctor === Object ? t : ctor.name;\n};\nconst isBoolean = v => typeof v === \"boolean\";\nconst isString = v => typeof v === \"string\";\nconst isSymbol = v => typeof v === \"symbol\";\nconst isNumber = v => !isNaN(v) && typeof v === \"number\";\nconst isNotNaN = v => !(isNaN(v) && typeof v === \"number\");\nconst isArray = Array.isArray;\nconst isObject = v => {\n  if (!v) return false;\n  const p = Object.getPrototypeOf(v);\n  return (p === Object.prototype || p === null) && typeOf(v) === \"object\";\n};\nconst isObjectLike = v => !isPrimitive(v);\nconst isDate = v => v instanceof Date;\nconst isRegExp = v => v instanceof RegExp;\nconst isFunction = v => typeof v === \"function\";\nconst isNil = v => v === null || v === void 0;\nconst truthy = (arg, strict = true) => !!arg || strict && arg === \"\";\nconst isEmpty = x => isNil(x) || isString(x) && !x || isArray(x) && x.length === 0 || isObject(x) && Object.keys(x).length === 0;\nconst ensureArray = x => isArray(x) ? x : [x];\nconst has = (obj, prop) => !!obj && Object.prototype.hasOwnProperty.call(obj, prop);\nconst isTypedArray = v => typeof ArrayBuffer !== \"undefined\" && ArrayBuffer.isView(v);\nconst cloneDeep = (v, refs) => {\n  if (isNil(v) || isBoolean(v) || isNumber(v) || isString(v)) return v;\n  if (isDate(v)) return new Date(v);\n  if (isRegExp(v)) return new RegExp(v);\n  if (isTypedArray(v)) {\n    const ctor = v.constructor;\n    return new ctor(v);\n  }\n  if (!(refs instanceof Set)) refs = /* @__PURE__ */new Set();\n  if (refs.has(v)) throw CYCLE_FOUND_ERROR;\n  refs.add(v);\n  try {\n    if (isArray(v)) {\n      const arr = new Array(v.length);\n      for (let i = 0; i < v.length; i++) arr[i] = cloneDeep(v[i], refs);\n      return arr;\n    }\n    if (isObject(v)) {\n      const obj = {};\n      for (const k of Object.keys(v)) obj[k] = cloneDeep(v[k], refs);\n      return obj;\n    }\n  } finally {\n    refs.delete(v);\n  }\n  return v;\n};\nconst isMissing = v => v === MISSING;\nfunction merge(target, input) {\n  if (isMissing(target) || isNil(target)) return input;\n  if (isMissing(input) || isNil(input)) return target;\n  if (isPrimitive(target) || isPrimitive(input)) return input;\n  if (isArray(target) && isArray(input)) {\n    assert(target.length === input.length, \"arrays must be of equal length to merge.\");\n  }\n  for (const k of Object.keys(input)) {\n    target[k] = merge(target[k], input[k]);\n  }\n  return target;\n}\nfunction intersection(input, hashFunction = DEFAULT_HASH_FUNCTION) {\n  const vmaps = [ValueMap.init(hashFunction), ValueMap.init(hashFunction)];\n  if (input.length === 0) return [];\n  if (input.some(arr => arr.length === 0)) return [];\n  if (input.length === 1) return [...input];\n  input[input.length - 1].forEach(v => vmaps[0].set(v, true));\n  for (let i = input.length - 2; i > -1; i--) {\n    input[i].forEach(v => {\n      if (vmaps[0].has(v)) vmaps[1].set(v, true);\n    });\n    if (vmaps[1].size === 0) return [];\n    vmaps.reverse();\n    vmaps[1].clear();\n  }\n  return Array.from(vmaps[0].keys());\n}\nfunction flatten(xs, depth = 1) {\n  const arr = new Array();\n  function flatten2(ys, n) {\n    for (let i = 0, len = ys.length; i < len; i++) {\n      if (isArray(ys[i]) && (n > 0 || n < 0)) {\n        flatten2(ys[i], Math.max(-1, n - 1));\n      } else {\n        arr.push(ys[i]);\n      }\n    }\n  }\n  flatten2(xs, depth);\n  return arr;\n}\nconst objToString = Object.prototype.toString;\nfunction hasCustomToString(o) {\n  if (isTypedArray(o)) return true;\n  if (typeof o.toString === \"function\") {\n    let proto = Object.getPrototypeOf(o);\n    while (proto !== null) {\n      if (has(proto, \"toString\") && proto.toString !== objToString) {\n        return true;\n      }\n      proto = Object.getPrototypeOf(proto);\n    }\n  }\n  return false;\n}\nfunction isEqual(a, b) {\n  if (a === b || Object.is(a, b)) return true;\n  if (a === null || b === null) return false;\n  if (typeof a !== typeof b) return false;\n  if (typeof a !== \"object\") return false;\n  if (a.constructor !== b.constructor) return false;\n  if (a instanceof Date) return +a === +b;\n  if (a instanceof RegExp) return a.toString() === b.toString();\n  const ctor = a.constructor;\n  if (ctor === Array || ctor === Object) {\n    const aKeys = Object.keys(a).sort();\n    const bKeys = Object.keys(b).sort();\n    if (aKeys.length !== bKeys.length) return false;\n    for (let i = 0, k = aKeys[i]; i < aKeys.length; k = aKeys[++i]) {\n      if (k !== bKeys[i] || !isEqual(a[k], b[k])) return false;\n    }\n    return true;\n  }\n  return hasCustomToString(a) && a.toString() === b.toString();\n}\nfunction unique(input, hashFunction = DEFAULT_HASH_FUNCTION) {\n  const m = ValueMap.init(hashFunction);\n  input.forEach(v => m.set(v, true));\n  return Array.from(m.keys());\n}\nconst stringify = (v, refs) => {\n  if (v === null) return \"null\";\n  if (v === void 0) return \"undefined\";\n  if (isString(v) || isNumber(v) || isBoolean(v)) return JSON.stringify(v);\n  if (isDate(v)) return v.toISOString();\n  if (isRegExp(v) || isSymbol(v) || isFunction(v)) return v.toString();\n  if (isTypedArray(v)) return typeOf(v) + \"[\" + v.toString() + \"]\";\n  if (!(refs instanceof Set)) refs = /* @__PURE__ */new Set();\n  if (refs.has(v)) throw CYCLE_FOUND_ERROR;\n  try {\n    refs.add(v);\n    if (isArray(v)) return \"[\" + v.map(s => stringify(s, refs)).join(\",\") + \"]\";\n    if (isObject(v)) {\n      const keys = Object.keys(v).sort();\n      return \"{\" + keys.map(k => `${k}:${stringify(v[k], refs)}`).join() + \"}\";\n    }\n    if (hasCustomToString(v)) {\n      return typeOf(v) + \"(\" + JSON.stringify(v.toString()) + \")\";\n    }\n    throw new Error(\"mingo: cannot stringify custom type without explicit toString() method.\");\n  } finally {\n    refs.delete(v);\n  }\n};\nfunction hashCode(value, hashFunction) {\n  if (isNil(value)) return null;\n  hashFunction = hashFunction || DEFAULT_HASH_FUNCTION;\n  return hashFunction(value);\n}\nfunction groupBy(collection, keyFn, hashFunction = DEFAULT_HASH_FUNCTION) {\n  if (collection.length < 1) return /* @__PURE__ */new Map();\n  const lookup = /* @__PURE__ */new Map();\n  const result = /* @__PURE__ */new Map();\n  for (let i = 0; i < collection.length; i++) {\n    const obj = collection[i];\n    const key = keyFn(obj, i);\n    const hash = hashCode(key, hashFunction);\n    if (hash === null) {\n      if (result.has(null)) {\n        result.get(null).push(obj);\n      } else {\n        result.set(null, [obj]);\n      }\n    } else {\n      const existingKey = lookup.has(hash) ? lookup.get(hash).find(k => isEqual(k, key)) : null;\n      if (isNil(existingKey)) {\n        result.set(key, [obj]);\n        if (lookup.has(hash)) {\n          lookup.get(hash).push(key);\n        } else {\n          lookup.set(hash, [key]);\n        }\n      } else {\n        result.get(existingKey).push(obj);\n      }\n    }\n  }\n  return result;\n}\nconst MAX_ARRAY_PUSH = 5e4;\nfunction into(target, ...rest) {\n  if (isArray(target)) {\n    for (const arr of rest) {\n      let i = Math.ceil(arr.length / MAX_ARRAY_PUSH);\n      let begin = 0;\n      while (i-- > 0) {\n        Array.prototype.push.apply(target, arr.slice(begin, begin + MAX_ARRAY_PUSH));\n        begin += MAX_ARRAY_PUSH;\n      }\n    }\n    return target;\n  } else {\n    return rest.filter(isObjectLike).reduce((acc, item) => {\n      Object.assign(acc, item);\n      return acc;\n    }, target);\n  }\n}\nfunction getValue(obj, key) {\n  return isArray(obj) || isObject(obj) ? obj[key] : void 0;\n}\nfunction unwrap(arr, depth) {\n  if (depth < 1) return arr;\n  while (depth-- && arr.length === 1) arr = arr[0];\n  return arr;\n}\nfunction resolve(obj, selector, options) {\n  let depth = 0;\n  function resolve2(o, path) {\n    let value = o;\n    for (let i = 0; i < path.length; i++) {\n      const field = path[i];\n      const isText = /^\\d+$/.exec(field) === null;\n      if (isText && isArray(value)) {\n        if (i === 0 && depth > 0) break;\n        depth += 1;\n        const subpath = path.slice(i);\n        value = value.reduce((acc, item) => {\n          const v = resolve2(item, subpath);\n          if (v !== void 0) acc.push(v);\n          return acc;\n        }, []);\n        break;\n      } else {\n        value = getValue(value, field);\n      }\n      if (value === void 0) break;\n    }\n    return value;\n  }\n  const res = isScalar(obj) ? obj : resolve2(obj, selector.split(\".\"));\n  return isArray(res) && options?.unwrapArray ? unwrap(res, depth) : res;\n}\nfunction resolveGraph(obj, selector, options) {\n  const sep = selector.indexOf(\".\");\n  const key = sep == -1 ? selector : selector.substring(0, sep);\n  const next = selector.substring(sep + 1);\n  const hasNext = sep != -1;\n  if (isArray(obj)) {\n    const isIndex = /^\\d+$/.test(key);\n    const arr = isIndex && options?.preserveIndex ? [...obj] : [];\n    if (isIndex) {\n      const index = parseInt(key);\n      let value2 = getValue(obj, index);\n      if (hasNext) {\n        value2 = resolveGraph(value2, next, options);\n      }\n      if (options?.preserveIndex) {\n        arr[index] = value2;\n      } else {\n        arr.push(value2);\n      }\n    } else {\n      for (const item of obj) {\n        const value2 = resolveGraph(item, selector, options);\n        if (options?.preserveMissing) {\n          arr.push(value2 == void 0 ? MISSING : value2);\n        } else if (value2 != void 0 || options?.preserveIndex) {\n          arr.push(value2);\n        }\n      }\n    }\n    return arr;\n  }\n  const res = options?.preserveKeys ? {\n    ...obj\n  } : {};\n  let value = getValue(obj, key);\n  if (hasNext) {\n    value = resolveGraph(value, next, options);\n  }\n  if (value === void 0) return void 0;\n  res[key] = value;\n  return res;\n}\nfunction filterMissing(obj) {\n  if (isArray(obj)) {\n    for (let i = obj.length - 1; i >= 0; i--) {\n      if (obj[i] === MISSING) {\n        obj.splice(i, 1);\n      } else {\n        filterMissing(obj[i]);\n      }\n    }\n  } else if (isObject(obj)) {\n    for (const k in obj) {\n      if (has(obj, k)) {\n        filterMissing(obj[k]);\n      }\n    }\n  }\n}\nconst NUMBER_RE = /^\\d+$/;\nfunction walk(obj, selector, fn, options) {\n  const names = selector.split(\".\");\n  const key = names[0];\n  const next = names.slice(1).join(\".\");\n  if (names.length === 1) {\n    if (isObject(obj) || isArray(obj) && NUMBER_RE.test(key)) {\n      fn(obj, key);\n    }\n  } else {\n    if (options?.buildGraph && isNil(obj[key])) {\n      obj[key] = {};\n    }\n    const item = obj[key];\n    if (!item) return;\n    const isNextArrayIndex = !!(names.length > 1 && NUMBER_RE.test(names[1]));\n    if (isArray(item) && options?.descendArray && !isNextArrayIndex) {\n      item.forEach(e => walk(e, next, fn, options));\n    } else {\n      walk(item, next, fn, options);\n    }\n  }\n}\nfunction setValue(obj, selector, value) {\n  walk(obj, selector, (item, key) => {\n    item[key] = isFunction(value) ? value(item[key]) : value;\n  }, {\n    buildGraph: true\n  });\n}\nfunction removeValue(obj, selector, options) {\n  walk(obj, selector, (item, key) => {\n    if (isArray(item)) {\n      if (/^\\d+$/.test(key)) {\n        item.splice(parseInt(key), 1);\n      } else if (options && options.descendArray) {\n        for (const elem of item) {\n          if (isObject(elem)) {\n            delete elem[key];\n          }\n        }\n      }\n    } else if (isObject(item)) {\n      delete item[key];\n    }\n  }, options);\n}\nconst OPERATOR_NAME_PATTERN = /^\\$[a-zA-Z0-9_]+$/;\nfunction isOperator(name) {\n  return OPERATOR_NAME_PATTERN.test(name);\n}\nfunction normalize(expr) {\n  if (isScalar(expr)) {\n    return isRegExp(expr) ? {\n      $regex: expr\n    } : {\n      $eq: expr\n    };\n  }\n  if (isObjectLike(expr)) {\n    if (!Object.keys(expr).some(isOperator)) return {\n      $eq: expr\n    };\n    if (has(expr, \"$regex\")) {\n      const newExpr = {\n        ...expr\n      };\n      newExpr[\"$regex\"] = new RegExp(expr[\"$regex\"], expr[\"$options\"]);\n      delete newExpr[\"$options\"];\n      return newExpr;\n    }\n  }\n  return expr;\n}\nfunction findInsertIndex(sorted, item, comparator = compare) {\n  let lo = 0;\n  let hi = sorted.length - 1;\n  while (lo <= hi) {\n    const mid = Math.round(lo + (hi - lo) / 2);\n    if (comparator(item, sorted[mid]) < 0) {\n      hi = mid - 1;\n    } else if (comparator(item, sorted[mid]) > 0) {\n      lo = mid + 1;\n    } else {\n      return mid;\n    }\n  }\n  return lo;\n}\nexport { MingoError, ValueMap, assert, cloneDeep, compare, ensureArray, filterMissing, findInsertIndex, flatten, groupBy, has, hashCode, intersection, into, isArray, isBoolean, isDate, isEmpty, isEqual, isFunction, isNil, isNotNaN, isNumber, isObject, isObjectLike, isOperator, isRegExp, isString, isSymbol, merge, normalize, removeValue, resolve, resolveGraph, setValue, stringify, truthy, typeOf, unique, walk };", "import { assert, has, isArray, isFunction, isNil, isObject, isOperator, isString, resolve } from \"./util\";\nvar ProcessingMode = /* @__PURE__ */(ProcessingMode2 => {\n  ProcessingMode2[ProcessingMode2[\"CLONE_OFF\"] = 0] = \"CLONE_OFF\";\n  ProcessingMode2[ProcessingMode2[\"CLONE_INPUT\"] = 1] = \"CLONE_INPUT\";\n  ProcessingMode2[ProcessingMode2[\"CLONE_OUTPUT\"] = 2] = \"CLONE_OUTPUT\";\n  ProcessingMode2[ProcessingMode2[\"CLONE_ALL\"] = 3] = \"CLONE_ALL\";\n  return ProcessingMode2;\n})(ProcessingMode || {});\nclass ComputeOptions {\n  #options;\n  /** Reference to the root object when processing subgraphs of the object. */\n  #root;\n  #local;\n  constructor(options, root, local) {\n    this.#options = options;\n    this.update(root, local);\n  }\n  /**\n   * Initialize new ComputeOptions.\n   * @returns {ComputeOptions}\n   */\n  static init(options, root, local) {\n    return !(options instanceof ComputeOptions) ? new ComputeOptions(options, root, local) : new ComputeOptions(options.#options, options.root ?? root, {\n      ...options.#local,\n      ...local,\n      variables: Object.assign({}, options.#local?.variables, local?.variables)\n    });\n  }\n  /**\n   * Updates the internal state.\n   *\n   * @param root The new root context for this object.\n   * @param local The new local state to merge into current if it exists.\n   * @returns\n   */\n  update(root, local) {\n    this.#root = root;\n    const variables = Object.assign({}, this.#local?.variables, local?.variables);\n    if (Object.keys(variables).length) {\n      this.#local = {\n        ...local,\n        variables\n      };\n    } else {\n      this.#local = local ?? {};\n    }\n    return this;\n  }\n  getOptions() {\n    return Object.freeze({\n      ...this.#options,\n      context: Context.from(this.#options.context)\n    });\n  }\n  get root() {\n    return this.#root;\n  }\n  get local() {\n    return this.#local;\n  }\n  get idKey() {\n    return this.#options.idKey;\n  }\n  get collation() {\n    return this.#options?.collation;\n  }\n  get processingMode() {\n    return this.#options?.processingMode || 0 /* CLONE_OFF */;\n  }\n  get useStrictMode() {\n    return this.#options?.useStrictMode;\n  }\n  get scriptEnabled() {\n    return this.#options?.scriptEnabled;\n  }\n  get useGlobalContext() {\n    return this.#options?.useGlobalContext;\n  }\n  get hashFunction() {\n    return this.#options?.hashFunction;\n  }\n  get collectionResolver() {\n    return this.#options?.collectionResolver;\n  }\n  get jsonSchemaValidator() {\n    return this.#options?.jsonSchemaValidator;\n  }\n  get variables() {\n    return this.#options?.variables;\n  }\n  get context() {\n    return this.#options?.context;\n  }\n}\nfunction initOptions(options) {\n  return options instanceof ComputeOptions ? options.getOptions() : Object.freeze({\n    idKey: \"_id\",\n    scriptEnabled: true,\n    useStrictMode: true,\n    useGlobalContext: true,\n    processingMode: 0 /* CLONE_OFF */,\n    ...options,\n    context: options?.context ? Context.from(options?.context) : Context.init()\n  });\n}\nvar OperatorType = /* @__PURE__ */(OperatorType2 => {\n  OperatorType2[\"ACCUMULATOR\"] = \"accumulator\";\n  OperatorType2[\"EXPRESSION\"] = \"expression\";\n  OperatorType2[\"PIPELINE\"] = \"pipeline\";\n  OperatorType2[\"PROJECTION\"] = \"projection\";\n  OperatorType2[\"QUERY\"] = \"query\";\n  OperatorType2[\"WINDOW\"] = \"window\";\n  return OperatorType2;\n})(OperatorType || {});\nclass Context {\n  #operators = /* @__PURE__ */new Map();\n  constructor() {}\n  static init() {\n    return new Context();\n  }\n  static from(ctx) {\n    const instance = Context.init();\n    if (isNil(ctx)) return instance;\n    ctx.#operators.forEach((v, k) => instance.addOperators(k, v));\n    return instance;\n  }\n  addOperators(type, operators) {\n    if (!this.#operators.has(type)) this.#operators.set(type, {});\n    for (const [name, fn] of Object.entries(operators)) {\n      if (!this.getOperator(type, name)) {\n        this.#operators.get(type)[name] = fn;\n      }\n    }\n    return this;\n  }\n  getOperator(type, name) {\n    const ops = this.#operators.get(type) ?? {};\n    return ops[name] ?? null;\n  }\n  addAccumulatorOps(ops) {\n    return this.addOperators(\"accumulator\", ops);\n  }\n  addExpressionOps(ops) {\n    return this.addOperators(\"expression\", ops);\n  }\n  addQueryOps(ops) {\n    return this.addOperators(\"query\", ops);\n  }\n  addPipelineOps(ops) {\n    return this.addOperators(\"pipeline\", ops);\n  }\n  addProjectionOps(ops) {\n    return this.addOperators(\"projection\", ops);\n  }\n  addWindowOps(ops) {\n    return this.addOperators(\"window\", ops);\n  }\n}\nconst GLOBAL_CONTEXT = Context.init();\nfunction useOperators(type, operators) {\n  for (const [name, fn] of Object.entries(operators)) {\n    assert(isFunction(fn) && isOperator(name), `'${name}' is not a valid operator`);\n    const currentFn = getOperator(type, name, null);\n    assert(!currentFn || fn === currentFn, `${name} already exists for '${type}' operators. Cannot change operator function once registered.`);\n  }\n  switch (type) {\n    case \"accumulator\":\n      GLOBAL_CONTEXT.addAccumulatorOps(operators);\n      break;\n    case \"expression\":\n      GLOBAL_CONTEXT.addExpressionOps(operators);\n      break;\n    case \"pipeline\":\n      GLOBAL_CONTEXT.addPipelineOps(operators);\n      break;\n    case \"projection\":\n      GLOBAL_CONTEXT.addProjectionOps(operators);\n      break;\n    case \"query\":\n      GLOBAL_CONTEXT.addQueryOps(operators);\n      break;\n    case \"window\":\n      GLOBAL_CONTEXT.addWindowOps(operators);\n      break;\n  }\n}\nfunction getOperator(type, name, options) {\n  const {\n    context: ctx,\n    useGlobalContext: fallback\n  } = options || {};\n  const fn = ctx ? ctx.getOperator(type, name) : null;\n  return !fn && fallback ? GLOBAL_CONTEXT.getOperator(type, name) : fn;\n}\nfunction computeValue(obj, expr, operator, options) {\n  const copts = ComputeOptions.init(options, obj);\n  return !!operator && isOperator(operator) ? computeOperator(obj, expr, operator, copts) : computeExpression(obj, expr, copts);\n}\nconst SYSTEM_VARS = [\"$$ROOT\", \"$$CURRENT\", \"$$REMOVE\", \"$$NOW\"];\nfunction computeExpression(obj, expr, options) {\n  if (isString(expr) && expr.length > 0 && expr[0] === \"$\") {\n    if (REDACT_ACTIONS.includes(expr)) return expr;\n    let ctx = options.root;\n    const arr = expr.split(\".\");\n    if (SYSTEM_VARS.includes(arr[0])) {\n      switch (arr[0]) {\n        case \"$$ROOT\":\n          break;\n        case \"$$CURRENT\":\n          ctx = obj;\n          break;\n        case \"$$REMOVE\":\n          ctx = void 0;\n          break;\n        case \"$$NOW\":\n          ctx = /* @__PURE__ */new Date();\n          break;\n      }\n      expr = expr.slice(arr[0].length + 1);\n    } else if (arr[0].slice(0, 2) === \"$$\") {\n      ctx = Object.assign({},\n      // global vars\n      options.variables,\n      // current item is added before local variables because the binding may be changed.\n      {\n        this: obj\n      },\n      // local vars\n      options?.local?.variables);\n      const name = arr[0].slice(2);\n      assert(has(ctx, name), `Use of undefined variable: ${name}`);\n      expr = expr.slice(2);\n    } else {\n      expr = expr.slice(1);\n    }\n    return expr === \"\" ? ctx : resolve(ctx, expr);\n  }\n  if (isArray(expr)) {\n    return expr.map(item => computeExpression(obj, item, options));\n  }\n  if (isObject(expr)) {\n    const result = {};\n    const elems = Object.entries(expr);\n    for (const [key, val] of elems) {\n      if (isOperator(key)) {\n        assert(elems.length == 1, \"expression must have single operator.\");\n        return computeOperator(obj, val, key, options);\n      }\n      result[key] = computeExpression(obj, val, options);\n    }\n    return result;\n  }\n  return expr;\n}\nfunction computeOperator(obj, expr, operator, options) {\n  const callExpression = getOperator(\"expression\", operator, options);\n  if (callExpression) return callExpression(obj, expr, options);\n  const callAccumulator = getOperator(\"accumulator\", operator, options);\n  assert(!!callAccumulator, `accumulator '${operator}' is not registered.`);\n  if (!isArray(obj)) {\n    obj = computeExpression(obj, expr, options);\n    expr = null;\n  }\n  assert(isArray(obj), `arguments must resolve to array for ${operator}.`);\n  return callAccumulator(obj, expr, options.update(null, options.local)\n  // reset the root object.\n  );\n}\nconst REDACT_ACTIONS = [\"$$KEEP\", \"$$PRUNE\", \"$$DESCEND\"];\nfunction redact(obj, expr, options) {\n  const action = computeValue(obj, expr, null, options);\n  switch (action) {\n    case \"$$KEEP\":\n      return obj;\n    case \"$$PRUNE\":\n      return void 0;\n    case \"$$DESCEND\":\n      {\n        if (!has(expr, \"$cond\")) return obj;\n        const output = {};\n        for (const [key, value] of Object.entries(obj)) {\n          if (isArray(value)) {\n            const res = new Array();\n            for (let elem of value) {\n              if (isObject(elem)) {\n                elem = redact(elem, expr, options.update(elem));\n              }\n              if (!isNil(elem)) res.push(elem);\n            }\n            output[key] = res;\n          } else if (isObject(value)) {\n            const res = redact(value, expr, options.update(value));\n            if (!isNil(res)) output[key] = res;\n          } else {\n            output[key] = value;\n          }\n        }\n        return output;\n      }\n    default:\n      return action;\n  }\n}\nexport { ComputeOptions, Context, OperatorType, ProcessingMode, computeValue, getOperator, initOptions, redact, useOperators };", "import { isArray, MingoError } from \"./util\";\nfunction Lazy(source) {\n  return source instanceof Iterator ? source : new Iterator(source);\n}\nfunction concat(...iterators) {\n  let index = 0;\n  return Lazy(() => {\n    while (index < iterators.length) {\n      const o = iterators[index].next();\n      if (!o.done) return o;\n      index++;\n    }\n    return {\n      done: true\n    };\n  });\n}\nfunction isGenerator(o) {\n  return !!o && typeof o === \"object\" && o?.next instanceof Function;\n}\nfunction dropItem(array, i) {\n  const rest = array.slice(i + 1);\n  array.splice(i);\n  Array.prototype.push.apply(array, rest);\n}\nconst DONE = new Error();\nvar Action = /* @__PURE__ */(Action2 => {\n  Action2[Action2[\"MAP\"] = 0] = \"MAP\";\n  Action2[Action2[\"FILTER\"] = 1] = \"FILTER\";\n  Action2[Action2[\"TAKE\"] = 2] = \"TAKE\";\n  Action2[Action2[\"DROP\"] = 3] = \"DROP\";\n  return Action2;\n})(Action || {});\nfunction createCallback(nextFn, iteratees, buffer) {\n  let done = false;\n  let index = -1;\n  let bufferIndex = 0;\n  return function (storeResult) {\n    try {\n      outer: while (!done) {\n        let o = nextFn();\n        index++;\n        let i = -1;\n        const size = iteratees.length;\n        let innerDone = false;\n        while (++i < size) {\n          const r = iteratees[i];\n          switch (r.action) {\n            case 0 /* MAP */:\n              o = r.func(o, index);\n              break;\n            case 1 /* FILTER */:\n              if (!r.func(o, index)) continue outer;\n              break;\n            case 2 /* TAKE */:\n              --r.count;\n              if (!r.count) innerDone = true;\n              break;\n            case 3 /* DROP */:\n              --r.count;\n              if (!r.count) dropItem(iteratees, i);\n              continue outer;\n            default:\n              break outer;\n          }\n        }\n        done = innerDone;\n        if (storeResult) {\n          buffer[bufferIndex++] = o;\n        } else {\n          return {\n            value: o,\n            done: false\n          };\n        }\n      }\n    } catch (e) {\n      if (e !== DONE) throw e;\n    }\n    done = true;\n    return {\n      done\n    };\n  };\n}\nclass Iterator {\n  /**\n   * @param {*} source An iterable object or function.\n   *    Array - return one element per cycle\n   *    Object{next:Function} - call next() for the next value (this also handles generator functions)\n   *    Function - call to return the next value\n   * @param {Function} fn An optional transformation function\n   */\n  constructor(source) {\n    this.#iteratees = [];\n    this.#yieldedValues = [];\n    this.isDone = false;\n    let nextVal;\n    if (source instanceof Function) {\n      source = {\n        next: source\n      };\n    }\n    if (isGenerator(source)) {\n      const src = source;\n      nextVal = () => {\n        const o = src.next();\n        if (o.done) throw DONE;\n        return o.value;\n      };\n    } else if (isArray(source)) {\n      const data = source;\n      const size = data.length;\n      let index = 0;\n      nextVal = () => {\n        if (index < size) return data[index++];\n        throw DONE;\n      };\n    } else if (!(source instanceof Function)) {\n      throw new MingoError(`Lazy must be initialized with an array, generator, or function.`);\n    }\n    this.#getNext = createCallback(nextVal, this.#iteratees, this.#yieldedValues);\n  }\n  #iteratees;\n  #yieldedValues;\n  #getNext;\n  /**\n   * Add an iteratee to this lazy sequence\n   */\n  push(action, value) {\n    if (typeof value === \"function\") {\n      this.#iteratees.push({\n        action,\n        func: value\n      });\n    } else if (typeof value === \"number\") {\n      this.#iteratees.push({\n        action,\n        count: value\n      });\n    }\n    return this;\n  }\n  next() {\n    return this.#getNext();\n  }\n  // Iteratees methods\n  /**\n   * Transform each item in the sequence to a new value\n   * @param {Function} f\n   */\n  map(f) {\n    return this.push(0 /* MAP */, f);\n  }\n  /**\n   * Select only items matching the given predicate\n   * @param {Function} pred\n   */\n  filter(predicate) {\n    return this.push(1 /* FILTER */, predicate);\n  }\n  /**\n   * Take given numbe for values from sequence\n   * @param {Number} n A number greater than 0\n   */\n  take(n) {\n    return n > 0 ? this.push(2 /* TAKE */, n) : this;\n  }\n  /**\n   * Drop a number of values from the sequence\n   * @param {Number} n Number of items to drop greater than 0\n   */\n  drop(n) {\n    return n > 0 ? this.push(3 /* DROP */, n) : this;\n  }\n  // Transformations\n  /**\n   * Returns a new lazy object with results of the transformation\n   * The entire sequence is realized.\n   *\n   * @param {Callback<Source, Any[]>} fn Tranform function of type (Array) => (Any)\n   */\n  transform(fn) {\n    const self = this;\n    let iter;\n    return Lazy(() => {\n      if (!iter) {\n        iter = Lazy(fn(self.value()));\n      }\n      return iter.next();\n    });\n  }\n  // Terminal methods\n  /**\n   * Returns the fully realized values of the iterators.\n   * The return value will be an array unless `lazy.first()` was used.\n   * The realized values are cached for subsequent calls.\n   */\n  value() {\n    if (!this.isDone) {\n      this.isDone = this.#getNext(true).done;\n    }\n    return this.#yieldedValues;\n  }\n  /**\n   * Execute the funcion for each value. Will stop when an execution returns false.\n   * @param {Function} f\n   * @returns {Boolean} false iff `f` return false for AnyVal execution, otherwise true\n   */\n  each(f) {\n    for (;;) {\n      const o = this.next();\n      if (o.done) break;\n      if (f(o.value) === false) return false;\n    }\n    return true;\n  }\n  /**\n   * Returns the reduction of sequence according the reducing function\n   *\n   * @param {*} f a reducing function\n   * @param {*} initialValue\n   */\n  reduce(f, initialValue) {\n    let o = this.next();\n    if (initialValue === void 0 && !o.done) {\n      initialValue = o.value;\n      o = this.next();\n    }\n    while (!o.done) {\n      initialValue = f(initialValue, o.value);\n      o = this.next();\n    }\n    return initialValue;\n  }\n  /**\n   * Returns the number of matched items in the sequence\n   */\n  size() {\n    return this.reduce((acc, _) => ++acc, 0);\n  }\n  [Symbol.iterator]() {\n    return this;\n  }\n}\nexport { Iterator, Lazy, concat };", "const $limit = (collection, expr, _options) => collection.take(expr);\nexport { $limit };", "import { ComputeOptions, computeValue, getOperator } from \"../../core\";\nimport { assert, ensureArray, filterMissing, has, isArray, isBoolean, isEmpty, isNumber, isObject, isOperator, isString, merge, removeValue, resolve, resolveGraph, setValue } from \"../../util\";\nconst $project = (collection, expr, options) => {\n  if (isEmpty(expr)) return collection;\n  validateExpression(expr, options);\n  return collection.map(createHandler(expr, ComputeOptions.init(options)));\n};\nfunction createHandler(expr, options, isRoot = true) {\n  const idKey = options.idKey;\n  const expressionKeys = Object.keys(expr);\n  const excludedKeys = new Array();\n  const includedKeys = new Array();\n  const handlers = {};\n  for (const key of expressionKeys) {\n    const subExpr = expr[key];\n    if (isNumber(subExpr) || isBoolean(subExpr)) {\n      if (subExpr) {\n        includedKeys.push(key);\n      } else {\n        excludedKeys.push(key);\n      }\n    } else if (isArray(subExpr)) {\n      handlers[key] = o => subExpr.map(v => computeValue(o, v, null, options.update(o)) ?? null);\n    } else if (isObject(subExpr)) {\n      const subExprKeys = Object.keys(subExpr);\n      const operator = subExprKeys.length == 1 ? subExprKeys[0] : \"\";\n      const projectFn = getOperator(\"projection\", operator, options);\n      if (projectFn) {\n        const foundSlice = operator === \"$slice\";\n        if (foundSlice && !ensureArray(subExpr[operator]).every(isNumber)) {\n          handlers[key] = o => computeValue(o, subExpr, key, options.update(o));\n        } else {\n          handlers[key] = o => projectFn(o, subExpr[operator], key, options.update(o));\n        }\n      } else if (isOperator(operator)) {\n        handlers[key] = o => computeValue(o, subExpr[operator], operator, options);\n      } else {\n        validateExpression(subExpr, options);\n        handlers[key] = o => {\n          if (!has(o, key)) return computeValue(o, subExpr, null, options);\n          if (isRoot) options.update(o);\n          const target = resolve(o, key);\n          const fn = createHandler(subExpr, options, false);\n          if (isArray(target)) return target.map(fn);\n          if (isObject(target)) return fn(target);\n          return fn(o);\n        };\n      }\n    } else {\n      handlers[key] = isString(subExpr) && subExpr[0] === \"$\" ? o => computeValue(o, subExpr, key, options) : _ => subExpr;\n    }\n  }\n  const handlerKeys = Object.keys(handlers);\n  const idKeyExcluded = excludedKeys.includes(idKey);\n  const idKeyOnlyExcluded = isRoot && idKeyExcluded && excludedKeys.length === 1 && !includedKeys.length && !handlerKeys.length;\n  if (idKeyOnlyExcluded) {\n    return o => {\n      const newObj = {\n        ...o\n      };\n      delete newObj[idKey];\n      return newObj;\n    };\n  }\n  const idKeyImplicit = isRoot && !idKeyExcluded && !includedKeys.includes(idKey);\n  const opts = {\n    preserveMissing: true\n  };\n  return o => {\n    const newObj = {};\n    if (excludedKeys.length && !includedKeys.length) {\n      merge(newObj, o);\n      for (const k of excludedKeys) {\n        removeValue(newObj, k, {\n          descendArray: true\n        });\n      }\n    }\n    for (const k of includedKeys) {\n      const pathObj = resolveGraph(o, k, opts) ?? {};\n      merge(newObj, pathObj);\n    }\n    if (includedKeys.length) filterMissing(newObj);\n    for (const k of handlerKeys) {\n      const value = handlers[k](o);\n      if (value === void 0) {\n        removeValue(newObj, k, {\n          descendArray: true\n        });\n      } else {\n        setValue(newObj, k, value);\n      }\n    }\n    if (idKeyImplicit && has(o, idKey)) {\n      newObj[idKey] = resolve(o, idKey);\n    }\n    return newObj;\n  };\n}\nfunction validateExpression(expr, options) {\n  let exclusions = false;\n  let inclusions = false;\n  for (const [k, v] of Object.entries(expr)) {\n    assert(!k.startsWith(\"$\"), \"Field names may not start with '$'.\");\n    assert(!k.endsWith(\".$\"), \"Positional projection operator '$' is not supported.\");\n    if (k === options?.idKey) continue;\n    if (v === 0 || v === false) {\n      exclusions = true;\n    } else if (v === 1 || v === true) {\n      inclusions = true;\n    }\n    assert(!(exclusions && inclusions), \"Projection cannot have a mix of inclusion and exclusion.\");\n  }\n}\nexport { $project };", "const $skip = (collection, expr, _options) => {\n  return collection.drop(expr);\n};\nexport { $skip };", "import { assert, compare, groupBy, isEmpty, isObject, isString, resolve } from \"../../util\";\nconst $sort = (collection, sortKeys, options) => {\n  if (isEmpty(sortKeys) || !isObject(sortKeys)) return collection;\n  let cmp = compare;\n  const collationSpec = options.collation;\n  if (isObject(collationSpec) && isString(collationSpec.locale)) {\n    cmp = collationComparator(collationSpec);\n  }\n  return collection.transform(coll => {\n    const modifiers = Object.keys(sortKeys);\n    for (const key of modifiers.reverse()) {\n      const groups = groupBy(coll, obj => resolve(obj, key), options.hashFunction);\n      const sortedKeys = Array.from(groups.keys()).sort(cmp);\n      if (sortKeys[key] === -1) sortedKeys.reverse();\n      let i = 0;\n      for (const k of sortedKeys) for (const v of groups.get(k)) coll[i++] = v;\n      assert(i == coll.length, \"bug: counter must match collection size.\");\n    }\n    return coll;\n  });\n};\nconst COLLATION_STRENGTH = {\n  // Only strings that differ in base letters compare as unequal. Examples: a ≠ b, a = á, a = A.\n  1: \"base\",\n  //  Only strings that differ in base letters or accents and other diacritic marks compare as unequal.\n  // Examples: a ≠ b, a ≠ á, a = A.\n  2: \"accent\",\n  // Strings that differ in base letters, accents and other diacritic marks, or case compare as unequal.\n  // Other differences may also be taken into consideration. Examples: a ≠ b, a ≠ á, a ≠ A\n  3: \"variant\"\n  // case - Only strings that differ in base letters or case compare as unequal. Examples: a ≠ b, a = á, a ≠ A.\n};\nfunction collationComparator(spec) {\n  const localeOpt = {\n    sensitivity: COLLATION_STRENGTH[spec.strength || 3],\n    caseFirst: spec.caseFirst === \"off\" ? \"false\" : spec.caseFirst || \"false\",\n    numeric: spec.numericOrdering || false,\n    ignorePunctuation: spec.alternate === \"shifted\"\n  };\n  if ((spec.caseLevel || false) === true) {\n    if (localeOpt.sensitivity === \"base\") localeOpt.sensitivity = \"case\";\n    if (localeOpt.sensitivity === \"accent\") localeOpt.sensitivity = \"variant\";\n  }\n  const collator = new Intl.Collator(spec.locale, localeOpt);\n  return (a, b) => {\n    if (!isString(a) || !isString(b)) return compare(a, b);\n    const i = collator.compare(a, b);\n    if (i < 0) return -1;\n    if (i > 0) return 1;\n    return 0;\n  };\n}\nexport { $sort };", "import { ProcessingMode } from \"./core\";\nimport { concat, Lazy } from \"./lazy\";\nimport { $limit } from \"./operators/pipeline/limit\";\nimport { $project } from \"./operators/pipeline/project\";\nimport { $skip } from \"./operators/pipeline/skip\";\nimport { $sort } from \"./operators/pipeline/sort\";\nimport { cloneDeep, has } from \"./util\";\nconst OPERATORS = {\n  $sort,\n  $skip,\n  $limit\n};\nclass Cursor {\n  #source;\n  #predicate;\n  #projection;\n  #options;\n  #operators = {};\n  #result = null;\n  #buffer = [];\n  constructor(source, predicate, projection, options) {\n    this.#source = source;\n    this.#predicate = predicate;\n    this.#projection = projection;\n    this.#options = options;\n  }\n  /** Returns the iterator from running the query */\n  fetch() {\n    if (this.#result) return this.#result;\n    this.#result = Lazy(this.#source).filter(this.#predicate);\n    const mode = this.#options.processingMode;\n    if (mode & ProcessingMode.CLONE_INPUT) this.#result.map(cloneDeep);\n    for (const op of [\"$sort\", \"$skip\", \"$limit\"]) {\n      if (has(this.#operators, op)) {\n        this.#result = OPERATORS[op](this.#result, this.#operators[op], this.#options);\n      }\n    }\n    if (Object.keys(this.#projection).length) {\n      this.#result = $project(this.#result, this.#projection, this.#options);\n    }\n    if (mode & ProcessingMode.CLONE_OUTPUT) this.#result.map(cloneDeep);\n    return this.#result;\n  }\n  /** Returns an iterator with the buffered data included */\n  fetchAll() {\n    const buffered = Lazy([...this.#buffer]);\n    this.#buffer = [];\n    return concat(buffered, this.fetch());\n  }\n  /**\n   * Return remaining objects in the cursor as an array. This method exhausts the cursor\n   * @returns {Array}\n   */\n  all() {\n    return this.fetchAll().value();\n  }\n  /**\n   * Returns the number of objects return in the cursor. This method exhausts the cursor\n   * @returns {Number}\n   */\n  count() {\n    return this.all().length;\n  }\n  /**\n   * Returns a cursor that begins returning results only after passing or skipping a number of documents.\n   * @param {Number} n the number of results to skip.\n   * @return {Cursor} Returns the cursor, so you can chain this call.\n   */\n  skip(n) {\n    this.#operators[\"$skip\"] = n;\n    return this;\n  }\n  /**\n   * Constrains the size of a cursor's result set.\n   * @param {Number} n the number of results to limit to.\n   * @return {Cursor} Returns the cursor, so you can chain this call.\n   */\n  limit(n) {\n    this.#operators[\"$limit\"] = n;\n    return this;\n  }\n  /**\n   * Returns results ordered according to a sort specification.\n   * @param {AnyObject} modifier an object of key and values specifying the sort order. 1 for ascending and -1 for descending\n   * @return {Cursor} Returns the cursor, so you can chain this call.\n   */\n  sort(modifier) {\n    this.#operators[\"$sort\"] = modifier;\n    return this;\n  }\n  /**\n   * Specifies the collation for the cursor returned by the `mingo.Query.find`\n   * @param {*} spec\n   */\n  collation(spec) {\n    this.#options = {\n      ...this.#options,\n      collation: spec\n    };\n    return this;\n  }\n  /**\n   * Returns the next document in a cursor.\n   * @returns {AnyObject | Boolean}\n   */\n  next() {\n    if (this.#buffer.length > 0) {\n      return this.#buffer.pop();\n    }\n    const o = this.fetch().next();\n    if (o.done) return;\n    return o.value;\n  }\n  /**\n   * Returns true if the cursor has documents and can be iterated.\n   * @returns {boolean}\n   */\n  hasNext() {\n    if (this.#buffer.length > 0) return true;\n    const o = this.fetch().next();\n    if (o.done) return false;\n    this.#buffer.push(o.value);\n    return true;\n  }\n  /**\n   * Applies a function to each document in a cursor and collects the return values in an array.\n   * @param fn\n   * @returns {Array}\n   */\n  map(fn) {\n    return this.all().map(fn);\n  }\n  /**\n   * Applies a JavaScript function for every document in a cursor.\n   * @param fn\n   */\n  forEach(fn) {\n    this.all().forEach(fn);\n  }\n  [Symbol.iterator]() {\n    return this.fetchAll();\n  }\n}\nexport { Cursor };", "import { getOperator, initOptions } from \"./core\";\nimport { Cursor } from \"./cursor\";\nimport { assert, cloneDeep, isObject, isOperator, normalize } from \"./util\";\nconst TOP_LEVEL_OPS = new Set(Array.from([\"$and\", \"$or\", \"$nor\", \"$expr\", \"$jsonSchema\"]));\nclass Query {\n  #compiled;\n  #options;\n  #condition;\n  constructor(condition, options) {\n    this.#condition = cloneDeep(condition);\n    this.#options = initOptions(options);\n    this.#compiled = [];\n    this.compile();\n  }\n  compile() {\n    assert(isObject(this.#condition), `query criteria must be an object: ${JSON.stringify(this.#condition)}`);\n    const whereOperator = {};\n    for (const [field, expr] of Object.entries(this.#condition)) {\n      if (\"$where\" === field) {\n        assert(this.#options.scriptEnabled, \"$where operator requires 'scriptEnabled' option to be true.\");\n        Object.assign(whereOperator, {\n          field,\n          expr\n        });\n      } else if (TOP_LEVEL_OPS.has(field)) {\n        this.processOperator(field, field, expr);\n      } else {\n        assert(!isOperator(field), `unknown top level operator: ${field}`);\n        for (const [operator, val] of Object.entries(normalize(expr))) {\n          this.processOperator(field, operator, val);\n        }\n      }\n      if (whereOperator.field) {\n        this.processOperator(whereOperator.field, whereOperator.field, whereOperator.expr);\n      }\n    }\n  }\n  processOperator(field, operator, value) {\n    const call = getOperator(\"query\", operator, this.#options);\n    assert(!!call, `unknown query operator ${operator}`);\n    this.#compiled.push(call(field, value, this.#options));\n  }\n  /**\n   * Checks if the object passes the query criteria. Returns true if so, false otherwise.\n   *\n   * @param obj The object to test\n   * @returns {boolean}\n   */\n  test(obj) {\n    return this.#compiled.every(p => p(obj));\n  }\n  /**\n   * Returns a cursor to select matching documents from the input source.\n   *\n   * @param source A source providing a sequence of documents\n   * @param projection An optional projection criteria\n   * @returns {Cursor} A Cursor for iterating over the results\n   */\n  find(collection, projection) {\n    return new Cursor(collection, o => this.test(o), projection || {}, this.#options);\n  }\n  /**\n   * Remove matched documents from the collection returning the remainder\n   *\n   * @param collection An array of documents\n   * @returns {Array} A new array with matching elements removed\n   */\n  remove(collection) {\n    return collection.reduce((acc, obj) => {\n      if (!this.test(obj)) acc.push(obj);\n      return acc;\n    }, []);\n  }\n}\nexport { Query };", "import { computeValue } from \"../../core\";\nimport { Lazy } from \"../../lazy\";\nimport { assert, compare, findInsertIndex, isArray, isEqual, isNil, isNumber } from \"../../util\";\nconst $bucketAuto = (collection, expr, options) => {\n  const {\n    buckets: bucketCount,\n    groupBy: groupByExpr,\n    output: optOutputExpr,\n    // Available only if the all groupBy values are numeric and none of them are NaN.\n    granularity\n  } = expr;\n  const outputExpr = optOutputExpr ?? {\n    count: {\n      $sum: 1\n    }\n  };\n  assert(bucketCount > 0, `$bucketAuto: 'buckets' field must be greater than 0, but found: ${bucketCount}`);\n  if (granularity) {\n    assert(/^(POWERSOF2|1-2-5|E(6|12|24|48|96|192)|R(5|10|20|40|80))$/.test(granularity), `$bucketAuto: invalid granularity '${granularity}'.`);\n  }\n  const keyMap = /* @__PURE__ */new Map();\n  const setKey = !granularity ? (o, k) => keyMap.set(o, k) : (_, _2) => {};\n  const sorted = collection.map(o => {\n    const k = computeValue(o, groupByExpr, null, options) ?? null;\n    assert(!granularity || isNumber(k), \"$bucketAuto: groupBy values must be numeric when granularity is specified.\");\n    setKey(o, k ?? null);\n    return [k ?? null, o];\n  }).value();\n  sorted.sort((x, y) => {\n    if (isNil(x[0])) return -1;\n    if (isNil(y[0])) return 1;\n    return compare(x[0], y[0]);\n  });\n  let getNext;\n  if (!granularity) {\n    getNext = granularityDefault(sorted, bucketCount, keyMap);\n  } else if (granularity == \"POWERSOF2\") {\n    getNext = granularityPowerOfTwo(sorted, bucketCount);\n  } else {\n    getNext = granularityPreferredSeries(sorted, bucketCount, granularity);\n  }\n  let terminate = false;\n  return Lazy(() => {\n    if (terminate) return {\n      done: true\n    };\n    const {\n      min,\n      max,\n      bucket,\n      done\n    } = getNext();\n    terminate = done;\n    const outFields = computeValue(bucket, outputExpr, null, options);\n    for (const [k, v] of Object.entries(outFields)) {\n      if (isArray(v)) outFields[k] = v.filter(v2 => v2 !== void 0);\n    }\n    return {\n      done: false,\n      value: {\n        ...outFields,\n        _id: {\n          min,\n          max\n        }\n      }\n    };\n  });\n};\nfunction granularityDefault(sorted, bucketCount, keyMap) {\n  const size = sorted.length;\n  const approxBucketSize = Math.max(1, Math.round(sorted.length / bucketCount));\n  let index = 0;\n  let nBuckets = 0;\n  return () => {\n    const isLastBucket = ++nBuckets == bucketCount;\n    const bucket = new Array();\n    while (index < size && (isLastBucket || bucket.length < approxBucketSize || index > 0 && isEqual(sorted[index - 1][0], sorted[index][0]))) {\n      bucket.push(sorted[index++][1]);\n    }\n    const min = keyMap.get(bucket[0]);\n    let max;\n    if (index < size) {\n      max = sorted[index][0];\n    } else {\n      max = keyMap.get(bucket[bucket.length - 1]);\n    }\n    assert(isNil(max) || isNil(min) || min <= max, `error: $bucketAuto boundary must be in order.`);\n    return {\n      min,\n      max,\n      bucket,\n      done: index >= size\n    };\n  };\n}\nfunction granularityPowerOfTwo(sorted, bucketCount) {\n  const size = sorted.length;\n  const approxBucketSize = Math.max(1, Math.round(sorted.length / bucketCount));\n  const roundUp2 = n => n === 0 ? 0 : 2 ** (Math.floor(Math.log2(n)) + 1);\n  let index = 0;\n  let min = 0;\n  let max = 0;\n  return () => {\n    const bucket = new Array();\n    const boundValue = roundUp2(max);\n    min = index > 0 ? max : 0;\n    while (bucket.length < approxBucketSize && index < size && (max === 0 || sorted[index][0] < boundValue)) {\n      bucket.push(sorted[index++][1]);\n    }\n    max = max == 0 ? roundUp2(sorted[index - 1][0]) : boundValue;\n    while (index < size && sorted[index][0] < max) {\n      bucket.push(sorted[index++][1]);\n    }\n    return {\n      min,\n      max,\n      bucket,\n      done: index >= size\n    };\n  };\n}\nconst PREFERRED_NUMBERS = Object.freeze({\n  // \"Least rounded\" Renard number series, taken from Wikipedia page on preferred\n  // numbers: https://en.wikipedia.org/wiki/Preferred_number#Renard_numbers\n  R5: [10, 16, 25, 40, 63],\n  R10: [100, 125, 160, 200, 250, 315, 400, 500, 630, 800],\n  R20: [100, 112, 125, 140, 160, 180, 200, 224, 250, 280, 315, 355, 400, 450, 500, 560, 630, 710, 800, 900],\n  R40: [100, 106, 112, 118, 125, 132, 140, 150, 160, 170, 180, 190, 200, 212, 224, 236, 250, 265, 280, 300, 315, 355, 375, 400, 425, 450, 475, 500, 530, 560, 600, 630, 670, 710, 750, 800, 850, 900, 950],\n  R80: [103, 109, 115, 122, 128, 136, 145, 155, 165, 175, 185, 195, 206, 218, 230, 243, 258, 272, 290, 307, 325, 345, 365, 387, 412, 437, 462, 487, 515, 545, 575, 615, 650, 690, 730, 775, 825, 875, 925, 975],\n  // https://en.wikipedia.org/wiki/Preferred_number#1-2-5_series\n  \"1-2-5\": [10, 20, 50],\n  // E series, taken from Wikipedia page on preferred numbers:\n  // https://en.wikipedia.org/wiki/Preferred_number#E_series\n  E6: [10, 15, 22, 33, 47, 68],\n  E12: [10, 12, 15, 18, 22, 27, 33, 39, 47, 56, 68, 82],\n  E24: [10, 11, 12, 13, 15, 16, 18, 20, 22, 24, 27, 30, 33, 36, 39, 43, 47, 51, 56, 62, 68, 75, 82, 91],\n  E48: [100, 105, 110, 115, 121, 127, 133, 140, 147, 154, 162, 169, 178, 187, 196, 205, 215, 226, 237, 249, 261, 274, 287, 301, 316, 332, 348, 365, 383, 402, 422, 442, 464, 487, 511, 536, 562, 590, 619, 649, 681, 715, 750, 787, 825, 866, 909, 953],\n  E96: [100, 102, 105, 107, 110, 113, 115, 118, 121, 124, 127, 130, 133, 137, 140, 143, 147, 150, 154, 158, 162, 165, 169, 174, 178, 182, 187, 191, 196, 200, 205, 210, 215, 221, 226, 232, 237, 243, 249, 255, 261, 267, 274, 280, 287, 294, 301, 309, 316, 324, 332, 340, 348, 357, 365, 374, 383, 392, 402, 412, 422, 432, 442, 453, 464, 475, 487, 499, 511, 523, 536, 549, 562, 576, 590, 604, 619, 634, 649, 665, 681, 698, 715, 732, 750, 768, 787, 806, 825, 845, 866, 887, 909, 931, 953, 976],\n  E192: [100, 101, 102, 104, 105, 106, 107, 109, 110, 111, 113, 114, 115, 117, 118, 120, 121, 123, 124, 126, 127, 129, 130, 132, 133, 135, 137, 138, 140, 142, 143, 145, 147, 149, 150, 152, 154, 156, 158, 160, 162, 164, 165, 167, 169, 172, 174, 176, 178, 180, 182, 184, 187, 189, 191, 193, 196, 198, 200, 203, 205, 208, 210, 213, 215, 218, 221, 223, 226, 229, 232, 234, 237, 240, 243, 246, 249, 252, 255, 258, 261, 264, 267, 271, 274, 277, 280, 284, 287, 291, 294, 298, 301, 305, 309, 312, 316, 320, 324, 328, 332, 336, 340, 344, 348, 352, 357, 361, 365, 370, 374, 379, 383, 388, 392, 397, 402, 407, 412, 417, 422, 427, 432, 437, 442, 448, 453, 459, 464, 470, 475, 481, 487, 493, 499, 505, 511, 517, 523, 530, 536, 542, 549, 556, 562, 569, 576, 583, 590, 597, 604, 612, 619, 626, 634, 642, 649, 657, 665, 673, 681, 690, 698, 706, 715, 723, 732, 741, 750, 759, 768, 777, 787, 796, 806, 816, 825, 835, 845, 856, 866, 876, 887, 898, 909, 920, 931, 942, 953, 965, 976, 988]\n});\nconst roundUp = (n, granularity) => {\n  if (n == 0) return 0;\n  const series = PREFERRED_NUMBERS[granularity];\n  const first = series[0];\n  const last = series[series.length - 1];\n  let multiplier = 1;\n  while (n >= last * multiplier) {\n    multiplier *= 10;\n  }\n  let previousMin = 0;\n  while (n < first * multiplier) {\n    previousMin = first * multiplier;\n    multiplier /= 10;\n    if (n >= last * multiplier) {\n      return previousMin;\n    }\n  }\n  assert(n >= first * multiplier && n < last * multiplier, \"$bucketAuto: number out of range of series.\");\n  const i = findInsertIndex(series, n, (a, b) => {\n    b *= multiplier;\n    if (a < b) return -1;\n    if (a > b) return 1;\n    return 0;\n  });\n  const seriesNumber = series[i] * multiplier;\n  return n == seriesNumber ? series[i + 1] * multiplier : seriesNumber;\n};\nfunction granularityPreferredSeries(sorted, bucketCount, granularity) {\n  const size = sorted.length;\n  const approxBucketSize = Math.max(1, Math.round(sorted.length / bucketCount));\n  let index = 0;\n  let nBuckets = 0;\n  let min = 0;\n  let max = 0;\n  return () => {\n    const isLastBucket = ++nBuckets == bucketCount;\n    const bucket = new Array();\n    min = index > 0 ? max : 0;\n    while (index < size && (isLastBucket || bucket.length < approxBucketSize)) {\n      bucket.push(sorted[index++][1]);\n    }\n    max = roundUp(sorted[index - 1][0], granularity);\n    const nItems = bucket.length;\n    while (index < size && (isLastBucket || sorted[index][0] < max)) {\n      bucket.push(sorted[index++][1]);\n    }\n    if (nItems != bucket.length) {\n      max = roundUp(sorted[index - 1][0], granularity);\n    }\n    assert(min < max, `$bucketAuto: ${min} < ${max}.`);\n    return {\n      min,\n      max,\n      bucket,\n      done: index >= size\n    };\n  };\n}\nexport { $bucketAuto };", "import { computeValue } from \"../../../core\";\nimport { isDate, isNil, isNumber, MingoError } from \"../../../util\";\nconst LEAP_YEAR_REF_POINT = -1e9;\nconst DAYS_PER_WEEK = 7;\nconst isLeapYear = y => (y & 3) == 0 && (y % 100 != 0 || y % 400 == 0);\nconst DAYS_IN_YEAR = [365, 366\n/*leap*/];\nconst daysInYear = year => DAYS_IN_YEAR[+isLeapYear(year)];\nconst DAYS_IN_MONTH = [31, 28, 31, 30, 31, 30, 31, 31, 30, 31, 30, 31];\nconst daysInMonth = d => DAYS_IN_MONTH[d.getUTCMonth()] + Number(d.getUTCMonth() === 1 && isLeapYear(d.getUTCFullYear()));\nconst YEAR_DAYS_OFFSET = [[0, 31, 59, 90, 120, 151, 181, 212, 243, 273, 304, 334], [0, 31, 60, 91, 121, 152, 182, 213, 244, 274, 305, 335]\n/*leap*/];\nconst dayOfYear = d => YEAR_DAYS_OFFSET[+isLeapYear(d.getUTCFullYear())][d.getUTCMonth()] + d.getUTCDate();\nconst isoWeekday = (date, startOfWeek = \"sun\") => {\n  const dow = date.getUTCDay() || 7;\n  return (dow - ISO_WEEKDAY_MAP[startOfWeek] + DAYS_PER_WEEK) % DAYS_PER_WEEK;\n};\nconst p = y => (y + Math.floor(y / 4) - Math.floor(y / 100) + Math.floor(y / 400)) % 7;\nconst weeks = y => 52 + Number(p(y) == 4 || p(y - 1) == 3);\nfunction isoWeek(d) {\n  const dow = d.getUTCDay() || 7;\n  const w = Math.floor((10 + dayOfYear(d) - dow) / 7);\n  if (w < 1) return weeks(d.getUTCFullYear() - 1);\n  if (w > weeks(d.getUTCFullYear())) return 1;\n  return w;\n}\nfunction isoWeekYear(d) {\n  return d.getUTCFullYear() - Number(d.getUTCMonth() === 0 && d.getUTCDate() == 1 && d.getUTCDay() < 1);\n}\nconst MINUTES_PER_HOUR = 60;\nconst MILLIS_PER_DAY = 1e3 * 60 * 60 * 24;\nconst TIMEUNIT_IN_MILLIS = {\n  week: MILLIS_PER_DAY * DAYS_PER_WEEK,\n  day: MILLIS_PER_DAY,\n  hour: 1e3 * 60 * 60,\n  minute: 1e3 * 60,\n  second: 1e3,\n  millisecond: 1\n};\nconst DAYS_OF_WEEK = [\"monday\", \"mon\", \"tuesday\", \"tue\", \"wednesday\", \"wed\", \"thursday\", \"thu\", \"friday\", \"fri\", \"saturday\", \"sat\", \"sunday\", \"sun\"];\nconst DAYS_OF_WEEK_SET = new Set(DAYS_OF_WEEK);\nconst ISO_WEEKDAY_MAP = Object.freeze({\n  mon: 1,\n  tue: 2,\n  wed: 3,\n  thu: 4,\n  fri: 5,\n  sat: 6,\n  sun: 7\n});\nconst DATE_FORMAT = \"%Y-%m-%dT%H:%M:%S.%LZ\";\nconst DATE_PART_INTERVAL = [[\"year\", 0, 9999], [\"month\", 1, 12], [\"day\", 1, 31], [\"hour\", 0, 23], [\"minute\", 0, 59], [\"second\", 0, 59], [\"millisecond\", 0, 999]];\nconst DATE_SYM_TABLE = Object.freeze({\n  \"%Y\": {\n    name: \"year\",\n    padding: 4,\n    re: /([0-9]{4})/\n  },\n  \"%G\": {\n    name: \"year\",\n    padding: 4,\n    re: /([0-9]{4})/\n  },\n  \"%m\": {\n    name: \"month\",\n    padding: 2,\n    re: /(0[1-9]|1[012])/\n  },\n  \"%d\": {\n    name: \"day\",\n    padding: 2,\n    re: /(0[1-9]|[12][0-9]|3[01])/\n  },\n  \"%H\": {\n    name: \"hour\",\n    padding: 2,\n    re: /([01][0-9]|2[0-3])/\n  },\n  \"%M\": {\n    name: \"minute\",\n    padding: 2,\n    re: /([0-5][0-9])/\n  },\n  \"%S\": {\n    name: \"second\",\n    padding: 2,\n    re: /([0-5][0-9]|60)/\n  },\n  \"%L\": {\n    name: \"millisecond\",\n    padding: 3,\n    re: /([0-9]{3})/\n  },\n  \"%u\": {\n    name: \"weekday\",\n    padding: 1,\n    re: /([1-7])/\n  },\n  \"%U\": {\n    name: \"week\",\n    padding: 2,\n    re: /([1-4][0-9]?|5[0-3]?)/\n  },\n  \"%V\": {\n    name: \"isoWeek\",\n    padding: 2,\n    re: /([1-4][0-9]?|5[0-3]?)/\n  },\n  \"%z\": {\n    name: \"timezone\",\n    padding: 2,\n    re: /(([+-][01][0-9]|2[0-3]):?([0-5][0-9])?)/\n  },\n  \"%Z\": {\n    name: \"minuteOffset\",\n    padding: 3,\n    re: /([+-][0-9]{3})/\n  }\n  // \"%%\": \"%\",\n});\nconst TIMEZONE_RE = /^[a-zA-Z_]+\\/[a-zA-Z_]+$/;\nfunction parseTimezone(tzstr) {\n  if (isNil(tzstr)) return 0;\n  if (TIMEZONE_RE.test(tzstr)) {\n    const date = /* @__PURE__ */new Date();\n    const utcDate = new Date(date.toLocaleString(\"en-US\", {\n      timeZone: \"UTC\"\n    }));\n    const tzDate = new Date(date.toLocaleString(\"en-US\", {\n      timeZone: tzstr\n    }));\n    return (tzDate.getTime() - utcDate.getTime()) / 6e4;\n  }\n  const m = DATE_SYM_TABLE[\"%z\"].re.exec(tzstr);\n  if (!m) {\n    throw new MingoError(`Timezone '${tzstr}' is invalid or not supported`);\n  }\n  const hr = parseInt(m[2]) || 0;\n  const min = parseInt(m[3]) || 0;\n  return (Math.abs(hr * MINUTES_PER_HOUR) + min) * (hr < 0 ? -1 : 1);\n}\nfunction formatTimezone(minuteOffset) {\n  return (minuteOffset < 0 ? \"-\" : \"+\") + padDigits(Math.abs(Math.floor(minuteOffset / MINUTES_PER_HOUR)), 2) + padDigits(Math.abs(minuteOffset) % MINUTES_PER_HOUR, 2);\n}\nfunction adjustDate(d, minuteOffset) {\n  d.setUTCMinutes(d.getUTCMinutes() + minuteOffset);\n}\nfunction computeDate(obj, expr, options) {\n  if (isDate(obj)) return obj;\n  const d = computeValue(obj, expr, null, options);\n  if (isDate(d)) return new Date(d);\n  if (isNumber(d)) return new Date(d * 1e3);\n  if (d.date) {\n    const date = isDate(d.date) ? new Date(d.date) : new Date(d.date * 1e3);\n    if (d.timezone) {\n      adjustDate(date, parseTimezone(d.timezone));\n    }\n    return date;\n  }\n  throw Error(`cannot convert ${JSON.stringify(expr)} to date`);\n}\nfunction padDigits(n, digits) {\n  return new Array(Math.max(digits - String(n).length + 1, 0)).join(\"0\") + n.toString();\n}\nconst leapYearsSinceReferencePoint = year => {\n  const yearsSinceReferencePoint = year - LEAP_YEAR_REF_POINT;\n  return Math.trunc(yearsSinceReferencePoint / 4) - Math.trunc(yearsSinceReferencePoint / 100) + Math.trunc(yearsSinceReferencePoint / 400);\n};\nfunction daysBetweenYears(startYear, endYear) {\n  return Math.trunc(leapYearsSinceReferencePoint(endYear - 1) - leapYearsSinceReferencePoint(startYear - 1) + (endYear - startYear) * DAYS_IN_YEAR[0]);\n}\nconst dateDiffYear = (start, end) => end.getUTCFullYear() - start.getUTCFullYear();\nconst dateDiffMonth = (start, end) => end.getUTCMonth() - start.getUTCMonth() + dateDiffYear(start, end) * 12;\nconst dateDiffQuarter = (start, end) => {\n  const a = Math.trunc(start.getUTCMonth() / 3);\n  const b = Math.trunc(end.getUTCMonth() / 3);\n  return b - a + dateDiffYear(start, end) * 4;\n};\nconst dateDiffDay = (start, end) => dayOfYear(end) - dayOfYear(start) + daysBetweenYears(start.getUTCFullYear(), end.getUTCFullYear());\nconst dateDiffWeek = (start, end, startOfWeek) => {\n  const wk = (startOfWeek || \"sun\").substring(0, 3);\n  return Math.trunc((dateDiffDay(start, end) + isoWeekday(start, wk) - isoWeekday(end, wk)) / DAYS_PER_WEEK);\n};\nconst dateDiffHour = (start, end) => end.getUTCHours() - start.getUTCHours() + dateDiffDay(start, end) * 24;\nconst addMonth = (d, amount) => {\n  const m = d.getUTCMonth() + amount;\n  const yearOffset = Math.floor(m / 12);\n  if (m < 0) {\n    const month = m % 12 + 12;\n    d.setUTCFullYear(d.getUTCFullYear() + yearOffset, month, d.getUTCDate());\n  } else {\n    d.setUTCFullYear(d.getUTCFullYear() + yearOffset, m % 12, d.getUTCDate());\n  }\n};\nconst dateAdd = (date, unit, amount, _timezone) => {\n  const d = new Date(date);\n  switch (unit) {\n    case \"year\":\n      d.setUTCFullYear(d.getUTCFullYear() + amount);\n      break;\n    case \"quarter\":\n      addMonth(d, 3 * amount);\n      break;\n    case \"month\":\n      addMonth(d, amount);\n      break;\n    default:\n      d.setTime(d.getTime() + TIMEUNIT_IN_MILLIS[unit] * amount);\n  }\n  return d;\n};\nexport { DATE_FORMAT, DATE_PART_INTERVAL, DATE_SYM_TABLE, DAYS_OF_WEEK, DAYS_OF_WEEK_SET, DAYS_PER_WEEK, LEAP_YEAR_REF_POINT, MILLIS_PER_DAY, MINUTES_PER_HOUR, TIMEUNIT_IN_MILLIS, adjustDate, computeDate, dateAdd, dateDiffDay, dateDiffHour, dateDiffMonth, dateDiffQuarter, dateDiffWeek, dateDiffYear, dayOfYear, daysBetweenYears, daysInMonth, daysInYear, formatTimezone, isLeapYear, isoWeek, isoWeekYear, isoWeekday, padDigits, parseTimezone };", "import { ComputeOptions } from \"../../core\";\nimport { concat, Lazy } from \"../../lazy\";\nimport { TIME_UNITS } from \"../../types\";\nimport { assert, isArray, isDate, isNil, isNumber, isObject, isString, resolve, ValueMap } from \"../../util\";\nimport { $dateAdd } from \"../expression/date/dateAdd\";\nimport { $sort } from \"./sort\";\nconst EMPTY_OBJECT = Object.freeze({});\nconst $densify = (collection, expr, options) => {\n  const {\n    step,\n    bounds,\n    unit\n  } = expr.range;\n  if (unit) {\n    assert(TIME_UNITS.includes(unit), \"\");\n    assert(Number.isInteger(step) && step > 0, \"The step parameter in a range statement must be a whole number when densifying a date range.\");\n  } else {\n    assert(isNumber(step) && step > 0, \"The step parameter in a range statement must be a strictly positive numeric value.\");\n  }\n  if (isArray(bounds)) {\n    assert(!!bounds && bounds.length === 2, \"A bounding array in a range statement must have exactly two elements.\");\n    assert((bounds.every(isNumber) || bounds.every(isDate)) && bounds[0] < bounds[1], \"A bounding array must be an ascending array of either two dates or two numbers.\");\n    assert(unit && !bounds.some(isNumber), \"Numeric bounds may not have unit parameter.\");\n  }\n  if (expr.partitionByFields) {\n    assert(isArray(expr.partitionByFields), \"$densify: `partitionByFields` must be an array of strings\");\n  }\n  collection = $sort(collection, {\n    [expr.field]: 1\n  }, options);\n  const nilOptions = ComputeOptions.init(options, null);\n  const computeNextValue = value => {\n    return isNumber(value) ? value + step : $dateAdd(EMPTY_OBJECT, {\n      startDate: value,\n      unit,\n      amount: step\n    }, nilOptions);\n  };\n  const isValidUnit = !!unit && TIME_UNITS.includes(unit);\n  const getFieldValue = o => {\n    const v = resolve(o, expr.field);\n    if (isNil(v)) return v;\n    if (isNumber(v)) {\n      assert(!isValidUnit, \"$densify: Encountered non-date value in collection when step has a date unit.\");\n    } else if (isDate(v)) {\n      assert(isValidUnit, \"$densify: Encountered date value in collection when step does not have a date unit.\");\n    } else {\n      assert(false, \"$densify: Densify field type must be numeric or a date\");\n    }\n    return v;\n  };\n  const peekItem = new Array();\n  const nilFieldsIterator = Lazy(() => {\n    const item = collection.next();\n    const fieldValue = getFieldValue(item.value);\n    if (isNil(fieldValue)) return item;\n    peekItem.push(item);\n    return {\n      done: true\n    };\n  });\n  const nextDensifyValueMap = ValueMap.init(options.hashFunction);\n  const [lower, upper] = isArray(bounds) ? bounds : [bounds, bounds];\n  let maxFieldValue = void 0;\n  const updateMaxFieldValue = value => {\n    maxFieldValue = maxFieldValue === void 0 || maxFieldValue < value ? value : maxFieldValue;\n  };\n  const rootKey = [];\n  const densifyIterator = Lazy(() => {\n    const item = peekItem.length > 0 ? peekItem.pop() : collection.next();\n    if (item.done) return item;\n    let partitionKey = rootKey;\n    if (isArray(expr.partitionByFields)) {\n      partitionKey = expr.partitionByFields.map(k => resolve(item.value, k));\n      assert(partitionKey.every(isString), \"$densify: Partition fields must evaluate to string values.\");\n    }\n    assert(isObject(item.value), \"$densify: collection must contain documents\");\n    const itemValue = getFieldValue(item.value);\n    if (!nextDensifyValueMap.has(partitionKey)) {\n      if (lower == \"full\") {\n        if (!nextDensifyValueMap.has(rootKey)) {\n          nextDensifyValueMap.set(rootKey, itemValue);\n        }\n        nextDensifyValueMap.set(partitionKey, nextDensifyValueMap.get(rootKey));\n      } else if (lower == \"partition\") {\n        nextDensifyValueMap.set(partitionKey, itemValue);\n      } else {\n        nextDensifyValueMap.set(partitionKey, lower);\n      }\n    }\n    const densifyValue = nextDensifyValueMap.get(partitionKey);\n    if (\n    // current item field value is lower than current densify value.\n    itemValue <= densifyValue ||\n    // range value equals or exceeds upper bound\n    upper != \"full\" && upper != \"partition\" && densifyValue >= upper) {\n      if (densifyValue <= itemValue) {\n        nextDensifyValueMap.set(partitionKey, computeNextValue(densifyValue));\n      }\n      updateMaxFieldValue(itemValue);\n      return item;\n    }\n    nextDensifyValueMap.set(partitionKey, computeNextValue(densifyValue));\n    updateMaxFieldValue(densifyValue);\n    const denseObj = {\n      [expr.field]: densifyValue\n    };\n    if (partitionKey) {\n      partitionKey.forEach((v, i) => {\n        denseObj[expr.partitionByFields[i]] = v;\n      });\n    }\n    peekItem.push(item);\n    return {\n      done: false,\n      value: denseObj\n    };\n  });\n  if (lower !== \"full\") return concat(nilFieldsIterator, densifyIterator);\n  let paritionIndex = -1;\n  let partitionKeysSet = void 0;\n  const fullBoundsIterator = Lazy(() => {\n    if (paritionIndex === -1) {\n      const fullDensifyValue = nextDensifyValueMap.get(rootKey);\n      nextDensifyValueMap.delete(rootKey);\n      partitionKeysSet = Array.from(nextDensifyValueMap.keys());\n      if (partitionKeysSet.length === 0) {\n        partitionKeysSet.push(rootKey);\n        nextDensifyValueMap.set(rootKey, fullDensifyValue);\n      }\n      paritionIndex++;\n    }\n    do {\n      const partitionKey = partitionKeysSet[paritionIndex];\n      const partitionMaxValue = nextDensifyValueMap.get(partitionKey);\n      if (partitionMaxValue < maxFieldValue) {\n        nextDensifyValueMap.set(partitionKey, computeNextValue(partitionMaxValue));\n        const denseObj = {\n          [expr.field]: partitionMaxValue\n        };\n        partitionKey.forEach((v, i) => {\n          denseObj[expr.partitionByFields[i]] = v;\n        });\n        return {\n          done: false,\n          value: denseObj\n        };\n      }\n      paritionIndex++;\n    } while (paritionIndex < partitionKeysSet.length);\n    return {\n      done: true\n    };\n  });\n  return concat(nilFieldsIterator, densifyIterator, fullBoundsIterator);\n};\nexport { $densify };", "import { groupBy, isEqual, MingoError } from \"../../util\";\nimport { $push } from \"../accumulator\";\nimport { MILLIS_PER_DAY } from \"../expression/date/_internal\";\nimport { isUnbounded } from \"../pipeline/_internal\";\nconst MILLIS_PER_UNIT = {\n  week: MILLIS_PER_DAY * 7,\n  day: MILLIS_PER_DAY,\n  hour: MILLIS_PER_DAY / 24,\n  minute: 6e4,\n  second: 1e3,\n  millisecond: 1\n};\nconst memo = /* @__PURE__ */new WeakMap();\nfunction withMemo(collection, expr, cacheFn, fn) {\n  if (!isUnbounded(expr.parentExpr.output[expr.field].window)) {\n    return fn(cacheFn());\n  }\n  if (!memo.has(collection)) {\n    memo.set(collection, {\n      [expr.field]: cacheFn()\n    });\n  }\n  const data = memo.get(collection);\n  if (data[expr.field] === void 0) {\n    data[expr.field] = cacheFn();\n  }\n  let failed = false;\n  try {\n    return fn(data[expr.field]);\n  } catch {\n    failed = true;\n  } finally {\n    if (failed || expr.documentNumber === collection.length) {\n      delete data[expr.field];\n      if (Object.keys(data).length === 0) memo.delete(collection);\n    }\n  }\n}\nfunction rank(_, collection, expr, options, dense) {\n  return withMemo(collection, expr, () => {\n    const sortKey = \"$\" + Object.keys(expr.parentExpr.sortBy)[0];\n    const values = $push(collection, sortKey, options);\n    const groups = groupBy(values, (_2, n) => values[n], options.hashFunction);\n    return {\n      values,\n      groups\n    };\n  }, input => {\n    const {\n      values,\n      groups: partitions\n    } = input;\n    if (partitions.size == collection.length) {\n      return expr.documentNumber;\n    }\n    const current = values[expr.documentNumber - 1];\n    let i = 0;\n    let offset = 0;\n    for (const key of partitions.keys()) {\n      if (isEqual(current, key)) {\n        return dense ? i + 1 : offset + 1;\n      }\n      i++;\n      offset += partitions.get(key).length;\n    }\n    throw new MingoError(\"rank: invalid return value. please submit a bug report.\");\n  });\n}\nexport { MILLIS_PER_UNIT, rank, withMemo };", "import { computeValue } from \"../core\";\nimport { Query } from \"../query\";\nimport { compare as mingoCmp, ensureArray, flatten, intersection, isArray, isBoolean, isDate, isEmpty, isEqual, isNil, isNumber, isObject, isOperator, isRegExp, isString, MingoError, resolve, truthy, typeOf } from \"../util\";\nfunction createQueryOperator(predicate) {\n  const f = (selector, value, options) => {\n    const opts = {\n      unwrapArray: true\n    };\n    const depth = Math.max(1, selector.split(\".\").length - 1);\n    return obj => {\n      const lhs = resolve(obj, selector, opts);\n      return predicate(lhs, value, {\n        ...options,\n        depth\n      });\n    };\n  };\n  return f;\n}\nfunction createExpressionOperator(predicate) {\n  return (obj, expr, options) => {\n    const args = computeValue(obj, expr, null, options);\n    return predicate(...args);\n  };\n}\nfunction $eq(a, b, options) {\n  if (isEqual(a, b)) return true;\n  if (isNil(a) && isNil(b)) return true;\n  if (isArray(a)) {\n    return a.some(v => isEqual(v, b)) || flatten(a, options?.depth).some(v => isEqual(v, b));\n  }\n  return false;\n}\nfunction $ne(a, b, options) {\n  return !$eq(a, b, options);\n}\nfunction $in(a, b, options) {\n  if (isNil(a)) return b.some(v => v === null);\n  return intersection([ensureArray(a), b], options?.hashFunction).length > 0;\n}\nfunction $nin(a, b, options) {\n  return !$in(a, b, options);\n}\nfunction $lt(a, b, _options) {\n  return compare(a, b, (x, y) => mingoCmp(x, y) < 0);\n}\nfunction $lte(a, b, _options) {\n  return compare(a, b, (x, y) => mingoCmp(x, y) <= 0);\n}\nfunction $gt(a, b, _options) {\n  return compare(a, b, (x, y) => mingoCmp(x, y) > 0);\n}\nfunction $gte(a, b, _options) {\n  return compare(a, b, (x, y) => mingoCmp(x, y) >= 0);\n}\nfunction $mod(a, b, _options) {\n  return ensureArray(a).some(x => b.length === 2 && x % b[0] === b[1]);\n}\nfunction $regex(a, b, options) {\n  const lhs = ensureArray(a);\n  const match = x => isString(x) && truthy(b.exec(x), options?.useStrictMode);\n  return lhs.some(match) || flatten(lhs, 1).some(match);\n}\nfunction $exists(a, b, _options) {\n  return (b === false || b === 0) && a === void 0 || (b === true || b === 1) && a !== void 0;\n}\nfunction $all(values, queries, options) {\n  if (!isArray(values) || !isArray(queries) || !values.length || !queries.length) {\n    return false;\n  }\n  let matched = true;\n  for (const query of queries) {\n    if (!matched) break;\n    if (isObject(query) && Object.keys(query).includes(\"$elemMatch\")) {\n      matched = $elemMatch(values, query[\"$elemMatch\"], options);\n    } else if (isRegExp(query)) {\n      matched = values.some(s => typeof s === \"string\" && query.test(s));\n    } else {\n      matched = values.some(v => isEqual(query, v));\n    }\n  }\n  return matched;\n}\nfunction $size(a, b, _options) {\n  return Array.isArray(a) && a.length === b;\n}\nfunction isNonBooleanOperator(name) {\n  return isOperator(name) && [\"$and\", \"$or\", \"$nor\"].indexOf(name) === -1;\n}\nfunction $elemMatch(a, b, options) {\n  if (isArray(a) && !isEmpty(a)) {\n    let format = x => x;\n    let criteria = b;\n    if (Object.keys(b).every(isNonBooleanOperator)) {\n      criteria = {\n        temp: b\n      };\n      format = x => ({\n        temp: x\n      });\n    }\n    const query = new Query(criteria, options);\n    for (let i = 0, len = a.length; i < len; i++) {\n      if (query.test(format(a[i]))) {\n        return true;\n      }\n    }\n  }\n  return false;\n}\nconst isNull = a => a === null;\nconst compareFuncs = {\n  array: isArray,\n  boolean: isBoolean,\n  bool: isBoolean,\n  date: isDate,\n  number: isNumber,\n  int: isNumber,\n  long: isNumber,\n  double: isNumber,\n  decimal: isNumber,\n  null: isNull,\n  object: isObject,\n  regexp: isRegExp,\n  regex: isRegExp,\n  string: isString,\n  // added for completeness\n  undefined: isNil,\n  // deprecated\n  function: _ => {\n    throw new MingoError(\"unsupported type key `function`.\");\n  },\n  // Mongo identifiers\n  1: isNumber,\n  //double\n  2: isString,\n  3: isObject,\n  4: isArray,\n  6: isNil,\n  // deprecated\n  8: isBoolean,\n  9: isDate,\n  10: isNull,\n  11: isRegExp,\n  16: isNumber,\n  //int\n  18: isNumber,\n  //long\n  19: isNumber\n  //decimal\n};\nfunction compareType(a, b, _) {\n  const f = compareFuncs[b];\n  return f ? f(a) : false;\n}\nfunction $type(a, b, options) {\n  return isArray(b) ? b.findIndex(t => compareType(a, t, options)) >= 0 : compareType(a, b, options);\n}\nfunction compare(a, b, f) {\n  return ensureArray(a).some(x => typeOf(x) === typeOf(b) && f(x, b));\n}\nexport { $all, $elemMatch, $eq, $exists, $gt, $gte, $in, $lt, $lte, $mod, $ne, $nin, $regex, $size, $type, createExpressionOperator, createQueryOperator };", "import { $nin as __nin, createExpressionOperator } from \"../../_predicates\";\nconst $nin = createExpressionOperator(__nin);\nexport { $nin };", "import { computeValue } from \"../../../core\";\nimport { assert, isArray, isNil, isNumber } from \"../../../util\";\nconst bitwise = (op, compute) => (obj, expr, options) => {\n  assert(isArray(expr), `${op}: expression must be an array.`);\n  const nums = computeValue(obj, expr, null, options);\n  if (nums.some(isNil)) return null;\n  assert(nums.every(isNumber), `${op}: expression must evalue to array of numbers.`);\n  return compute(nums);\n};\nexport { bitwise };", "import { bitwise } from \"./_internal\";\nconst $bitAnd = bitwise(\"$bitAnd\", nums => nums.reduce((a, b) => a & b, -1));\nexport { $bitAnd };", "import { bitwise } from \"./_internal\";\nconst $bitOr = bitwise(\"$bitOr\", nums => nums.reduce((a, b) => a | b, 0));\nexport { $bitOr };", "import { bitwise } from \"./_internal\";\nconst $bitXor = bitwise(\"$bitXor\", nums => nums.reduce((a, b) => a ^ b, 0));\nexport { $bitXor };", "import { $eq as __eq, createExpressionOperator } from \"../../_predicates\";\nconst $eq = createExpressionOperator(__eq);\nexport { $eq };", "import { $gt as __gt, createExpressionOperator } from \"../../_predicates\";\nconst $gt = createExpressionOperator(__gt);\nexport { $gt };", "import { $gte as __gte, createExpressionOperator } from \"../../_predicates\";\nconst $gte = createExpressionOperator(__gte);\nexport { $gte };", "import { $lt as __lt, createExpressionOperator } from \"../../_predicates\";\nconst $lt = createExpressionOperator(__lt);\nexport { $lt };", "import { $lte as __lte, createExpressionOperator } from \"../../_predicates\";\nconst $lte = createExpressionOperator(__lte);\nexport { $lte };", "import { $ne as __ne, createExpressionOperator } from \"../../_predicates\";\nconst $ne = createExpressionOperator(__ne);\nexport { $ne };", "import { computeValue } from \"../../../core\";\nimport { assert, isNil, isObject } from \"../../../util\";\nimport { adjustDate, DATE_FORMAT, DATE_SYM_TABLE, MINUTES_PER_HOUR, parseTimezone } from \"./_internal\";\nconst buildMap = (letters, sign) => {\n  const h = {};\n  letters.split(\"\").forEach((v, i) => h[v] = sign * (i + 1));\n  return h;\n};\nconst TZ_LETTER_OFFSETS = {\n  ...buildMap(\"ABCDEFGHIKLM\", 1),\n  ...buildMap(\"NOPQRSTUVWXY\", -1),\n  Z: 0\n};\nconst regexStrip = s => s.replace(/^\\//, \"\").replace(/\\/$/, \"\");\nconst REGEX_SPECIAL_CHARS = [\"^\", \".\", \"-\", \"*\", \"?\", \"$\"];\nconst regexQuote = s => {\n  REGEX_SPECIAL_CHARS.forEach(c => {\n    s = s.replace(c, `\\\\${c}`);\n  });\n  return s;\n};\nconst $dateFromString = (obj, expr, options) => {\n  const args = computeValue(obj, expr, null, options);\n  args.format = args.format || DATE_FORMAT;\n  args.onNull = args.onNull || null;\n  let dateString = args.dateString;\n  if (isNil(dateString)) return args.onNull;\n  const separators = args.format.split(/%[YGmdHMSLuVzZ]/);\n  separators.reverse();\n  const matches = args.format.match(/(%%|%Y|%G|%m|%d|%H|%M|%S|%L|%u|%V|%z|%Z)/g);\n  const dateParts = {};\n  let expectedPattern = \"\";\n  for (let i = 0, len = matches.length; i < len; i++) {\n    const formatSpecifier = matches[i];\n    const props = DATE_SYM_TABLE[formatSpecifier];\n    if (isObject(props)) {\n      const m2 = props.re.exec(dateString);\n      const delimiter = separators.pop() || \"\";\n      if (m2 !== null) {\n        dateParts[props.name] = /^\\d+$/.exec(m2[0]) ? parseInt(m2[0]) : m2[0];\n        dateString = dateString.substr(0, m2.index) + dateString.substr(m2.index + m2[0].length);\n        expectedPattern += regexQuote(delimiter) + regexStrip(props.re.toString());\n      } else {\n        dateParts[props.name] = null;\n      }\n    }\n  }\n  if (isNil(dateParts.year) || isNil(dateParts.month) || isNil(dateParts.day) || !new RegExp(\"^\" + expectedPattern + \"[A-Z]?$\").exec(args.dateString)) {\n    return args.onError;\n  }\n  const m = args.dateString.match(/([A-Z])$/);\n  assert(\n  // only one of in-date timeone or timezone argument but not both.\n  !(m && args.timezone), `$dateFromString: you cannot pass in a date/time string with time zone information ('${m && m[0]}') together with a timezone argument`);\n  const minuteOffset = m ? TZ_LETTER_OFFSETS[m[0]] * MINUTES_PER_HOUR : parseTimezone(args.timezone);\n  const d = new Date(Date.UTC(dateParts.year, dateParts.month - 1, dateParts.day, 0, 0, 0));\n  if (!isNil(dateParts.hour)) d.setUTCHours(dateParts.hour);\n  if (!isNil(dateParts.minute)) d.setUTCMinutes(dateParts.minute);\n  if (!isNil(dateParts.second)) d.setUTCSeconds(dateParts.second);\n  if (!isNil(dateParts.millisecond)) d.setUTCMilliseconds(dateParts.millisecond);\n  adjustDate(d, -minuteOffset);\n  return d;\n};\nexport { $dateFromString };", "import { computeValue } from \"../../../core\";\nimport { MingoError } from \"../../../util\";\nconst FIXED_POINTS = {\n  undefined: null,\n  null: null,\n  NaN: NaN,\n  Infinity: new Error(),\n  \"-Infinity\": new Error()\n};\nfunction createTrignometryOperator(f, fixedPoints = FIXED_POINTS) {\n  const fp = Object.assign({}, FIXED_POINTS, fixedPoints);\n  const keySet = new Set(Object.keys(fp));\n  return (obj, expr, options) => {\n    const n = computeValue(obj, expr, null, options);\n    if (keySet.has(`${n}`)) {\n      const res = fp[`${n}`];\n      if (res instanceof Error) {\n        throw new MingoError(`cannot apply $${f.name} to -inf, value must in (-inf,inf)`);\n      }\n      return res;\n    }\n    return f(n);\n  };\n}\nexport { createTrignometryOperator };", "import { createTrignometryOperator } from \"./_internal\";\nconst $acos = createTrignometryOperator(Math.acos, {\n  Infinity: Infinity,\n  0: new Error()\n});\nexport { $acos };", "import { createTrignometryOperator } from \"./_internal\";\nconst $acosh = createTrignometryOperator(Math.acosh, {\n  Infinity: Infinity,\n  0: new Error()\n});\nexport { $acosh };", "import { createTrignometryOperator } from \"./_internal\";\nconst $asin = createTrignometryOperator(Math.asin);\nexport { $asin };", "import { createTrignometryOperator } from \"./_internal\";\nconst $asinh = createTrignometryOperator(Math.asinh, {\n  Infinity: Infinity,\n  \"-Infinity\": -Infinity\n});\nexport { $asinh };", "import { createTrignometryOperator } from \"./_internal\";\nconst $atan = createTrignometryOperator(Math.atan);\nexport { $atan };", "import { createTrignometryOperator } from \"./_internal\";\nconst $atanh = createTrignometryOperator(Math.atanh, {\n  1: Infinity,\n  \"-1\": -Infinity\n});\nexport { $atanh };", "import { createTrignometryOperator } from \"./_internal\";\nconst $cos = createTrignometryOperator(Math.cos);\nexport { $cos };", "import { createTrignometryOperator } from \"./_internal\";\nconst $cosh = createTrignometryOperator(Math.cosh, {\n  \"-Infinity\": Infinity,\n  Infinity: Infinity\n});\nexport { $cosh };", "import { createTrignometryOperator } from \"./_internal\";\nconst RADIANS_FACTOR = Math.PI / 180;\nconst $degreesToRadians = createTrignometryOperator(n => n * RADIANS_FACTOR, {\n  Infinity: Infinity,\n  \"-Infinity\": Infinity\n});\nexport { $degreesToRadians };", "import { createTrignometryOperator } from \"./_internal\";\nconst DEGREES_FACTOR = 180 / Math.PI;\nconst $radiansToDegrees = createTrignometryOperator(n => n * DEGREES_FACTOR, {\n  Infinity: Infinity,\n  \"-Infinity\": -Infinity\n});\nexport { $radiansToDegrees };", "import { createTrignometryOperator } from \"./_internal\";\nconst $sin = createTrignometryOperator(Math.sin);\nexport { $sin };", "import { createTrignometryOperator } from \"./_internal\";\nconst $sinh = createTrignometryOperator(Math.sinh, {\n  \"-Infinity\": -Infinity,\n  Infinity: Infinity\n});\nexport { $sinh };", "import { createTrignometryOperator } from \"./_internal\";\nconst $tan = createTrignometryOperator(Math.tan);\nexport { $tan };", "import { computeValue } from \"../../../core\";\nimport { isDate, isNil, isNumber, isString } from \"../../../util\";\nconst MAX_INT = 2147483647;\nconst MIN_INT = -2147483648;\nconst MAX_LONG = Number.MAX_SAFE_INTEGER;\nconst MIN_LONG = Number.MIN_SAFE_INTEGER;\nclass TypeConvertError extends Error {\n  constructor(message) {\n    super(message);\n  }\n}\nfunction toInteger(obj, expr, options, min, max) {\n  const val = computeValue(obj, expr, null, options);\n  if (val === true) return 1;\n  if (val === false) return 0;\n  if (isNil(val)) return null;\n  if (isDate(val)) return val.getTime();\n  const n = Number(val);\n  if (isNumber(n) && n >= min && n <= max) {\n    if (!isString(val) || n.toString().indexOf(\".\") === -1) {\n      return Math.trunc(n);\n    }\n  }\n  throw new TypeConvertError(`cannot convert '${val}' to ${max == MAX_INT ? \"int\" : \"long\"}`);\n}\nexport { MAX_INT, MAX_LONG, MIN_INT, MIN_LONG, TypeConvertError, toInteger };", "import { Query } from \"../../../query\";\nimport { assert, isArray } from \"../../../util\";\nconst $and = (_, rhs, options) => {\n  assert(isArray(rhs), \"Invalid expression: $and expects value to be an Array.\");\n  const queries = rhs.map(expr => new Query(expr, options));\n  return obj => queries.every(q => q.test(obj));\n};\nexport { $and };", "import { Query } from \"../../../query\";\nimport { assert, isArray } from \"../../../util\";\nconst $or = (_, rhs, options) => {\n  assert(isArray(rhs), \"Invalid expression. $or expects value to be an Array\");\n  const queries = rhs.map(expr => new Query(expr, options));\n  return obj => queries.some(q => q.test(obj));\n};\nexport { $or };", "import { assert, isArray } from \"../../../util\";\nimport { $or } from \"./or\";\nconst $nor = (_, rhs, options) => {\n  assert(isArray(rhs), \"Invalid expression. $nor expects value to be an array.\");\n  const f = $or(\"$or\", rhs, options);\n  return obj => !f(obj);\n};\nexport { $nor };", "import { Query } from \"../../../query\";\nimport { normalize } from \"../../../util\";\nconst $not = (selector, rhs, options) => {\n  const criteria = {};\n  criteria[selector] = normalize(rhs);\n  const query = new Query(criteria, options);\n  return obj => !query.test(obj);\n};\nexport { $not };", "import { $eq as __eq, createQueryOperator } from \"../../_predicates\";\nconst $eq = createQueryOperator(__eq);\nexport { $eq };", "import { $gt as __gt, createQueryOperator } from \"../../_predicates\";\nconst $gt = createQueryOperator(__gt);\nexport { $gt };", "import { $gte as __gte, createQueryOperator } from \"../../_predicates\";\nconst $gte = createQueryOperator(__gte);\nexport { $gte };", "import { $in as __in, createQueryOperator } from \"../../_predicates\";\nconst $in = createQueryOperator(__in);\nexport { $in };", "import { $lt as __lt, createQueryOperator } from \"../../_predicates\";\nconst $lt = createQueryOperator(__lt);\nexport { $lt };", "import { $lte as __lte, createQueryOperator } from \"../../_predicates\";\nconst $lte = createQueryOperator(__lte);\nexport { $lte };", "import { $ne as __ne, createQueryOperator } from \"../../_predicates\";\nconst $ne = createQueryOperator(__ne);\nexport { $ne };", "import { $nin as __nin, createQueryOperator } from \"../../_predicates\";\nconst $nin = createQueryOperator(__nin);\nexport { $nin };", "import { $mod as __mod, createQueryOperator } from \"../../_predicates\";\nconst $mod = createQueryOperator(__mod);\nexport { $mod };", "import { $regex as __regex, createQueryOperator } from \"../../_predicates\";\nconst $regex = createQueryOperator(__regex);\nexport { $regex };", "import { $all as __all, createQueryOperator } from \"../../_predicates\";\nconst $all = createQueryOperator(__all);\nexport { $all };", "import { $elemMatch as __elemMatch, createQueryOperator } from \"../../_predicates\";\nconst $elemMatch = createQueryOperator(__elemMatch);\nexport { $elemMatch };", "import { $size as __size, createQueryOperator } from \"../../_predicates\";\nconst $size = createQueryOperator(__size);\nexport { $size };", "import { $exists as __exists, createQueryOperator } from \"../../_predicates\";\nconst $exists = createQueryOperator(__exists);\nexport { $exists };", "import { $type as __type, createQueryOperator } from \"../../_predicates\";\nconst $type = createQueryOperator(__type);\nexport { $type };", "import { useOperators, OperatorType } from 'mingo/core';\nimport { Query } from 'mingo/query';\nimport { $project, $sort } from 'mingo/operators/pipeline';\nimport { $and, $not, $or, $nor } from 'mingo/operators/query/logical';\nimport { $eq, $ne, $gt, $gte, $lt, $lte, $nin, $in } from 'mingo/operators/query/comparison';\nimport { $regex, $mod } from 'mingo/operators/query/evaluation';\nimport { $elemMatch, $size } from 'mingo/operators/query/array';\nimport { $exists, $type } from 'mingo/operators/query/element';\nvar mingoInitDone = false;\n\n/**\n * The MongoDB query library is huge and we do not need all the operators.\n * If you add an operator here, make sure that you properly add a test in\n * the file /test/unit/rx-storage-query-correctness.test.ts\n *\n * @link https://github.com/kofrasa/mingo#es6\n */\nexport function getMingoQuery(selector) {\n  if (!mingoInitDone) {\n    useOperators(OperatorType.PIPELINE, {\n      $sort,\n      $project\n    });\n    useOperators(OperatorType.QUERY, {\n      $and,\n      $eq,\n      $elemMatch,\n      $exists,\n      $gt,\n      $gte,\n      $in,\n      $lt,\n      $lte,\n      $ne,\n      $nin,\n      $mod,\n      $nor,\n      $not,\n      $or,\n      $regex,\n      $size,\n      $type\n    });\n    mingoInitDone = true;\n  }\n  return new Query(selector);\n}\n", "import { LOGICAL_OPERATORS, getQueryPlan } from \"./query-planner.js\";\nimport { getPrimaryFieldOfPrimaryKey } from \"./rx-schema-helper.js\";\nimport { clone, firstPropertyNameOfObject, toArray, isMaybeReadonlyArray, flatClone, objectPathMonad } from \"./plugins/utils/index.js\";\nimport { compare as mingoSortComparator } from 'mingo/util';\nimport { newRxError } from \"./rx-error.js\";\nimport { getMingoQuery } from \"./rx-query-mingo.js\";\n\n/**\n * Normalize the query to ensure we have all fields set\n * and queries that represent the same query logic are detected as equal by the caching.\n */\nexport function normalizeMangoQuery(schema, mangoQuery) {\n  var primaryKey = getPrimaryFieldOfPrimaryKey(schema.primaryKey);\n  mangoQuery = flatClone(mangoQuery);\n  var normalizedMangoQuery = clone(mangoQuery);\n  if (typeof normalizedMangoQuery.skip !== 'number') {\n    normalizedMangoQuery.skip = 0;\n  }\n  if (!normalizedMangoQuery.selector) {\n    normalizedMangoQuery.selector = {};\n  } else {\n    normalizedMangoQuery.selector = normalizedMangoQuery.selector;\n    /**\n     * In mango query, it is possible to have an\n     * equals comparison by directly assigning a value\n     * to a property, without the '$eq' operator.\n     * Like:\n     * selector: {\n     *   foo: 'bar'\n     * }\n     * For normalization, we have to normalize this\n     * so our checks can perform properly.\n     *\n     *\n     * TODO this must work recursive with nested queries that\n     * contain multiple selectors via $and or $or etc.\n     */\n    Object.entries(normalizedMangoQuery.selector).forEach(([field, matcher]) => {\n      if (typeof matcher !== 'object' || matcher === null) {\n        normalizedMangoQuery.selector[field] = {\n          $eq: matcher\n        };\n      }\n    });\n  }\n\n  /**\n   * Ensure that if an index is specified,\n   * the primaryKey is inside of it.\n   */\n  if (normalizedMangoQuery.index) {\n    var indexAr = toArray(normalizedMangoQuery.index);\n    if (!indexAr.includes(primaryKey)) {\n      indexAr.push(primaryKey);\n    }\n    normalizedMangoQuery.index = indexAr;\n  }\n\n  /**\n   * To ensure a deterministic sorting,\n   * we have to ensure the primary key is always part\n   * of the sort query.\n   * Primary sorting is added as last sort parameter,\n   * similar to how we add the primary key to indexes that do not have it.\n   *\n   */\n  if (!normalizedMangoQuery.sort) {\n    /**\n     * If no sort is given at all,\n     * we can assume that the user does not care about sort order at al.\n     *\n     * we cannot just use the primary key as sort parameter\n     * because it would likely cause the query to run over the primary key index\n     * which has a bad performance in most cases.\n     */\n    if (normalizedMangoQuery.index) {\n      normalizedMangoQuery.sort = normalizedMangoQuery.index.map(field => {\n        return {\n          [field]: 'asc'\n        };\n      });\n    } else {\n      /**\n       * Find the index that best matches the fields with the logical operators\n       */\n      if (schema.indexes) {\n        var fieldsWithLogicalOperator = new Set();\n        Object.entries(normalizedMangoQuery.selector).forEach(([field, matcher]) => {\n          var hasLogical = false;\n          if (typeof matcher === 'object' && matcher !== null) {\n            hasLogical = !!Object.keys(matcher).find(operator => LOGICAL_OPERATORS.has(operator));\n          } else {\n            hasLogical = true;\n          }\n          if (hasLogical) {\n            fieldsWithLogicalOperator.add(field);\n          }\n        });\n        var currentFieldsAmount = -1;\n        var currentBestIndexForSort;\n        schema.indexes.forEach(index => {\n          var useIndex = isMaybeReadonlyArray(index) ? index : [index];\n          var firstWrongIndex = useIndex.findIndex(indexField => !fieldsWithLogicalOperator.has(indexField));\n          if (firstWrongIndex > 0 && firstWrongIndex > currentFieldsAmount) {\n            currentFieldsAmount = firstWrongIndex;\n            currentBestIndexForSort = useIndex;\n          }\n        });\n        if (currentBestIndexForSort) {\n          normalizedMangoQuery.sort = currentBestIndexForSort.map(field => {\n            return {\n              [field]: 'asc'\n            };\n          });\n        }\n      }\n\n      /**\n       * Fall back to the primary key as sort order\n       * if no better one has been found\n       */\n      if (!normalizedMangoQuery.sort) {\n        normalizedMangoQuery.sort = [{\n          [primaryKey]: 'asc'\n        }];\n      }\n    }\n  } else {\n    var isPrimaryInSort = normalizedMangoQuery.sort.find(p => firstPropertyNameOfObject(p) === primaryKey);\n    if (!isPrimaryInSort) {\n      normalizedMangoQuery.sort = normalizedMangoQuery.sort.slice(0);\n      normalizedMangoQuery.sort.push({\n        [primaryKey]: 'asc'\n      });\n    }\n  }\n  return normalizedMangoQuery;\n}\n\n/**\n * Returns the sort-comparator,\n * which is able to sort documents in the same way\n * a query over the db would do.\n */\nexport function getSortComparator(schema, query) {\n  if (!query.sort) {\n    throw newRxError('SNH', {\n      query\n    });\n  }\n  var sortParts = [];\n  query.sort.forEach(sortBlock => {\n    var key = Object.keys(sortBlock)[0];\n    var direction = Object.values(sortBlock)[0];\n    sortParts.push({\n      key,\n      direction,\n      getValueFn: objectPathMonad(key)\n    });\n  });\n  var fun = (a, b) => {\n    for (var i = 0; i < sortParts.length; ++i) {\n      var sortPart = sortParts[i];\n      var valueA = sortPart.getValueFn(a);\n      var valueB = sortPart.getValueFn(b);\n      if (valueA !== valueB) {\n        var ret = sortPart.direction === 'asc' ? mingoSortComparator(valueA, valueB) : mingoSortComparator(valueB, valueA);\n        return ret;\n      }\n    }\n  };\n  return fun;\n}\n\n/**\n * Returns a function\n * that can be used to check if a document\n * matches the query.\n */\nexport function getQueryMatcher(_schema, query) {\n  if (!query.sort) {\n    throw newRxError('SNH', {\n      query\n    });\n  }\n  var mingoQuery = getMingoQuery(query.selector);\n  var fun = doc => {\n    return mingoQuery.test(doc);\n  };\n  return fun;\n}\nexport async function runQueryUpdateFunction(rxQuery, fn) {\n  var docs = await rxQuery.exec();\n  if (!docs) {\n    // only findOne() queries can return null\n    return null;\n  }\n  if (Array.isArray(docs)) {\n    return Promise.all(docs.map(doc => fn(doc)));\n  } else if (docs instanceof Map) {\n    return Promise.all([...docs.values()].map(doc => fn(doc)));\n  } else {\n    // via findOne()\n    var result = await fn(docs);\n    return result;\n  }\n}\n\n/**\n * @returns a format of the query that can be used with the storage\n * when calling RxStorageInstance().query()\n */\nexport function prepareQuery(schema, mutateableQuery) {\n  if (!mutateableQuery.sort) {\n    throw newRxError('SNH', {\n      query: mutateableQuery\n    });\n  }\n\n  /**\n   * Store the query plan together with the\n   * prepared query to save performance.\n   */\n  var queryPlan = getQueryPlan(schema, mutateableQuery);\n  return {\n    query: mutateableQuery,\n    queryPlan\n  };\n}\n", "/**\n * Helper functions for accessing the RxStorage instances.\n */\n\nimport { overwritable } from \"./overwritable.js\";\nimport { newRxError } from \"./rx-error.js\";\nimport { getPrimaryFieldOfPrimaryKey } from \"./rx-schema-helper.js\";\nimport { PROMISE_RESOLVE_TRUE, RXDB_VERSION, RX_META_LWT_MINIMUM, appendToArray, createRevision, ensureNotFalsy, flatClone, getFromMapOrCreate, lastOfArray, now, promiseWait, randomToken } from \"./plugins/utils/index.js\";\nimport { filter, map, startWith, switchMap } from 'rxjs';\nimport { normalizeMangoQuery, prepareQuery } from \"./rx-query-helper.js\";\nimport { runPluginHooks } from \"./hooks.js\";\nexport var INTERNAL_STORAGE_NAME = '_rxdb_internal';\nexport var RX_DATABASE_LOCAL_DOCS_STORAGE_NAME = 'rxdatabase_storage_local';\nexport async function getSingleDocument(storageInstance, documentId) {\n  var results = await storageInstance.findDocumentsById([documentId], false);\n  var doc = results[0];\n  if (doc) {\n    return doc;\n  } else {\n    return undefined;\n  }\n}\n\n/**\n * Writes a single document,\n * throws RxStorageBulkWriteError on failure\n */\nexport async function writeSingle(instance, writeRow, context) {\n  var writeResult = await instance.bulkWrite([writeRow], context);\n  if (writeResult.error.length > 0) {\n    var error = writeResult.error[0];\n    throw error;\n  } else {\n    var primaryPath = getPrimaryFieldOfPrimaryKey(instance.schema.primaryKey);\n    var success = getWrittenDocumentsFromBulkWriteResponse(primaryPath, [writeRow], writeResult);\n    var ret = success[0];\n    return ret;\n  }\n}\n\n/**\n * Observe the plain document data of a single document.\n * Do not forget to unsubscribe.\n */\nexport function observeSingle(storageInstance, documentId) {\n  var firstFindPromise = getSingleDocument(storageInstance, documentId);\n  var ret = storageInstance.changeStream().pipe(map(evBulk => evBulk.events.find(ev => ev.documentId === documentId)), filter(ev => !!ev), map(ev => Promise.resolve(ensureNotFalsy(ev).documentData)), startWith(firstFindPromise), switchMap(v => v), filter(v => !!v));\n  return ret;\n}\n\n/**\n * Checkpoints must be stackable over another.\n * This is required form some RxStorage implementations\n * like the sharding plugin, where a checkpoint only represents\n * the document state from some, but not all shards.\n */\nexport function stackCheckpoints(checkpoints) {\n  return Object.assign({}, ...checkpoints);\n}\nexport function throwIfIsStorageWriteError(collection, documentId, writeData, error) {\n  if (error) {\n    if (error.status === 409) {\n      throw newRxError('CONFLICT', {\n        collection: collection.name,\n        id: documentId,\n        writeError: error,\n        data: writeData\n      });\n    } else if (error.status === 422) {\n      throw newRxError('VD2', {\n        collection: collection.name,\n        id: documentId,\n        writeError: error,\n        data: writeData\n      });\n    } else {\n      throw error;\n    }\n  }\n}\n\n/**\n * Analyzes a list of BulkWriteRows and determines\n * which documents must be inserted, updated or deleted\n * and which events must be emitted and which documents cause a conflict\n * and must not be written.\n * Used as helper inside of some RxStorage implementations.\n * @hotPath The performance of this function is critical\n */\nexport function categorizeBulkWriteRows(storageInstance, primaryPath,\n/**\n * Current state of the documents\n * inside of the storage. Used to determine\n * which writes cause conflicts.\n * This must be a Map for better performance.\n */\ndocsInDb,\n/**\n * The write rows that are passed to\n * RxStorageInstance().bulkWrite().\n */\nbulkWriteRows, context,\n/**\n * Used by some storages for better performance.\n * For example when get-by-id and insert/update can run in parallel.\n */\nonInsert, onUpdate) {\n  var hasAttachments = !!storageInstance.schema.attachments;\n  var bulkInsertDocs = [];\n  var bulkUpdateDocs = [];\n  var errors = [];\n  var eventBulkId = randomToken(10);\n  var eventBulk = {\n    id: eventBulkId,\n    events: [],\n    checkpoint: null,\n    context\n  };\n  var eventBulkEvents = eventBulk.events;\n  var attachmentsAdd = [];\n  var attachmentsRemove = [];\n  var attachmentsUpdate = [];\n  var hasDocsInDb = docsInDb.size > 0;\n  var newestRow;\n\n  /**\n   * @performance is really important in this loop!\n   */\n  var rowAmount = bulkWriteRows.length;\n  var _loop = function () {\n    var writeRow = bulkWriteRows[rowId];\n\n    // use these variables to have less property accesses\n    var document = writeRow.document;\n    var previous = writeRow.previous;\n    var docId = document[primaryPath];\n    var documentDeleted = document._deleted;\n    var previousDeleted = previous && previous._deleted;\n    var documentInDb = undefined;\n    if (hasDocsInDb) {\n      documentInDb = docsInDb.get(docId);\n    }\n    var attachmentError;\n    if (!documentInDb) {\n      /**\n       * It is possible to insert already deleted documents,\n       * this can happen on replication.\n       */\n      var insertedIsDeleted = documentDeleted ? true : false;\n      if (hasAttachments) {\n        Object.entries(document._attachments).forEach(([attachmentId, attachmentData]) => {\n          if (!attachmentData.data) {\n            attachmentError = {\n              documentId: docId,\n              isError: true,\n              status: 510,\n              writeRow,\n              attachmentId\n            };\n            errors.push(attachmentError);\n          } else {\n            attachmentsAdd.push({\n              documentId: docId,\n              attachmentId,\n              attachmentData: attachmentData,\n              digest: attachmentData.digest\n            });\n          }\n        });\n      }\n      if (!attachmentError) {\n        if (hasAttachments) {\n          bulkInsertDocs.push(stripAttachmentsDataFromRow(writeRow));\n          if (onInsert) {\n            onInsert(document);\n          }\n        } else {\n          bulkInsertDocs.push(writeRow);\n          if (onInsert) {\n            onInsert(document);\n          }\n        }\n        newestRow = writeRow;\n      }\n      if (!insertedIsDeleted) {\n        var event = {\n          documentId: docId,\n          operation: 'INSERT',\n          documentData: hasAttachments ? stripAttachmentsDataFromDocument(document) : document,\n          previousDocumentData: hasAttachments && previous ? stripAttachmentsDataFromDocument(previous) : previous\n        };\n        eventBulkEvents.push(event);\n      }\n    } else {\n      // update existing document\n      var revInDb = documentInDb._rev;\n\n      /**\n       * Check for conflict\n       */\n      if (!previous || !!previous && revInDb !== previous._rev) {\n        // is conflict error\n        var err = {\n          isError: true,\n          status: 409,\n          documentId: docId,\n          writeRow: writeRow,\n          documentInDb\n        };\n        errors.push(err);\n        return 1; // continue\n      }\n\n      // handle attachments data\n\n      var updatedRow = hasAttachments ? stripAttachmentsDataFromRow(writeRow) : writeRow;\n      if (hasAttachments) {\n        if (documentDeleted) {\n          /**\n           * Deleted documents must have cleared all their attachments.\n           */\n          if (previous) {\n            Object.keys(previous._attachments).forEach(attachmentId => {\n              attachmentsRemove.push({\n                documentId: docId,\n                attachmentId,\n                digest: ensureNotFalsy(previous)._attachments[attachmentId].digest\n              });\n            });\n          }\n        } else {\n          // first check for errors\n          Object.entries(document._attachments).find(([attachmentId, attachmentData]) => {\n            var previousAttachmentData = previous ? previous._attachments[attachmentId] : undefined;\n            if (!previousAttachmentData && !attachmentData.data) {\n              attachmentError = {\n                documentId: docId,\n                documentInDb: documentInDb,\n                isError: true,\n                status: 510,\n                writeRow,\n                attachmentId\n              };\n            }\n            return true;\n          });\n          if (!attachmentError) {\n            Object.entries(document._attachments).forEach(([attachmentId, attachmentData]) => {\n              var previousAttachmentData = previous ? previous._attachments[attachmentId] : undefined;\n              if (!previousAttachmentData) {\n                attachmentsAdd.push({\n                  documentId: docId,\n                  attachmentId,\n                  attachmentData: attachmentData,\n                  digest: attachmentData.digest\n                });\n              } else {\n                var newDigest = updatedRow.document._attachments[attachmentId].digest;\n                if (attachmentData.data &&\n                /**\n                 * Performance shortcut,\n                 * do not update the attachment data if it did not change.\n                 */\n                previousAttachmentData.digest !== newDigest) {\n                  attachmentsUpdate.push({\n                    documentId: docId,\n                    attachmentId,\n                    attachmentData: attachmentData,\n                    digest: attachmentData.digest\n                  });\n                }\n              }\n            });\n          }\n        }\n      }\n      if (attachmentError) {\n        errors.push(attachmentError);\n      } else {\n        if (hasAttachments) {\n          bulkUpdateDocs.push(stripAttachmentsDataFromRow(updatedRow));\n          if (onUpdate) {\n            onUpdate(document);\n          }\n        } else {\n          bulkUpdateDocs.push(updatedRow);\n          if (onUpdate) {\n            onUpdate(document);\n          }\n        }\n        newestRow = updatedRow;\n      }\n      var eventDocumentData = null;\n      var previousEventDocumentData = null;\n      var operation = null;\n      if (previousDeleted && !documentDeleted) {\n        operation = 'INSERT';\n        eventDocumentData = hasAttachments ? stripAttachmentsDataFromDocument(document) : document;\n      } else if (previous && !previousDeleted && !documentDeleted) {\n        operation = 'UPDATE';\n        eventDocumentData = hasAttachments ? stripAttachmentsDataFromDocument(document) : document;\n        previousEventDocumentData = previous;\n      } else if (documentDeleted) {\n        operation = 'DELETE';\n        eventDocumentData = ensureNotFalsy(document);\n        previousEventDocumentData = previous;\n      } else {\n        throw newRxError('SNH', {\n          args: {\n            writeRow\n          }\n        });\n      }\n      var _event = {\n        documentId: docId,\n        documentData: eventDocumentData,\n        previousDocumentData: previousEventDocumentData,\n        operation: operation\n      };\n      eventBulkEvents.push(_event);\n    }\n  };\n  for (var rowId = 0; rowId < rowAmount; rowId++) {\n    if (_loop()) continue;\n  }\n  return {\n    bulkInsertDocs,\n    bulkUpdateDocs,\n    newestRow,\n    errors,\n    eventBulk,\n    attachmentsAdd,\n    attachmentsRemove,\n    attachmentsUpdate\n  };\n}\nexport function stripAttachmentsDataFromRow(writeRow) {\n  return {\n    previous: writeRow.previous,\n    document: stripAttachmentsDataFromDocument(writeRow.document)\n  };\n}\nexport function getAttachmentSize(attachmentBase64String) {\n  return atob(attachmentBase64String).length;\n}\n\n/**\n * Used in custom RxStorage implementations.\n */\nexport function attachmentWriteDataToNormalData(writeData) {\n  var data = writeData.data;\n  if (!data) {\n    return writeData;\n  }\n  var ret = {\n    length: getAttachmentSize(data),\n    digest: writeData.digest,\n    type: writeData.type\n  };\n  return ret;\n}\nexport function stripAttachmentsDataFromDocument(doc) {\n  if (!doc._attachments || Object.keys(doc._attachments).length === 0) {\n    return doc;\n  }\n  var useDoc = flatClone(doc);\n  useDoc._attachments = {};\n  Object.entries(doc._attachments).forEach(([attachmentId, attachmentData]) => {\n    useDoc._attachments[attachmentId] = attachmentWriteDataToNormalData(attachmentData);\n  });\n  return useDoc;\n}\n\n/**\n * Flat clone the document data\n * and also the _meta field.\n * Used many times when we want to change the meta\n * during replication etc.\n */\nexport function flatCloneDocWithMeta(doc) {\n  return Object.assign({}, doc, {\n    _meta: flatClone(doc._meta)\n  });\n}\n/**\n * Wraps the normal storageInstance of a RxCollection\n * to ensure that all access is properly using the hooks\n * and other data transformations and also ensure that database.lockedRun()\n * is used properly.\n */\nexport function getWrappedStorageInstance(database, storageInstance,\n/**\n * The original RxJsonSchema\n * before it was mutated by hooks.\n */\nrxJsonSchema) {\n  overwritable.deepFreezeWhenDevMode(rxJsonSchema);\n  var primaryPath = getPrimaryFieldOfPrimaryKey(storageInstance.schema.primaryKey);\n  var ret = {\n    originalStorageInstance: storageInstance,\n    schema: storageInstance.schema,\n    internals: storageInstance.internals,\n    collectionName: storageInstance.collectionName,\n    databaseName: storageInstance.databaseName,\n    options: storageInstance.options,\n    async bulkWrite(rows, context) {\n      var databaseToken = database.token;\n      var toStorageWriteRows = new Array(rows.length);\n      /**\n       * Use the same timestamp for all docs of this rows-set.\n       * This improves performance because calling Date.now() inside of the now() function\n       * is too costly.\n       */\n      var time = now();\n      for (var index = 0; index < rows.length; index++) {\n        var writeRow = rows[index];\n        var document = flatCloneDocWithMeta(writeRow.document);\n        document._meta.lwt = time;\n\n        /**\n         * Yes we really want to set the revision here.\n         * If you make a plugin that relies on having its own revision\n         * stored into the storage, use this.originalStorageInstance.bulkWrite() instead.\n         */\n        var previous = writeRow.previous;\n        document._rev = createRevision(databaseToken, previous);\n        toStorageWriteRows[index] = {\n          document,\n          previous\n        };\n      }\n      runPluginHooks('preStorageWrite', {\n        storageInstance: this.originalStorageInstance,\n        rows: toStorageWriteRows\n      });\n      var writeResult = await database.lockedRun(() => storageInstance.bulkWrite(toStorageWriteRows, context));\n\n      /**\n       * The RxStorageInstance MUST NOT allow to insert already _deleted documents,\n       * without sending the previous document version.\n       * But for better developer experience, RxDB does allow to re-insert deleted documents.\n       * We do this by automatically fixing the conflict errors for that case\n       * by running another bulkWrite() and merging the results.\n       * @link https://github.com/pubkey/rxdb/pull/3839\n      */\n      var useWriteResult = {\n        error: []\n      };\n      BULK_WRITE_ROWS_BY_RESPONSE.set(useWriteResult, toStorageWriteRows);\n      var reInsertErrors = writeResult.error.length === 0 ? [] : writeResult.error.filter(error => {\n        if (error.status === 409 && !error.writeRow.previous && !error.writeRow.document._deleted && ensureNotFalsy(error.documentInDb)._deleted) {\n          return true;\n        }\n\n        // add the \"normal\" errors to the parent error array.\n        useWriteResult.error.push(error);\n        return false;\n      });\n      if (reInsertErrors.length > 0) {\n        var reInsertIds = new Set();\n        var reInserts = reInsertErrors.map(error => {\n          reInsertIds.add(error.documentId);\n          return {\n            previous: error.documentInDb,\n            document: Object.assign({}, error.writeRow.document, {\n              _rev: createRevision(database.token, error.documentInDb)\n            })\n          };\n        });\n        var subResult = await database.lockedRun(() => storageInstance.bulkWrite(reInserts, context));\n        appendToArray(useWriteResult.error, subResult.error);\n        var successArray = getWrittenDocumentsFromBulkWriteResponse(primaryPath, toStorageWriteRows, useWriteResult, reInsertIds);\n        var subSuccess = getWrittenDocumentsFromBulkWriteResponse(primaryPath, reInserts, subResult);\n        appendToArray(successArray, subSuccess);\n        return useWriteResult;\n      }\n      return useWriteResult;\n    },\n    query(preparedQuery) {\n      return database.lockedRun(() => storageInstance.query(preparedQuery));\n    },\n    count(preparedQuery) {\n      return database.lockedRun(() => storageInstance.count(preparedQuery));\n    },\n    findDocumentsById(ids, deleted) {\n      return database.lockedRun(() => storageInstance.findDocumentsById(ids, deleted));\n    },\n    getAttachmentData(documentId, attachmentId, digest) {\n      return database.lockedRun(() => storageInstance.getAttachmentData(documentId, attachmentId, digest));\n    },\n    getChangedDocumentsSince: !storageInstance.getChangedDocumentsSince ? undefined : (limit, checkpoint) => {\n      return database.lockedRun(() => storageInstance.getChangedDocumentsSince(ensureNotFalsy(limit), checkpoint));\n    },\n    cleanup(minDeletedTime) {\n      return database.lockedRun(() => storageInstance.cleanup(minDeletedTime));\n    },\n    remove() {\n      database.storageInstances.delete(ret);\n      return database.lockedRun(() => storageInstance.remove());\n    },\n    close() {\n      database.storageInstances.delete(ret);\n      return database.lockedRun(() => storageInstance.close());\n    },\n    changeStream() {\n      return storageInstance.changeStream();\n    }\n  };\n  database.storageInstances.add(ret);\n  return ret;\n}\n\n/**\n * Each RxStorage implementation should\n * run this method at the first step of createStorageInstance()\n * to ensure that the configuration is correct.\n */\nexport function ensureRxStorageInstanceParamsAreCorrect(params) {\n  if (params.schema.keyCompression) {\n    throw newRxError('UT5', {\n      args: {\n        params\n      }\n    });\n  }\n  if (hasEncryption(params.schema)) {\n    throw newRxError('UT6', {\n      args: {\n        params\n      }\n    });\n  }\n  if (params.schema.attachments && params.schema.attachments.compression) {\n    throw newRxError('UT7', {\n      args: {\n        params\n      }\n    });\n  }\n}\nexport function hasEncryption(jsonSchema) {\n  if (!!jsonSchema.encrypted && jsonSchema.encrypted.length > 0 || jsonSchema.attachments && jsonSchema.attachments.encrypted) {\n    return true;\n  } else {\n    return false;\n  }\n}\nexport function getChangedDocumentsSinceQuery(storageInstance, limit, checkpoint) {\n  var primaryPath = getPrimaryFieldOfPrimaryKey(storageInstance.schema.primaryKey);\n  var sinceLwt = checkpoint ? checkpoint.lwt : RX_META_LWT_MINIMUM;\n  var sinceId = checkpoint ? checkpoint.id : '';\n  return normalizeMangoQuery(storageInstance.schema, {\n    selector: {\n      $or: [{\n        '_meta.lwt': {\n          $gt: sinceLwt\n        }\n      }, {\n        '_meta.lwt': {\n          $eq: sinceLwt\n        },\n        [primaryPath]: {\n          $gt: checkpoint ? sinceId : ''\n        }\n      }],\n      // add this hint for better index usage\n      '_meta.lwt': {\n        $gte: sinceLwt\n      }\n    },\n    sort: [{\n      '_meta.lwt': 'asc'\n    }, {\n      [primaryPath]: 'asc'\n    }],\n    skip: 0,\n    limit\n    /**\n     * DO NOT SET A SPECIFIC INDEX HERE!\n     * The query might be modified by some plugin\n     * before sending it to the storage.\n     * We can be sure that in the end the query planner\n     * will find the best index.\n     */\n    // index: ['_meta.lwt', primaryPath]\n  });\n}\nexport async function getChangedDocumentsSince(storageInstance, limit, checkpoint) {\n  if (storageInstance.getChangedDocumentsSince) {\n    return storageInstance.getChangedDocumentsSince(limit, checkpoint);\n  }\n  var primaryPath = getPrimaryFieldOfPrimaryKey(storageInstance.schema.primaryKey);\n  var query = prepareQuery(storageInstance.schema, getChangedDocumentsSinceQuery(storageInstance, limit, checkpoint));\n  var result = await storageInstance.query(query);\n  var documents = result.documents;\n  var lastDoc = lastOfArray(documents);\n  return {\n    documents: documents,\n    checkpoint: lastDoc ? {\n      id: lastDoc[primaryPath],\n      lwt: lastDoc._meta.lwt\n    } : checkpoint ? checkpoint : {\n      id: '',\n      lwt: 0\n    }\n  };\n}\nvar BULK_WRITE_ROWS_BY_RESPONSE = new WeakMap();\nvar BULK_WRITE_SUCCESS_MAP = new WeakMap();\n\n/**\n * For better performance, this is done only when accessed\n * because most of the time we do not need the results, only the errors.\n */\nexport function getWrittenDocumentsFromBulkWriteResponse(primaryPath, writeRows, response, reInsertIds) {\n  return getFromMapOrCreate(BULK_WRITE_SUCCESS_MAP, response, () => {\n    var ret = [];\n    var realWriteRows = BULK_WRITE_ROWS_BY_RESPONSE.get(response);\n    if (!realWriteRows) {\n      realWriteRows = writeRows;\n    }\n    if (response.error.length > 0 || reInsertIds) {\n      var errorIds = reInsertIds ? reInsertIds : new Set();\n      for (var index = 0; index < response.error.length; index++) {\n        var error = response.error[index];\n        errorIds.add(error.documentId);\n      }\n      for (var _index = 0; _index < realWriteRows.length; _index++) {\n        var doc = realWriteRows[_index].document;\n        if (!errorIds.has(doc[primaryPath])) {\n          ret.push(stripAttachmentsDataFromDocument(doc));\n        }\n      }\n    } else {\n      // pre-set array size for better performance\n      ret.length = writeRows.length - response.error.length;\n      for (var _index2 = 0; _index2 < realWriteRows.length; _index2++) {\n        var _doc = realWriteRows[_index2].document;\n        ret[_index2] = stripAttachmentsDataFromDocument(_doc);\n      }\n    }\n    return ret;\n  });\n}\n\n/**\n * Wraps the storage and simluates\n * delays. Mostly used in tests.\n */\nexport function randomDelayStorage(input) {\n  /**\n   * Ensure writes to a delay storage\n   * are still correctly run in order.\n   */\n  var randomDelayStorageWriteQueue = PROMISE_RESOLVE_TRUE;\n  var retStorage = {\n    name: 'random-delay-' + input.storage.name,\n    rxdbVersion: RXDB_VERSION,\n    async createStorageInstance(params) {\n      await promiseWait(input.delayTimeBefore());\n      var storageInstance = await input.storage.createStorageInstance(params);\n      await promiseWait(input.delayTimeAfter());\n      return {\n        databaseName: storageInstance.databaseName,\n        internals: storageInstance.internals,\n        options: storageInstance.options,\n        schema: storageInstance.schema,\n        collectionName: storageInstance.collectionName,\n        bulkWrite(a, b) {\n          randomDelayStorageWriteQueue = randomDelayStorageWriteQueue.then(async () => {\n            await promiseWait(input.delayTimeBefore());\n            var response = await storageInstance.bulkWrite(a, b);\n            await promiseWait(input.delayTimeAfter());\n            return response;\n          });\n          var ret = randomDelayStorageWriteQueue;\n          return ret;\n        },\n        async findDocumentsById(a, b) {\n          await promiseWait(input.delayTimeBefore());\n          var ret = await storageInstance.findDocumentsById(a, b);\n          await promiseWait(input.delayTimeAfter());\n          return ret;\n        },\n        async query(a) {\n          await promiseWait(input.delayTimeBefore());\n          var ret = await storageInstance.query(a);\n          return ret;\n        },\n        async count(a) {\n          await promiseWait(input.delayTimeBefore());\n          var ret = await storageInstance.count(a);\n          await promiseWait(input.delayTimeAfter());\n          return ret;\n        },\n        async getAttachmentData(a, b, c) {\n          await promiseWait(input.delayTimeBefore());\n          var ret = await storageInstance.getAttachmentData(a, b, c);\n          await promiseWait(input.delayTimeAfter());\n          return ret;\n        },\n        getChangedDocumentsSince: !storageInstance.getChangedDocumentsSince ? undefined : async (a, b) => {\n          await promiseWait(input.delayTimeBefore());\n          var ret = await ensureNotFalsy(storageInstance.getChangedDocumentsSince)(a, b);\n          await promiseWait(input.delayTimeAfter());\n          return ret;\n        },\n        changeStream() {\n          return storageInstance.changeStream();\n        },\n        async cleanup(a) {\n          await promiseWait(input.delayTimeBefore());\n          var ret = await storageInstance.cleanup(a);\n          await promiseWait(input.delayTimeAfter());\n          return ret;\n        },\n        async close() {\n          await promiseWait(input.delayTimeBefore());\n          var ret = await storageInstance.close();\n          await promiseWait(input.delayTimeAfter());\n          return ret;\n        },\n        async remove() {\n          await promiseWait(input.delayTimeBefore());\n          var ret = await storageInstance.remove();\n          await promiseWait(input.delayTimeAfter());\n          return ret;\n        }\n      };\n    }\n  };\n  return retStorage;\n}\n", "/**\n * returns true if the given object is a promise\n */\nexport function isPromise(obj) {\n  return obj && typeof obj.then === 'function';\n}\nexport var PROMISE_RESOLVED_FALSE = Promise.resolve(false);\nexport var PROMISE_RESOLVED_TRUE = Promise.resolve(true);\nexport var PROMISE_RESOLVED_VOID = Promise.resolve();\nexport function sleep(time, resolveWith) {\n  if (!time) time = 0;\n  return new Promise(function (res) {\n    return setTimeout(function () {\n      return res(resolveWith);\n    }, time);\n  });\n}\nexport function randomInt(min, max) {\n  return Math.floor(Math.random() * (max - min + 1) + min);\n}\n\n/**\n * https://stackoverflow.com/a/8084248\n */\nexport function randomToken() {\n  return Math.random().toString(36).substring(2);\n}\nvar lastMs = 0;\n\n/**\n * Returns the current unix time in micro-seconds,\n * WARNING: This is a pseudo-function\n * Performance.now is not reliable in webworkers, so we just make sure to never return the same time.\n * This is enough in browsers, and this function will not be used in nodejs.\n * The main reason for this hack is to ensure that BroadcastChannel behaves equal to production when it is used in fast-running unit tests.\n */\nexport function microSeconds() {\n  var ret = Date.now() * 1000; // milliseconds to microseconds\n  if (ret <= lastMs) {\n    ret = lastMs + 1;\n  }\n  lastMs = ret;\n  return ret;\n}\n\n/**\n * Check if WebLock API is supported.\n * @link https://developer.mozilla.org/en-US/docs/Web/API/Web_Locks_API\n */\nexport function supportsWebLockAPI() {\n  if (typeof navigator !== 'undefined' && typeof navigator.locks !== 'undefined' && typeof navigator.locks.request === 'function') {\n    return true;\n  } else {\n    return false;\n  }\n}", "import { microSeconds as micro, PROMISE_RESOLVED_VOID } from '../util.js';\nexport var microSeconds = micro;\nexport var type = 'native';\nexport function create(channelName) {\n  var state = {\n    time: micro(),\n    messagesCallback: null,\n    bc: new BroadcastChannel(channelName),\n    subFns: [] // subscriberFunctions\n  };\n  state.bc.onmessage = function (msgEvent) {\n    if (state.messagesCallback) {\n      state.messagesCallback(msgEvent.data);\n    }\n  };\n  return state;\n}\nexport function close(channelState) {\n  channelState.bc.close();\n  channelState.subFns = [];\n}\nexport function postMessage(channelState, messageJson) {\n  try {\n    channelState.bc.postMessage(messageJson, false);\n    return PROMISE_RESOLVED_VOID;\n  } catch (err) {\n    return Promise.reject(err);\n  }\n}\nexport function onMessage(channelState, fn) {\n  channelState.messagesCallback = fn;\n}\nexport function canBeUsed() {\n  // Deno runtime\n  // eslint-disable-next-line\n  if (typeof globalThis !== 'undefined' && globalThis.Deno && globalThis.Deno.args) {\n    return true;\n  }\n\n  // Browser runtime\n  if ((typeof window !== 'undefined' || typeof self !== 'undefined') && typeof BroadcastChannel === 'function') {\n    if (BroadcastChannel._pubkey) {\n      throw new Error('BroadcastChannel: Do not overwrite window.BroadcastChannel with this module, this is not a polyfill');\n    }\n    return true;\n  } else {\n    return false;\n  }\n}\nexport function averageResponseTime() {\n  return 150;\n}\nexport var NativeMethod = {\n  create: create,\n  close: close,\n  onMessage: onMessage,\n  postMessage: postMessage,\n  canBeUsed: canBeUsed,\n  type: type,\n  averageResponseTime: averageResponseTime,\n  microSeconds: microSeconds\n};", "/**\n * this is a set which automatically forgets\n * a given entry when a new entry is set and the ttl\n * of the old one is over\n */\nexport class ObliviousSet {\n  ttl;\n  map = new Map();\n  /**\n   * Creating calls to setTimeout() is expensive,\n   * so we only do that if there is not timeout already open.\n   */\n  _to = false;\n  constructor(ttl) {\n    this.ttl = ttl;\n  }\n  has(value) {\n    return this.map.has(value);\n  }\n  add(value) {\n    this.map.set(value, now());\n    /**\n     * When a new value is added,\n     * start the cleanup at the next tick\n     * to not block the cpu for more important stuff\n     * that might happen.\n     */\n    if (!this._to) {\n      this._to = true;\n      setTimeout(() => {\n        this._to = false;\n        removeTooOldValues(this);\n      }, 0);\n    }\n  }\n  clear() {\n    this.map.clear();\n  }\n}\n/**\n * Removes all entries from the set\n * where the TTL has expired\n */\nexport function removeTooOldValues(obliviousSet) {\n  const olderThen = now() - obliviousSet.ttl;\n  const iterator = obliviousSet.map[Symbol.iterator]();\n  /**\n   * Because we can assume the new values are added at the bottom,\n   * we start from the top and stop as soon as we reach a non-too-old value.\n   */\n  while (true) {\n    const next = iterator.next().value;\n    if (!next) {\n      return; // no more elements\n    }\n    const value = next[0];\n    const time = next[1];\n    if (time < olderThen) {\n      obliviousSet.map.delete(value);\n    } else {\n      // We reached a value that is not old enough\n      return;\n    }\n  }\n}\nexport function now() {\n  return Date.now();\n}\n", "export function fillOptionsWithDefaults() {\n  var originalOptions = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};\n  var options = JSON.parse(JSON.stringify(originalOptions));\n\n  // main\n  if (typeof options.webWorkerSupport === 'undefined') options.webWorkerSupport = true;\n\n  // indexed-db\n  if (!options.idb) options.idb = {};\n  //  after this time the messages get deleted\n  if (!options.idb.ttl) options.idb.ttl = 1000 * 45;\n  if (!options.idb.fallbackInterval) options.idb.fallbackInterval = 150;\n  //  handles abrupt db onclose events.\n  if (originalOptions.idb && typeof originalOptions.idb.onclose === 'function') options.idb.onclose = originalOptions.idb.onclose;\n\n  // localstorage\n  if (!options.localstorage) options.localstorage = {};\n  if (!options.localstorage.removeTimeout) options.localstorage.removeTimeout = 1000 * 60;\n\n  // custom methods\n  if (originalOptions.methods) options.methods = originalOptions.methods;\n\n  // node\n  if (!options.node) options.node = {};\n  if (!options.node.ttl) options.node.ttl = 1000 * 60 * 2; // 2 minutes;\n  /**\n   * On linux use 'ulimit -Hn' to get the limit of open files.\n   * On ubuntu this was 4096 for me, so we use half of that as maxParallelWrites default.\n   */\n  if (!options.node.maxParallelWrites) options.node.maxParallelWrites = 2048;\n  if (typeof options.node.useFastPath === 'undefined') options.node.useFastPath = true;\n  return options;\n}", "/**\n * this method uses indexeddb to store the messages\n * There is currently no observerAPI for idb\n * @link https://github.com/w3c/IndexedDB/issues/51\n * \n * When working on this, ensure to use these performance optimizations:\n * @link https://rxdb.info/slow-indexeddb.html\n */\n\nimport { sleep, randomInt, randomToken, microSeconds as micro, PROMISE_RESOLVED_VOID } from '../util.js';\nexport var microSeconds = micro;\nimport { ObliviousSet } from 'oblivious-set';\nimport { fillOptionsWithDefaults } from '../options.js';\nvar DB_PREFIX = 'pubkey.broadcast-channel-0-';\nvar OBJECT_STORE_ID = 'messages';\n\n/**\n * Use relaxed durability for faster performance on all transactions.\n * @link https://nolanlawson.com/2021/08/22/speeding-up-indexeddb-reads-and-writes/\n */\nexport var TRANSACTION_SETTINGS = {\n  durability: 'relaxed'\n};\nexport var type = 'idb';\nexport function getIdb() {\n  if (typeof indexedDB !== 'undefined') return indexedDB;\n  if (typeof window !== 'undefined') {\n    if (typeof window.mozIndexedDB !== 'undefined') return window.mozIndexedDB;\n    if (typeof window.webkitIndexedDB !== 'undefined') return window.webkitIndexedDB;\n    if (typeof window.msIndexedDB !== 'undefined') return window.msIndexedDB;\n  }\n  return false;\n}\n\n/**\n * If possible, we should explicitly commit IndexedDB transactions\n * for better performance.\n * @link https://nolanlawson.com/2021/08/22/speeding-up-indexeddb-reads-and-writes/\n */\nexport function commitIndexedDBTransaction(tx) {\n  if (tx.commit) {\n    tx.commit();\n  }\n}\nexport function createDatabase(channelName) {\n  var IndexedDB = getIdb();\n\n  // create table\n  var dbName = DB_PREFIX + channelName;\n\n  /**\n   * All IndexedDB databases are opened without version\n   * because it is a bit faster, especially on firefox\n   * @link http://nparashuram.com/IndexedDB/perf/#Open%20Database%20with%20version\n   */\n  var openRequest = IndexedDB.open(dbName);\n  openRequest.onupgradeneeded = function (ev) {\n    var db = ev.target.result;\n    db.createObjectStore(OBJECT_STORE_ID, {\n      keyPath: 'id',\n      autoIncrement: true\n    });\n  };\n  return new Promise(function (res, rej) {\n    openRequest.onerror = function (ev) {\n      return rej(ev);\n    };\n    openRequest.onsuccess = function () {\n      res(openRequest.result);\n    };\n  });\n}\n\n/**\n * writes the new message to the database\n * so other readers can find it\n */\nexport function writeMessage(db, readerUuid, messageJson) {\n  var time = Date.now();\n  var writeObject = {\n    uuid: readerUuid,\n    time: time,\n    data: messageJson\n  };\n  var tx = db.transaction([OBJECT_STORE_ID], 'readwrite', TRANSACTION_SETTINGS);\n  return new Promise(function (res, rej) {\n    tx.oncomplete = function () {\n      return res();\n    };\n    tx.onerror = function (ev) {\n      return rej(ev);\n    };\n    var objectStore = tx.objectStore(OBJECT_STORE_ID);\n    objectStore.add(writeObject);\n    commitIndexedDBTransaction(tx);\n  });\n}\nexport function getAllMessages(db) {\n  var tx = db.transaction(OBJECT_STORE_ID, 'readonly', TRANSACTION_SETTINGS);\n  var objectStore = tx.objectStore(OBJECT_STORE_ID);\n  var ret = [];\n  return new Promise(function (res) {\n    objectStore.openCursor().onsuccess = function (ev) {\n      var cursor = ev.target.result;\n      if (cursor) {\n        ret.push(cursor.value);\n        //alert(\"Name for SSN \" + cursor.key + \" is \" + cursor.value.name);\n        cursor[\"continue\"]();\n      } else {\n        commitIndexedDBTransaction(tx);\n        res(ret);\n      }\n    };\n  });\n}\nexport function getMessagesHigherThan(db, lastCursorId) {\n  var tx = db.transaction(OBJECT_STORE_ID, 'readonly', TRANSACTION_SETTINGS);\n  var objectStore = tx.objectStore(OBJECT_STORE_ID);\n  var ret = [];\n  var keyRangeValue = IDBKeyRange.bound(lastCursorId + 1, Infinity);\n\n  /**\n   * Optimization shortcut,\n   * if getAll() can be used, do not use a cursor.\n   * @link https://rxdb.info/slow-indexeddb.html\n   */\n  if (objectStore.getAll) {\n    var getAllRequest = objectStore.getAll(keyRangeValue);\n    return new Promise(function (res, rej) {\n      getAllRequest.onerror = function (err) {\n        return rej(err);\n      };\n      getAllRequest.onsuccess = function (e) {\n        res(e.target.result);\n      };\n    });\n  }\n  function openCursor() {\n    // Occasionally Safari will fail on IDBKeyRange.bound, this\n    // catches that error, having it open the cursor to the first\n    // item. When it gets data it will advance to the desired key.\n    try {\n      keyRangeValue = IDBKeyRange.bound(lastCursorId + 1, Infinity);\n      return objectStore.openCursor(keyRangeValue);\n    } catch (e) {\n      return objectStore.openCursor();\n    }\n  }\n  return new Promise(function (res, rej) {\n    var openCursorRequest = openCursor();\n    openCursorRequest.onerror = function (err) {\n      return rej(err);\n    };\n    openCursorRequest.onsuccess = function (ev) {\n      var cursor = ev.target.result;\n      if (cursor) {\n        if (cursor.value.id < lastCursorId + 1) {\n          cursor[\"continue\"](lastCursorId + 1);\n        } else {\n          ret.push(cursor.value);\n          cursor[\"continue\"]();\n        }\n      } else {\n        commitIndexedDBTransaction(tx);\n        res(ret);\n      }\n    };\n  });\n}\nexport function removeMessagesById(channelState, ids) {\n  if (channelState.closed) {\n    return Promise.resolve([]);\n  }\n  var tx = channelState.db.transaction(OBJECT_STORE_ID, 'readwrite', TRANSACTION_SETTINGS);\n  var objectStore = tx.objectStore(OBJECT_STORE_ID);\n  return Promise.all(ids.map(function (id) {\n    var deleteRequest = objectStore[\"delete\"](id);\n    return new Promise(function (res) {\n      deleteRequest.onsuccess = function () {\n        return res();\n      };\n    });\n  }));\n}\nexport function getOldMessages(db, ttl) {\n  var olderThen = Date.now() - ttl;\n  var tx = db.transaction(OBJECT_STORE_ID, 'readonly', TRANSACTION_SETTINGS);\n  var objectStore = tx.objectStore(OBJECT_STORE_ID);\n  var ret = [];\n  return new Promise(function (res) {\n    objectStore.openCursor().onsuccess = function (ev) {\n      var cursor = ev.target.result;\n      if (cursor) {\n        var msgObk = cursor.value;\n        if (msgObk.time < olderThen) {\n          ret.push(msgObk);\n          //alert(\"Name for SSN \" + cursor.key + \" is \" + cursor.value.name);\n          cursor[\"continue\"]();\n        } else {\n          // no more old messages,\n          commitIndexedDBTransaction(tx);\n          res(ret);\n        }\n      } else {\n        res(ret);\n      }\n    };\n  });\n}\nexport function cleanOldMessages(channelState) {\n  return getOldMessages(channelState.db, channelState.options.idb.ttl).then(function (tooOld) {\n    return removeMessagesById(channelState, tooOld.map(function (msg) {\n      return msg.id;\n    }));\n  });\n}\nexport function create(channelName, options) {\n  options = fillOptionsWithDefaults(options);\n  return createDatabase(channelName).then(function (db) {\n    var state = {\n      closed: false,\n      lastCursorId: 0,\n      channelName: channelName,\n      options: options,\n      uuid: randomToken(),\n      /**\n       * emittedMessagesIds\n       * contains all messages that have been emitted before\n       * @type {ObliviousSet}\n       */\n      eMIs: new ObliviousSet(options.idb.ttl * 2),\n      // ensures we do not read messages in parallel\n      writeBlockPromise: PROMISE_RESOLVED_VOID,\n      messagesCallback: null,\n      readQueuePromises: [],\n      db: db\n    };\n\n    /**\n     * Handle abrupt closes that do not originate from db.close().\n     * This could happen, for example, if the underlying storage is\n     * removed or if the user clears the database in the browser's\n     * history preferences.\n     */\n    db.onclose = function () {\n      state.closed = true;\n      if (options.idb.onclose) options.idb.onclose();\n    };\n\n    /**\n     * if service-workers are used,\n     * we have no 'storage'-event if they post a message,\n     * therefore we also have to set an interval\n     */\n    _readLoop(state);\n    return state;\n  });\n}\nfunction _readLoop(state) {\n  if (state.closed) return;\n  readNewMessages(state).then(function () {\n    return sleep(state.options.idb.fallbackInterval);\n  }).then(function () {\n    return _readLoop(state);\n  });\n}\nfunction _filterMessage(msgObj, state) {\n  if (msgObj.uuid === state.uuid) return false; // send by own\n  if (state.eMIs.has(msgObj.id)) return false; // already emitted\n  if (msgObj.data.time < state.messagesCallbackTime) return false; // older then onMessageCallback\n  return true;\n}\n\n/**\n * reads all new messages from the database and emits them\n */\nfunction readNewMessages(state) {\n  // channel already closed\n  if (state.closed) return PROMISE_RESOLVED_VOID;\n\n  // if no one is listening, we do not need to scan for new messages\n  if (!state.messagesCallback) return PROMISE_RESOLVED_VOID;\n  return getMessagesHigherThan(state.db, state.lastCursorId).then(function (newerMessages) {\n    var useMessages = newerMessages\n    /**\n     * there is a bug in iOS where the msgObj can be undefined sometimes\n     * so we filter them out\n     * @link https://github.com/pubkey/broadcast-channel/issues/19\n     */.filter(function (msgObj) {\n      return !!msgObj;\n    }).map(function (msgObj) {\n      if (msgObj.id > state.lastCursorId) {\n        state.lastCursorId = msgObj.id;\n      }\n      return msgObj;\n    }).filter(function (msgObj) {\n      return _filterMessage(msgObj, state);\n    }).sort(function (msgObjA, msgObjB) {\n      return msgObjA.time - msgObjB.time;\n    }); // sort by time\n    useMessages.forEach(function (msgObj) {\n      if (state.messagesCallback) {\n        state.eMIs.add(msgObj.id);\n        state.messagesCallback(msgObj.data);\n      }\n    });\n    return PROMISE_RESOLVED_VOID;\n  });\n}\nexport function close(channelState) {\n  channelState.closed = true;\n  channelState.db.close();\n}\nexport function postMessage(channelState, messageJson) {\n  channelState.writeBlockPromise = channelState.writeBlockPromise.then(function () {\n    return writeMessage(channelState.db, channelState.uuid, messageJson);\n  }).then(function () {\n    if (randomInt(0, 10) === 0) {\n      /* await (do not await) */\n      cleanOldMessages(channelState);\n    }\n  });\n  return channelState.writeBlockPromise;\n}\nexport function onMessage(channelState, fn, time) {\n  channelState.messagesCallbackTime = time;\n  channelState.messagesCallback = fn;\n  readNewMessages(channelState);\n}\nexport function canBeUsed() {\n  return !!getIdb();\n}\nexport function averageResponseTime(options) {\n  return options.idb.fallbackInterval * 2;\n}\nexport var IndexedDBMethod = {\n  create: create,\n  close: close,\n  onMessage: onMessage,\n  postMessage: postMessage,\n  canBeUsed: canBeUsed,\n  type: type,\n  averageResponseTime: averageResponseTime,\n  microSeconds: microSeconds\n};", "/**\n * A localStorage-only method which uses localstorage and its 'storage'-event\n * This does not work inside webworkers because they have no access to localstorage\n * This is basically implemented to support IE9 or your grandmother's toaster.\n * @link https://caniuse.com/#feat=namevalue-storage\n * @link https://caniuse.com/#feat=indexeddb\n */\n\nimport { ObliviousSet } from 'oblivious-set';\nimport { fillOptionsWithDefaults } from '../options.js';\nimport { sleep, randomToken, microSeconds as micro } from '../util.js';\nexport var microSeconds = micro;\nvar KEY_PREFIX = 'pubkey.broadcastChannel-';\nexport var type = 'localstorage';\n\n/**\n * copied from crosstab\n * @link https://github.com/tejacques/crosstab/blob/master/src/crosstab.js#L32\n */\nexport function getLocalStorage() {\n  var localStorage;\n  if (typeof window === 'undefined') return null;\n  try {\n    localStorage = window.localStorage;\n    localStorage = window['ie8-eventlistener/storage'] || window.localStorage;\n  } catch (e) {\n    // New versions of Firefox throw a Security exception\n    // if cookies are disabled. See\n    // https://bugzilla.mozilla.org/show_bug.cgi?id=1028153\n  }\n  return localStorage;\n}\nexport function storageKey(channelName) {\n  return KEY_PREFIX + channelName;\n}\n\n/**\n* writes the new message to the storage\n* and fires the storage-event so other readers can find it\n*/\nexport function postMessage(channelState, messageJson) {\n  return new Promise(function (res) {\n    sleep().then(function () {\n      var key = storageKey(channelState.channelName);\n      var writeObj = {\n        token: randomToken(),\n        time: Date.now(),\n        data: messageJson,\n        uuid: channelState.uuid\n      };\n      var value = JSON.stringify(writeObj);\n      getLocalStorage().setItem(key, value);\n\n      /**\n       * StorageEvent does not fire the 'storage' event\n       * in the window that changes the state of the local storage.\n       * So we fire it manually\n       */\n      var ev = document.createEvent('Event');\n      ev.initEvent('storage', true, true);\n      ev.key = key;\n      ev.newValue = value;\n      window.dispatchEvent(ev);\n      res();\n    });\n  });\n}\nexport function addStorageEventListener(channelName, fn) {\n  var key = storageKey(channelName);\n  var listener = function listener(ev) {\n    if (ev.key === key) {\n      fn(JSON.parse(ev.newValue));\n    }\n  };\n  window.addEventListener('storage', listener);\n  return listener;\n}\nexport function removeStorageEventListener(listener) {\n  window.removeEventListener('storage', listener);\n}\nexport function create(channelName, options) {\n  options = fillOptionsWithDefaults(options);\n  if (!canBeUsed()) {\n    throw new Error('BroadcastChannel: localstorage cannot be used');\n  }\n  var uuid = randomToken();\n\n  /**\n   * eMIs\n   * contains all messages that have been emitted before\n   * @type {ObliviousSet}\n   */\n  var eMIs = new ObliviousSet(options.localstorage.removeTimeout);\n  var state = {\n    channelName: channelName,\n    uuid: uuid,\n    eMIs: eMIs // emittedMessagesIds\n  };\n  state.listener = addStorageEventListener(channelName, function (msgObj) {\n    if (!state.messagesCallback) return; // no listener\n    if (msgObj.uuid === uuid) return; // own message\n    if (!msgObj.token || eMIs.has(msgObj.token)) return; // already emitted\n    if (msgObj.data.time && msgObj.data.time < state.messagesCallbackTime) return; // too old\n\n    eMIs.add(msgObj.token);\n    state.messagesCallback(msgObj.data);\n  });\n  return state;\n}\nexport function close(channelState) {\n  removeStorageEventListener(channelState.listener);\n}\nexport function onMessage(channelState, fn, time) {\n  channelState.messagesCallbackTime = time;\n  channelState.messagesCallback = fn;\n}\nexport function canBeUsed() {\n  var ls = getLocalStorage();\n  if (!ls) return false;\n  try {\n    var key = '__broadcastchannel_check';\n    ls.setItem(key, 'works');\n    ls.removeItem(key);\n  } catch (e) {\n    // Safari 10 in private mode will not allow write access to local\n    // storage and fail with a QuotaExceededError. See\n    // https://developer.mozilla.org/en-US/docs/Web/API/Web_Storage_API#Private_Browsing_Incognito_modes\n    return false;\n  }\n  return true;\n}\nexport function averageResponseTime() {\n  var defaultTime = 120;\n  var userAgent = navigator.userAgent.toLowerCase();\n  if (userAgent.includes('safari') && !userAgent.includes('chrome')) {\n    // safari is much slower so this time is higher\n    return defaultTime * 2;\n  }\n  return defaultTime;\n}\nexport var LocalstorageMethod = {\n  create: create,\n  close: close,\n  onMessage: onMessage,\n  postMessage: postMessage,\n  canBeUsed: canBeUsed,\n  type: type,\n  averageResponseTime: averageResponseTime,\n  microSeconds: microSeconds\n};", "import { microSeconds as micro } from '../util.js';\nexport var microSeconds = micro;\nexport var type = 'simulate';\nvar SIMULATE_CHANNELS = new Set();\nexport function create(channelName) {\n  var state = {\n    time: microSeconds(),\n    name: channelName,\n    messagesCallback: null\n  };\n  SIMULATE_CHANNELS.add(state);\n  return state;\n}\nexport function close(channelState) {\n  SIMULATE_CHANNELS[\"delete\"](channelState);\n}\nexport var SIMULATE_DELAY_TIME = 5;\nexport function postMessage(channelState, messageJson) {\n  return new Promise(function (res) {\n    return setTimeout(function () {\n      var channelArray = Array.from(SIMULATE_CHANNELS);\n      channelArray.forEach(function (channel) {\n        if (channel.name === channelState.name &&\n        // has same name\n        channel !== channelState &&\n        // not own channel\n        !!channel.messagesCallback &&\n        // has subscribers\n        channel.time < messageJson.time // channel not created after postMessage() call\n        ) {\n          channel.messagesCallback(messageJson);\n        }\n      });\n      res();\n    }, SIMULATE_DELAY_TIME);\n  });\n}\nexport function onMessage(channelState, fn) {\n  channelState.messagesCallback = fn;\n}\nexport function canBeUsed() {\n  return true;\n}\nexport function averageResponseTime() {\n  return SIMULATE_DELAY_TIME;\n}\nexport var SimulateMethod = {\n  create: create,\n  close: close,\n  onMessage: onMessage,\n  postMessage: postMessage,\n  canBeUsed: canBeUsed,\n  type: type,\n  averageResponseTime: averageResponseTime,\n  microSeconds: microSeconds\n};", "import { NativeMethod } from './methods/native.js';\nimport { IndexedDBMethod } from './methods/indexed-db.js';\nimport { LocalstorageMethod } from './methods/localstorage.js';\nimport { SimulateMethod } from './methods/simulate.js';\n// the line below will be removed from es5/browser builds\n\n// order is important\nvar METHODS = [NativeMethod,\n// fastest\nIndexedDBMethod, LocalstorageMethod];\nexport function chooseMethod(options) {\n  var chooseMethods = [].concat(options.methods, METHODS).filter(Boolean);\n\n  // the line below will be removed from es5/browser builds\n\n  // directly chosen\n  if (options.type) {\n    if (options.type === 'simulate') {\n      // only use simulate-method if directly chosen\n      return SimulateMethod;\n    }\n    var ret = chooseMethods.find(function (m) {\n      return m.type === options.type;\n    });\n    if (!ret) throw new Error('method-type ' + options.type + ' not found');else return ret;\n  }\n\n  /**\n   * if no webworker support is needed,\n   * remove idb from the list so that localstorage will be chosen\n   */\n  if (!options.webWorkerSupport) {\n    chooseMethods = chooseMethods.filter(function (m) {\n      return m.type !== 'idb';\n    });\n  }\n  var useMethod = chooseMethods.find(function (method) {\n    return method.canBeUsed();\n  });\n  if (!useMethod) {\n    throw new Error(\"No usable method found in \" + JSON.stringify(METHODS.map(function (m) {\n      return m.type;\n    })));\n  } else {\n    return useMethod;\n  }\n}", "import { isPromise, PROMISE_RESOLVED_FALSE, PROMISE_RESOLVED_VOID } from './util.js';\nimport { chooseMethod } from './method-chooser.js';\nimport { fillOptionsWithDefaults } from './options.js';\n\n/**\n * Contains all open channels,\n * used in tests to ensure everything is closed.\n */\nexport var OPEN_BROADCAST_CHANNELS = new Set();\nvar lastId = 0;\nexport var BroadcastChannel = function BroadcastChannel(name, options) {\n  // identifier of the channel to debug stuff\n  this.id = lastId++;\n  OPEN_BROADCAST_CHANNELS.add(this);\n  this.name = name;\n  if (ENFORCED_OPTIONS) {\n    options = ENFORCED_OPTIONS;\n  }\n  this.options = fillOptionsWithDefaults(options);\n  this.method = chooseMethod(this.options);\n\n  // isListening\n  this._iL = false;\n\n  /**\n   * _onMessageListener\n   * setting onmessage twice,\n   * will overwrite the first listener\n   */\n  this._onML = null;\n\n  /**\n   * _addEventListeners\n   */\n  this._addEL = {\n    message: [],\n    internal: []\n  };\n\n  /**\n   * Unsent message promises\n   * where the sending is still in progress\n   * @type {Set<Promise>}\n   */\n  this._uMP = new Set();\n\n  /**\n   * _beforeClose\n   * array of promises that will be awaited\n   * before the channel is closed\n   */\n  this._befC = [];\n\n  /**\n   * _preparePromise\n   */\n  this._prepP = null;\n  _prepareChannel(this);\n};\n\n// STATICS\n\n/**\n * used to identify if someone overwrites\n * window.BroadcastChannel with this\n * See methods/native.js\n */\nBroadcastChannel._pubkey = true;\n\n/**\n * clears the tmp-folder if is node\n * @return {Promise<boolean>} true if has run, false if not node\n */\nexport function clearNodeFolder(options) {\n  options = fillOptionsWithDefaults(options);\n  var method = chooseMethod(options);\n  if (method.type === 'node') {\n    return method.clearNodeFolder().then(function () {\n      return true;\n    });\n  } else {\n    return PROMISE_RESOLVED_FALSE;\n  }\n}\n\n/**\n * if set, this method is enforced,\n * no mather what the options are\n */\nvar ENFORCED_OPTIONS;\nexport function enforceOptions(options) {\n  ENFORCED_OPTIONS = options;\n}\n\n// PROTOTYPE\nBroadcastChannel.prototype = {\n  postMessage: function postMessage(msg) {\n    if (this.closed) {\n      throw new Error('BroadcastChannel.postMessage(): ' + 'Cannot post message after channel has closed ' +\n      /**\n       * In the past when this error appeared, it was really hard to debug.\n       * So now we log the msg together with the error so it at least\n       * gives some clue about where in your application this happens.\n       */\n      JSON.stringify(msg));\n    }\n    return _post(this, 'message', msg);\n  },\n  postInternal: function postInternal(msg) {\n    return _post(this, 'internal', msg);\n  },\n  set onmessage(fn) {\n    var time = this.method.microSeconds();\n    var listenObj = {\n      time: time,\n      fn: fn\n    };\n    _removeListenerObject(this, 'message', this._onML);\n    if (fn && typeof fn === 'function') {\n      this._onML = listenObj;\n      _addListenerObject(this, 'message', listenObj);\n    } else {\n      this._onML = null;\n    }\n  },\n  addEventListener: function addEventListener(type, fn) {\n    var time = this.method.microSeconds();\n    var listenObj = {\n      time: time,\n      fn: fn\n    };\n    _addListenerObject(this, type, listenObj);\n  },\n  removeEventListener: function removeEventListener(type, fn) {\n    var obj = this._addEL[type].find(function (obj) {\n      return obj.fn === fn;\n    });\n    _removeListenerObject(this, type, obj);\n  },\n  close: function close() {\n    var _this = this;\n    if (this.closed) {\n      return;\n    }\n    OPEN_BROADCAST_CHANNELS[\"delete\"](this);\n    this.closed = true;\n    var awaitPrepare = this._prepP ? this._prepP : PROMISE_RESOLVED_VOID;\n    this._onML = null;\n    this._addEL.message = [];\n    return awaitPrepare\n    // wait until all current sending are processed\n    .then(function () {\n      return Promise.all(Array.from(_this._uMP));\n    })\n    // run before-close hooks\n    .then(function () {\n      return Promise.all(_this._befC.map(function (fn) {\n        return fn();\n      }));\n    })\n    // close the channel\n    .then(function () {\n      return _this.method.close(_this._state);\n    });\n  },\n  get type() {\n    return this.method.type;\n  },\n  get isClosed() {\n    return this.closed;\n  }\n};\n\n/**\n * Post a message over the channel\n * @returns {Promise} that resolved when the message sending is done\n */\nfunction _post(broadcastChannel, type, msg) {\n  var time = broadcastChannel.method.microSeconds();\n  var msgObj = {\n    time: time,\n    type: type,\n    data: msg\n  };\n  var awaitPrepare = broadcastChannel._prepP ? broadcastChannel._prepP : PROMISE_RESOLVED_VOID;\n  return awaitPrepare.then(function () {\n    var sendPromise = broadcastChannel.method.postMessage(broadcastChannel._state, msgObj);\n\n    // add/remove to unsent messages list\n    broadcastChannel._uMP.add(sendPromise);\n    sendPromise[\"catch\"]().then(function () {\n      return broadcastChannel._uMP[\"delete\"](sendPromise);\n    });\n    return sendPromise;\n  });\n}\nfunction _prepareChannel(channel) {\n  var maybePromise = channel.method.create(channel.name, channel.options);\n  if (isPromise(maybePromise)) {\n    channel._prepP = maybePromise;\n    maybePromise.then(function (s) {\n      // used in tests to simulate slow runtime\n      /*if (channel.options.prepareDelay) {\n           await new Promise(res => setTimeout(res, this.options.prepareDelay));\n      }*/\n      channel._state = s;\n    });\n  } else {\n    channel._state = maybePromise;\n  }\n}\nfunction _hasMessageListeners(channel) {\n  if (channel._addEL.message.length > 0) return true;\n  if (channel._addEL.internal.length > 0) return true;\n  return false;\n}\nfunction _addListenerObject(channel, type, obj) {\n  channel._addEL[type].push(obj);\n  _startListening(channel);\n}\nfunction _removeListenerObject(channel, type, obj) {\n  channel._addEL[type] = channel._addEL[type].filter(function (o) {\n    return o !== obj;\n  });\n  _stopListening(channel);\n}\nfunction _startListening(channel) {\n  if (!channel._iL && _hasMessageListeners(channel)) {\n    // someone is listening, start subscribing\n\n    var listenerFn = function listenerFn(msgObj) {\n      channel._addEL[msgObj.type].forEach(function (listenerObject) {\n        if (msgObj.time >= listenerObject.time) {\n          listenerObject.fn(msgObj.data);\n        }\n      });\n    };\n    var time = channel.method.microSeconds();\n    if (channel._prepP) {\n      channel._prepP.then(function () {\n        channel._iL = true;\n        channel.method.onMessage(channel._state, listenerFn, time);\n      });\n    } else {\n      channel._iL = true;\n      channel.method.onMessage(channel._state, listenerFn, time);\n    }\n  }\n}\nfunction _stopListening(channel) {\n  if (channel._iL && !_hasMessageListeners(channel)) {\n    // no one is listening, stop subscribing\n    channel._iL = false;\n    var time = channel.method.microSeconds();\n    channel.method.onMessage(channel._state, null, time);\n  }\n}", "/* global WorkerGlobalScope */\n\nexport function addBrowser(fn) {\n  if (typeof WorkerGlobalScope === 'function' && self instanceof WorkerGlobalScope) {\n    /**\n     * Because killing a worker does directly stop the excution\n     * of the code, our only chance is to overwrite the close function\n     * which could work some times.\n     * @link https://stackoverflow.com/q/72903255/3443137\n     */\n    var oldClose = self.close.bind(self);\n    self.close = function () {\n      fn();\n      return oldClose();\n    };\n  } else {\n    /**\n     * if we are on react-native, there is no window.addEventListener\n     * @link https://github.com/pubkey/unload/issues/6\n     */\n    if (typeof window.addEventListener !== 'function') {\n      return;\n    }\n\n    /**\n     * for normal browser-windows, we use the beforeunload-event\n     */\n    window.addEventListener('beforeunload', function () {\n      fn();\n    }, true);\n\n    /**\n     * for iframes, we have to use the unload-event\n     * @link https://stackoverflow.com/q/47533670/3443137\n     */\n    window.addEventListener('unload', function () {\n      fn();\n    }, true);\n  }\n\n  /**\n   * TODO add fallback for safari-mobile\n   * @link https://stackoverflow.com/a/26193516/3443137\n   */\n}", "export function addNode(fn) {\n  process.on('exit', function () {\n    return fn();\n  });\n\n  /**\n   * on the following events,\n   * the process will not end if there are\n   * event-handlers attached,\n   * therefore we have to call process.exit()\n   */\n  process.on('beforeExit', function () {\n    return fn().then(function () {\n      return process.exit();\n    });\n  });\n  // catches ctrl+c event\n  process.on('SIGINT', function () {\n    return fn().then(function () {\n      return process.exit();\n    });\n  });\n  // catches uncaught exceptions\n  process.on('uncaughtException', function (err) {\n    return fn().then(function () {\n      console.trace(err);\n      process.exit(101);\n    });\n  });\n}", "import { addBrowser } from './browser.js';\nimport { addNode } from './node.js';\n\n/**\n * Use the code directly to prevent import problems\n * with the detect-node package.\n * @link https://github.com/iliakan/detect-node/blob/master/index.js\n */\nvar isNode = Object.prototype.toString.call(typeof process !== 'undefined' ? process : 0) === '[object process]';\nvar USE_METHOD = isNode ? addNode : addBrowser;\nvar LISTENERS = new Set();\nvar startedListening = false;\nfunction startListening() {\n  if (startedListening) {\n    return;\n  }\n  startedListening = true;\n  USE_METHOD(runAll);\n}\nexport function add(fn) {\n  startListening();\n  if (typeof fn !== 'function') {\n    throw new Error('Listener is no function');\n  }\n  LISTENERS.add(fn);\n  var addReturn = {\n    remove: function remove() {\n      return LISTENERS[\"delete\"](fn);\n    },\n    run: function run() {\n      LISTENERS[\"delete\"](fn);\n      return fn();\n    }\n  };\n  return addReturn;\n}\nexport function runAll() {\n  var promises = [];\n  LISTENERS.forEach(function (fn) {\n    promises.push(fn());\n    LISTENERS[\"delete\"](fn);\n  });\n  return Promise.all(promises);\n}\nexport function removeAll() {\n  LISTENERS.clear();\n}\nexport function getSize() {\n  return LISTENERS.size;\n}", "import { add as unloadAdd } from 'unload';\n\n/**\n * sends and internal message over the broadcast-channel\n */\nexport function sendLeaderMessage(leaderElector, action) {\n  var msgJson = {\n    context: 'leader',\n    action: action,\n    token: leaderElector.token\n  };\n  return leaderElector.broadcastChannel.postInternal(msgJson);\n}\nexport function beLeader(leaderElector) {\n  leaderElector.isLeader = true;\n  leaderElector._hasLeader = true;\n  var unloadFn = unloadAdd(function () {\n    return leaderElector.die();\n  });\n  leaderElector._unl.push(unloadFn);\n  var isLeaderListener = function isLeaderListener(msg) {\n    if (msg.context === 'leader' && msg.action === 'apply') {\n      sendLeaderMessage(leaderElector, 'tell');\n    }\n    if (msg.context === 'leader' && msg.action === 'tell' && !leaderElector._dpLC) {\n      /**\n       * another instance is also leader!\n       * This can happen on rare events\n       * like when the CPU is at 100% for long time\n       * or the tabs are open very long and the browser throttles them.\n       * @link https://github.com/pubkey/broadcast-channel/issues/414\n       * @link https://github.com/pubkey/broadcast-channel/issues/385\n       */\n      leaderElector._dpLC = true;\n      leaderElector._dpL(); // message the lib user so the app can handle the problem\n      sendLeaderMessage(leaderElector, 'tell'); // ensure other leader also knows the problem\n    }\n  };\n  leaderElector.broadcastChannel.addEventListener('internal', isLeaderListener);\n  leaderElector._lstns.push(isLeaderListener);\n  return sendLeaderMessage(leaderElector, 'tell');\n}", "import { randomToken } from './util.js';\nimport { sendLeaderMessage, beLeader } from './leader-election-util.js';\n\n/**\n * A faster version of the leader elector that uses the WebLock API\n * @link https://developer.mozilla.org/en-US/docs/Web/API/Web_Locks_API\n */\nexport var LeaderElectionWebLock = function LeaderElectionWebLock(broadcastChannel, options) {\n  var _this = this;\n  this.broadcastChannel = broadcastChannel;\n  broadcastChannel._befC.push(function () {\n    return _this.die();\n  });\n  this._options = options;\n  this.isLeader = false;\n  this.isDead = false;\n  this.token = randomToken();\n  this._lstns = [];\n  this._unl = [];\n  this._dpL = function () {}; // onduplicate listener\n  this._dpLC = false; // true when onduplicate called\n\n  this._wKMC = {}; // stuff for cleanup\n\n  // lock name\n  this.lN = 'pubkey-bc||' + broadcastChannel.method.type + '||' + broadcastChannel.name;\n};\nLeaderElectionWebLock.prototype = {\n  hasLeader: function hasLeader() {\n    var _this2 = this;\n    return navigator.locks.query().then(function (locks) {\n      var relevantLocks = locks.held ? locks.held.filter(function (lock) {\n        return lock.name === _this2.lN;\n      }) : [];\n      if (relevantLocks && relevantLocks.length > 0) {\n        return true;\n      } else {\n        return false;\n      }\n    });\n  },\n  awaitLeadership: function awaitLeadership() {\n    var _this3 = this;\n    if (!this._wLMP) {\n      this._wKMC.c = new AbortController();\n      var returnPromise = new Promise(function (res, rej) {\n        _this3._wKMC.res = res;\n        _this3._wKMC.rej = rej;\n      });\n      this._wLMP = new Promise(function (res) {\n        navigator.locks.request(_this3.lN, {\n          signal: _this3._wKMC.c.signal\n        }, function () {\n          // if the lock resolved, we can drop the abort controller\n          _this3._wKMC.c = undefined;\n          beLeader(_this3);\n          res();\n          return returnPromise;\n        })[\"catch\"](function () {});\n      });\n    }\n    return this._wLMP;\n  },\n  set onduplicate(_fn) {\n    // Do nothing because there are no duplicates in the WebLock version\n  },\n  die: function die() {\n    var _this4 = this;\n    this._lstns.forEach(function (listener) {\n      return _this4.broadcastChannel.removeEventListener('internal', listener);\n    });\n    this._lstns = [];\n    this._unl.forEach(function (uFn) {\n      return uFn.remove();\n    });\n    this._unl = [];\n    if (this.isLeader) {\n      this.isLeader = false;\n    }\n    this.isDead = true;\n    if (this._wKMC.res) {\n      this._wKMC.res();\n    }\n    if (this._wKMC.c) {\n      this._wKMC.c.abort('LeaderElectionWebLock.die() called');\n    }\n    return sendLeaderMessage(this, 'death');\n  }\n};", "import { sleep, randomToken, PROMISE_RESOLVED_VOID, PROMISE_RESOLVED_TRUE, supportsWebLockAPI } from './util.js';\nimport { sendLeaderMessage, beLeader } from './leader-election-util.js';\nimport { LeaderElectionWebLock } from './leader-election-web-lock.js';\nvar LeaderElection = function LeaderElection(broadcastChannel, options) {\n  var _this = this;\n  this.broadcastChannel = broadcastChannel;\n  this._options = options;\n  this.isLeader = false;\n  this._hasLeader = false;\n  this.isDead = false;\n  this.token = randomToken();\n\n  /**\n   * Apply Queue,\n   * used to ensure we do not run applyOnce()\n   * in parallel.\n   */\n  this._aplQ = PROMISE_RESOLVED_VOID;\n  // amount of unfinished applyOnce() calls\n  this._aplQC = 0;\n\n  // things to clean up\n  this._unl = []; // _unloads\n  this._lstns = []; // _listeners\n  this._dpL = function () {}; // onduplicate listener\n  this._dpLC = false; // true when onduplicate called\n\n  /**\n   * Even when the own instance is not applying,\n   * we still listen to messages to ensure the hasLeader flag\n   * is set correctly.\n   */\n  var hasLeaderListener = function hasLeaderListener(msg) {\n    if (msg.context === 'leader') {\n      if (msg.action === 'death') {\n        _this._hasLeader = false;\n      }\n      if (msg.action === 'tell') {\n        _this._hasLeader = true;\n      }\n    }\n  };\n  this.broadcastChannel.addEventListener('internal', hasLeaderListener);\n  this._lstns.push(hasLeaderListener);\n};\nLeaderElection.prototype = {\n  hasLeader: function hasLeader() {\n    return Promise.resolve(this._hasLeader);\n  },\n  /**\n   * Returns true if the instance is leader,\n   * false if not.\n   * @async\n   */\n  applyOnce: function applyOnce(\n  // true if the applyOnce() call came from the fallbackInterval cycle\n  isFromFallbackInterval) {\n    var _this2 = this;\n    if (this.isLeader) {\n      return sleep(0, true);\n    }\n    if (this.isDead) {\n      return sleep(0, false);\n    }\n\n    /**\n     * Already applying more than once,\n     * -> wait for the apply queue to be finished.\n     */\n    if (this._aplQC > 1) {\n      return this._aplQ;\n    }\n\n    /**\n     * Add a new apply-run\n     */\n    var applyRun = function applyRun() {\n      /**\n       * Optimization shortcuts.\n       * Directly return if a previous run\n       * has already elected a leader.\n       */\n      if (_this2.isLeader) {\n        return PROMISE_RESOLVED_TRUE;\n      }\n      var stopCriteria = false;\n      var stopCriteriaPromiseResolve;\n      /**\n       * Resolves when a stop criteria is reached.\n       * Uses as a performance shortcut so we do not\n       * have to await the responseTime when it is already clear\n       * that the election failed.\n       */\n      var stopCriteriaPromise = new Promise(function (res) {\n        stopCriteriaPromiseResolve = function stopCriteriaPromiseResolve() {\n          stopCriteria = true;\n          res();\n        };\n      });\n      var handleMessage = function handleMessage(msg) {\n        if (msg.context === 'leader' && msg.token != _this2.token) {\n          if (msg.action === 'apply') {\n            // other is applying\n            if (msg.token > _this2.token) {\n              /**\n               * other has higher token\n               * -> stop applying and let other become leader.\n               */\n              stopCriteriaPromiseResolve();\n            }\n          }\n          if (msg.action === 'tell') {\n            // other is already leader\n            stopCriteriaPromiseResolve();\n            _this2._hasLeader = true;\n          }\n        }\n      };\n      _this2.broadcastChannel.addEventListener('internal', handleMessage);\n\n      /**\n       * If the applyOnce() call came from the fallbackInterval,\n       * we can assume that the election runs in the background and\n       * not critical process is waiting for it.\n       * When this is true, we give the other instances\n       * more time to answer to messages in the election cycle.\n       * This makes it less likely to elect duplicate leaders.\n       * But also it takes longer which is not a problem because we anyway\n       * run in the background.\n       */\n      var waitForAnswerTime = isFromFallbackInterval ? _this2._options.responseTime * 4 : _this2._options.responseTime;\n      return sendLeaderMessage(_this2, 'apply') // send out that this one is applying\n      .then(function () {\n        return Promise.race([sleep(waitForAnswerTime), stopCriteriaPromise.then(function () {\n          return Promise.reject(new Error());\n        })]);\n      })\n      // send again in case another instance was just created\n      .then(function () {\n        return sendLeaderMessage(_this2, 'apply');\n      })\n      // let others time to respond\n      .then(function () {\n        return Promise.race([sleep(waitForAnswerTime), stopCriteriaPromise.then(function () {\n          return Promise.reject(new Error());\n        })]);\n      })[\"catch\"](function () {}).then(function () {\n        _this2.broadcastChannel.removeEventListener('internal', handleMessage);\n        if (!stopCriteria) {\n          // no stop criteria -> own is leader\n          return beLeader(_this2).then(function () {\n            return true;\n          });\n        } else {\n          // other is leader\n          return false;\n        }\n      });\n    };\n    this._aplQC = this._aplQC + 1;\n    this._aplQ = this._aplQ.then(function () {\n      return applyRun();\n    }).then(function () {\n      _this2._aplQC = _this2._aplQC - 1;\n    });\n    return this._aplQ.then(function () {\n      return _this2.isLeader;\n    });\n  },\n  awaitLeadership: function awaitLeadership() {\n    if (/* _awaitLeadershipPromise */\n    !this._aLP) {\n      this._aLP = _awaitLeadershipOnce(this);\n    }\n    return this._aLP;\n  },\n  set onduplicate(fn) {\n    this._dpL = fn;\n  },\n  die: function die() {\n    var _this3 = this;\n    this._lstns.forEach(function (listener) {\n      return _this3.broadcastChannel.removeEventListener('internal', listener);\n    });\n    this._lstns = [];\n    this._unl.forEach(function (uFn) {\n      return uFn.remove();\n    });\n    this._unl = [];\n    if (this.isLeader) {\n      this._hasLeader = false;\n      this.isLeader = false;\n    }\n    this.isDead = true;\n    return sendLeaderMessage(this, 'death');\n  }\n};\n\n/**\n * @param leaderElector {LeaderElector}\n */\nfunction _awaitLeadershipOnce(leaderElector) {\n  if (leaderElector.isLeader) {\n    return PROMISE_RESOLVED_VOID;\n  }\n  return new Promise(function (res) {\n    var resolved = false;\n    function finish() {\n      if (resolved) {\n        return;\n      }\n      resolved = true;\n      leaderElector.broadcastChannel.removeEventListener('internal', whenDeathListener);\n      res(true);\n    }\n\n    // try once now\n    leaderElector.applyOnce().then(function () {\n      if (leaderElector.isLeader) {\n        finish();\n      }\n    });\n\n    /**\n     * Try on fallbackInterval\n     * @recursive\n     */\n    var tryOnFallBack = function tryOnFallBack() {\n      return sleep(leaderElector._options.fallbackInterval).then(function () {\n        if (leaderElector.isDead || resolved) {\n          return;\n        }\n        if (leaderElector.isLeader) {\n          finish();\n        } else {\n          return leaderElector.applyOnce(true).then(function () {\n            if (leaderElector.isLeader) {\n              finish();\n            } else {\n              tryOnFallBack();\n            }\n          });\n        }\n      });\n    };\n    tryOnFallBack();\n\n    // try when other leader dies\n    var whenDeathListener = function whenDeathListener(msg) {\n      if (msg.context === 'leader' && msg.action === 'death') {\n        leaderElector._hasLeader = false;\n        leaderElector.applyOnce().then(function () {\n          if (leaderElector.isLeader) {\n            finish();\n          }\n        });\n      }\n    };\n    leaderElector.broadcastChannel.addEventListener('internal', whenDeathListener);\n    leaderElector._lstns.push(whenDeathListener);\n  });\n}\nfunction fillOptionsWithDefaults(options, channel) {\n  if (!options) options = {};\n  options = JSON.parse(JSON.stringify(options));\n  if (!options.fallbackInterval) {\n    options.fallbackInterval = 3000;\n  }\n  if (!options.responseTime) {\n    options.responseTime = channel.method.averageResponseTime(channel.options);\n  }\n  return options;\n}\nexport function createLeaderElection(channel, options) {\n  if (channel._leaderElector) {\n    throw new Error('BroadcastChannel already has a leader-elector');\n  }\n  options = fillOptionsWithDefaults(options, channel);\n  var elector = supportsWebLockAPI() ? new LeaderElectionWebLock(channel, options) : new LeaderElection(channel, options);\n  channel._befC.push(function () {\n    return elector.die();\n  });\n  channel._leaderElector = elector;\n  return elector;\n}", "/**\n * When a persistent RxStorage is used in more the one JavaScript process,\n * the even stream of the changestream() function must be broadcasted to the other\n * RxStorageInstances of the same databaseName+collectionName.\n *\n * In the past this was done by RxDB but it makes more sense to do this\n * at the RxStorage level so that the broadcasting etc can all happen inside of a WebWorker\n * and not on the main thread.\n * Also it makes it less complex to stack up different RxStorages onto each other\n * like what we do with the in-memory plugin.\n *\n * This is intended to be used inside of createStorageInstance() of a storage.\n * Do not use this if the storage anyway broadcasts the events like when using MongoDB\n * or in the future W3C might introduce a way to listen to IndexedDB changes.\n */\n\nimport { Subject } from 'rxjs';\nimport { mergeWith } from 'rxjs/operators';\nimport { BroadcastChannel } from 'broadcast-channel';\n\n/**\n * The broadcast-channel is reused by the databaseInstanceToken.\n * This is required so that it is easy to simulate multi-tab usage\n * in the test where different instances of the same RxDatabase must\n * have different broadcast channels.\n * But also it ensures that for each RxDatabase we only create a single\n * broadcast channel that can even be reused in the leader election plugin.\n */\nexport var BROADCAST_CHANNEL_BY_TOKEN = new Map();\nexport function getBroadcastChannelReference(storageName, databaseInstanceToken, databaseName, refObject) {\n  var state = BROADCAST_CHANNEL_BY_TOKEN.get(databaseInstanceToken);\n  if (!state) {\n    state = {\n      /**\n       * We have to use the databaseName instead of the databaseInstanceToken\n       * in the BroadcastChannel name because different instances must end with the same\n       * channel name to be able to broadcast messages between each other.\n       */\n      bc: new BroadcastChannel(['RxDB:', storageName, databaseName].join('|')),\n      refs: new Set()\n    };\n    BROADCAST_CHANNEL_BY_TOKEN.set(databaseInstanceToken, state);\n  }\n  state.refs.add(refObject);\n  return state.bc;\n}\nexport function removeBroadcastChannelReference(databaseInstanceToken, refObject) {\n  var state = BROADCAST_CHANNEL_BY_TOKEN.get(databaseInstanceToken);\n  if (!state) {\n    return;\n  }\n  state.refs.delete(refObject);\n  if (state.refs.size === 0) {\n    BROADCAST_CHANNEL_BY_TOKEN.delete(databaseInstanceToken);\n    return state.bc.close();\n  }\n}\nexport function addRxStorageMultiInstanceSupport(storageName, instanceCreationParams, instance,\n/**\n * If provided, that channel will be used\n * instead of an own one.\n */\nprovidedBroadcastChannel) {\n  if (!instanceCreationParams.multiInstance) {\n    return;\n  }\n  var broadcastChannel = providedBroadcastChannel ? providedBroadcastChannel : getBroadcastChannelReference(storageName, instanceCreationParams.databaseInstanceToken, instance.databaseName, instance);\n  var changesFromOtherInstances$ = new Subject();\n  var eventListener = msg => {\n    if (msg.storageName === storageName && msg.databaseName === instanceCreationParams.databaseName && msg.collectionName === instanceCreationParams.collectionName && msg.version === instanceCreationParams.schema.version) {\n      changesFromOtherInstances$.next(msg.eventBulk);\n    }\n  };\n  broadcastChannel.addEventListener('message', eventListener);\n  var oldChangestream$ = instance.changeStream();\n  var closed = false;\n  var sub = oldChangestream$.subscribe(eventBulk => {\n    if (closed) {\n      return;\n    }\n    broadcastChannel.postMessage({\n      storageName: storageName,\n      databaseName: instanceCreationParams.databaseName,\n      collectionName: instanceCreationParams.collectionName,\n      version: instanceCreationParams.schema.version,\n      eventBulk\n    });\n  });\n  instance.changeStream = function () {\n    return changesFromOtherInstances$.asObservable().pipe(mergeWith(oldChangestream$));\n  };\n  var oldClose = instance.close.bind(instance);\n  instance.close = async function () {\n    closed = true;\n    sub.unsubscribe();\n    broadcastChannel.removeEventListener('message', eventListener);\n    if (!providedBroadcastChannel) {\n      await removeBroadcastChannelReference(instanceCreationParams.databaseInstanceToken, instance);\n    }\n    return oldClose();\n  };\n  var oldRemove = instance.remove.bind(instance);\n  instance.remove = async function () {\n    closed = true;\n    sub.unsubscribe();\n    broadcastChannel.removeEventListener('message', eventListener);\n    if (!providedBroadcastChannel) {\n      await removeBroadcastChannelReference(instanceCreationParams.databaseInstanceToken, instance);\n    }\n    return oldRemove();\n  };\n}\n"],
  "mappings": "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",
  "names": ["type", "fieldName", "operation", "type", "self", "compare", "$nin", "$eq", "$gt", "$gte", "$lt", "$lte", "$ne", "$eq", "$gt", "$gte", "$in", "$lt", "$lte", "$ne", "$nin", "$mod", "$regex", "$all", "$elemMatch", "$size", "$exists", "$type", "$eq", "$elemMatch", "$exists", "$gt", "$gte", "$in", "$lt", "$lte", "$ne", "$nin", "$mod", "$regex", "$size", "$type", "document", "randomToken", "microSeconds", "now", "microSeconds", "type", "create", "randomToken", "close", "postMessage", "onMessage", "canBeUsed", "averageResponseTime", "type", "microSeconds", "microSeconds", "type", "postMessage", "randomToken", "listener", "create", "canBeUsed", "close", "onMessage", "averageResponseTime", "microSeconds", "type", "create", "close", "postMessage", "onMessage", "canBeUsed", "averageResponseTime", "BroadcastChannel", "BroadcastChannel", "postMessage", "type", "obj", "close", "listenerFn", "isLeaderListener", "LeaderElectionWebLock", "randomToken", "LeaderElection", "randomToken", "hasLeaderListener", "hasLeader", "applyRun", "stopCriteriaPromiseResolve", "handleMessage", "awaitLeadership", "die", "tryOnFallBack", "whenDeathListener", "fillOptionsWithDefaults", "BroadcastChannel"]
}
